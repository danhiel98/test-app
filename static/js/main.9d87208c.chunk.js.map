{"version":3,"sources":["components/PageHeader.js","firebaseConfig.js","components/navigation/HeaderNavigation.js","components/Sidebar.js","components/navigation/SidebarNavigation.js","App.js","actions/userActions.js","pages/Login.js","components/dashboard/DashboardOptions.js","components/navigation/DashboardNavigation.js","components/Tabla.js","components/reportes/Talonario.js","components/reportes/Contrato.js","components/contratos/ModalDetalle.js","components/clientes/ModalDetalle.js","components/contratos/ModalDesactivar.js","components/contratos/ContratosMora.js","pages/Dashboard.js","components/clientes/ModalDatos.js","components/clientes/Clientes.js","components/contratos/ModalDatos.js","components/contratos/Contratos.js","components/mantenimientos/ModalDatos.js","components/mantenimientos/Mantenimientos.js","components/reportes/Factura.js","components/facturas/ModalDatos.js","components/facturas/ModalDetalle.js","components/facturas/Facturas.js","components/pagos/ModalDetalle.js","components/pagos/Pagos.js","seeds/Seed.js","Router.js","serviceWorker.js","reducers/index.js","reducers/userReducer.js","store/configureStore.js","index.js","NumerosALetras.js"],"names":["Header","Layout","SubMenu","Menu","PageHeader","style","position","zIndex","width","span","cursor","onClick","this","props","goHome","offset","theme","textAlign","mode","title","user","displayName","email","marginLeft","icon","UserOutlined","Item","logOut","key","Component","connect","state","ownState","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","HeaderNavigation","dispatch","push","bind","auth","signOut","then","result","catch","error","console","log","React","ownProps","Sider","Sidebar","collapsed","onCollapse","setState","collapsible","marginTop","defaultSelectedKeys","selectedKeys","selected","HomeOutlined","FileTextOutlined","goContracts","DollarOutlined","goPayments","SmileOutlined","goClients","FileDoneOutlined","goInvoices","ToolOutlined","goMaintenances","SidebarNavigation","goNewPayment","Content","App","minHeight","className","location","pathname","substr","margin","children","login","type","Title","Typography","Login","signIn","values","a","usuario","clave","signInWithEmailAndPassword","actions","message","justify","align","xs","sm","md","lg","xl","name","initialValues","remember","onFinish","rules","required","prefix","placeholder","LockOutlined","valuePropName","noStyle","block","htmlType","Meta","Card","DashboardOptions","gutter","bordered","bodyStyle","padding","fontSize","description","DashboardNavigation","Tabla","pagination","columns","columnas","data","datos","loading","size","titulo","showHeader","top","bottom","tableColumns","map","item","defaultPageSize","dataSource","update","Font","register","family","src","process","months","formatoDinero","num","Intl","NumberFormat","currency","format","styles","StyleSheet","create","mainContainer","right","firstBaseContainer","borderWidth","borderColor","paddingTop","paddingBottom","baseContainer","absoluteVertical","height","borderStyle","entryContainer","marginRight","borderRadius","paddingRight","cardContainer","flexDirection","leftColumn","display","rightColumn","borderLeft","borderBottom","flowFlex","barcode","barcodeText","textDecoration","lineHeight","fontWeight","subtitle","textNumeroCuota","color","numeroCuota","fontFamily","datoPago","valorPago","border","paddingLeft","fechaVencimiento","customerContainer","field","duiField","value","duiValue","leftDataColumn","rightDataColumn","Entry","code","fecha","places","cuota","cliente","dui","tipo","break","next","id","String","padStart","toUpperCase","fecha_pago","toDate","getDate","getMonth","getFullYear","cantidad","codigo","Talonario","contrato","cuotas","cuotasOrdenadas","chunks","cntPages","Math","ceil","length","i","slice","j","ordenarCuotas","wrap","dui_cliente","NumerosALetras","require","opcFecha","year","month","verFecha","toLocaleString","body","paddingHorizontal","header","marginHorizontal","marginBottom","headerImage","opacity","headerText","paddingVertical","marginVertical","textContainer","flexWrap","text","textValue","listContainer","sublistContainer","orderedListContainer","otherListContainer","itemDecoration","listItem","sublistItem","orderedListItem","signContainer","signItem","Contrato","fixed","nit","direccion","fecha_inicio","fecha_fin","default","velocidad","precio_cuota","cant_cuotas","fecha_ingreso","capitalize","s","charAt","colorEstado","estado","ret","Date","seconds","toLocaleDateString","obtenerContrato","ref","auxRecord","get","doc","exists","obtenerCuotas","auxCuotas","snapshot","forEach","ModalDetalle","codigoContrato","useState","loadingRecord","setLoadingRecord","loadingCuotas","setLoadingCuotas","record","setRecord","setCuotas","useEffect","firestore","collection","res","finally","usr","download","pdf","toBlob","file","csvURL","window","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","click","descargarDocumento","ref_cliente","visible","onCancel","handleCancel","footer","flex","CloudDownloadOutlined","red","ip","split","overflowY","renderItem","cancelado","motivo_inactivo","obtenerCliente","obtenerContratos","auxContratos","codigoCliente","loadingCliente","setLoadingCliente","loadingContratos","setLoadingContratos","setCliente","contratos","setContratos","refCliente","refContratos","where","maxWidth","nombre","apellido","telefono","target","ModalDesactivar","Form","useForm","form","setLoading","refContrato","validateFields","val","motivo","success","info","label","requiredMark","confirm","Modal","Search","Input","opcFechaC","day","cFecha","c","opc","Contratos","querySnapshot","busqueda","ultima_cuota_pagada","ultimo_mes_pagado","fecha_ultimo_mes_pagado","toLowerCase","indexOf","obtenerRedes","redes","numero","obtenerClientes","clientes","modalDesactivarContrato","modalDesactivar","registro","modalDetalle","modalDetalleCliente","irA","ruta","unsubscribe","verDetalle","verDetalleCliente","asignarColumnas","desactivar","me","ExclamationCircleOutlined","content","okText","cancelText","onOk","mainRef","refClientes","refRedes","refPagos","refMantenimientos","Timestamp","now","orderBy","onSnapshot","prevState","newState","valor","sorter","compare","b","toString","localeCompare","filters","onFilter","render","count","backgroundColor","moment","unix","StopOutlined","subTitle","extra","onSearch","buscar","filter","index","self","sort","Dashboard","ContratosMora","atrasados","ModalDatos","refPago","refMantenimiento","cli","setFieldsValue","resetFields","handleOk","editarRegistro","agregarRegistro","add","activo","eliminado","fecha_creacion","docRef","qs","nombre_cliente","Clientes","modalData","confirmEliminar","eliminarCliente","contratosCliente","Promise","resolve","reject","limit","err","delete","eliminar","destroy","visibleDelete","EditOutlined","DeleteOutlined","ghost","Option","Select","fireRef","setRed","setIP","stValidacionIP","setStValidacionIP","msgValidacionIP","setMsgValidacionIP","cantCuotas","setCantCuotas","fechaInicio","setFechaInicio","fechaFin","setFechaFin","refIP","cantPagos","doc_cliente","id_cliente","zeroPad","statusIP","ref_ip","libre","validarIP","Number","warning","set","fechaPago","_codContrato","_red","parseInt","setMonth","selectRedes","onSelect","disabled","Error","isNaN","allowClear","showSearch","optionFilterProp","filterOption","input","option","min","max","step","formatter","parser","replace","hasFeedback","validateStatus","help","addonBefore","onChange","ev","onBlur","cnt","picker","locale","disabledDate","current","subtract","date","eliminarContrato","pagosMantenimientosContrato","refIPs","d_ip","setContrato","setFecha","codigo_contrato","d_contrato","descripcion","validarContrato","endOf","maxLength","Mantenimientos","obtenerMantenimientos","mantenimientos","mantenimiento","eliminarMantenimiento","detalleContrato","detalleCliente","verDetalleContrato","opcFecha2","dateContanier","dataValue","descriptionValue","nameContainer","descriptionContainer","quantityColum","divider","descriptionColumn","textOverflow","unitPriceColumn","priceValue","taxedSalesColumn","finalContainer","textTotalContainer","totalsContainer","sumsContainer","pago","fecha_cuota","Factura","factura","pagosMoraEx","mora_exonerada","precio_mora","pagosMora","cantPagosMora","cantPagosMoraEx","datoMora","mesesMora","mesesMoraEx","precioUnitario","total","idx","num_cuota","total_letras","todo","fechaMayor","fechaComparacion","f1","f2","getYear","setTotal","mora","setMora","sumas","setSumas","pagos","setPagos","setBarcode","loadingPagos","setLoadingPagos","stValidacionContrato","setStValidacionContrato","msgValidacionContrato","setMsgValidacionContrato","refFacturas","cantidad_pagos","round","FieldValue","serverTimestamp","facturado","agregarPago","test","exist","anteriorCancelado","_ip","codContrato","cont","numCuota","d_cuota","numero_cuota","cargarContratos","id_contrato","cargarPagos","warn","alternarExoneracionMora","eliminarPago","siguienteCancelada","ultimaCuotaPagada","ultimoMesPagado","fechaUltimoMesPagado","d_pago","codCliente","find","auxPagos","auxSumas","auxMora","SelectFecha","CheckCircleOutlined","dataIndex","trigger","CalendarOutlined","ExceptionOutlined","cant","BarcodeOutlined","autoFocus","onKeyUp","keyCode","obtenerFactura","codigoFactura","SelectNumero","cambiarNumero","onPressEnter","Facturas","obtenerFacturas","facturas","modalDetalleContrato","ultimaCuota","numUltimaCuota","siguienteFacturado","eliminarFactura","InfoCircleOutlined","obtenerPago","codigoPago","verUsuario","selecFechaPago","Pagos","hide","selectFechaVisible","handleVisibleChange","obtenerPagos","exonerarMora","onBack","Seed","makeData","seedCientes","setAvailableIPs","refIps","seedRedes","seedIps","faker","phone","phoneNumber","firstName","lastName","address","city","direction","seedContratos","ips","random","number","past","mes_inicio","mes_fin","f_inicio","f_fin","float","seedPagos","seedMantenimientos","mantto","lorem","words","paragraph","seedFacturas","periodo","detalle","precio_pago","clearData","pRedes","rollback","pIps","pClientes","pContratos","pPagos","all","subRef","path","dc","fake","Router","onAuthStateChanged","history","exact","component","signedIn","to","Boolean","hostname","match","action","createHashHistory","store","createStore","combineReducers","reducers","router","connectRouter","rootReducer","compose","applyMiddleware","routerMiddleware","persistState","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","capitalizeFirst","str","Unidades","Decenas","decena","floor","unidad","DecenasY","strSin","numUnidades","Centenas","centenas","decenas","Seccion","divisor","strSingular","strPlural","cientos","resto","letras","Millones","strMillones","strMiles","strCentenas","Miles","NumeroALetras","dinero","enteros","centavos","letrasCentavos","letrasMonedaPlural","letrasMonedaSingular"],"mappings":"yUAOQA,EAAWC,IAAXD,OACAE,EAAYC,IAAZD,QAEFE,E,uKAIE,OACI,oCACI,kBAACJ,EAAD,CAAQK,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,SAClD,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAKC,KAAM,EAAGJ,MAAQ,CAAEK,OAAQ,WAAcC,QAAUC,KAAKC,MAAMC,QAAnE,QAIA,kBAAC,IAAD,CAAKL,KAAM,EAAGM,OAAQ,IAClB,kBAAC,IAAD,CAAMC,MAAM,QAAQX,MAAQ,CAAEY,UAAW,SAAYC,KAAK,cAKtD,kBAAChB,EAAD,CAASiB,MACL,kBAAC,WAAD,KACI,kCAASP,KAAKC,MAAMO,KAAKA,KAAKC,YAAcT,KAAKC,MAAMO,KAAKA,KAAKC,YAAcT,KAAKC,MAAMO,KAAKA,KAAKE,MAApG,KACA,kBAAC,IAAD,CAAQjB,MAAO,CAAEkB,WAAY,GAAKC,KAAM,kBAACC,EAAA,EAAD,UAG5C,kBAAC,IAAKC,KAAN,CAAWf,QAASC,KAAKC,MAAMc,OAAQC,IAAI,UAA3C,8B,GAzBXC,aA0CVC,mBANf,SAAyBC,EAAOC,GAC5B,MAAO,CACHZ,KAAMW,EAAMX,QAILU,CAAyB1B,G,yBC3BzB6B,G,OAFHC,gBApBW,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBCLbC,E,kDACF,WAAY9B,GAAO,IAAD,8BACd,cAAMA,IAMVC,OAAS,kBAAM,EAAKD,MAAM+B,SAASC,YAAK,OAJpC,EAAK/B,OAAS,EAAKA,OAAOgC,KAAZ,gBACd,EAAKnB,OAAS,EAAKA,OAAOmB,KAAZ,gBAJA,E,0LAURb,EACDc,OACAC,UACAC,MAAM,SAAAC,GACH,EAAKrC,MAAM+B,SAASC,YAAK,cAE5BM,OAAM,SAAAC,GACHC,QAAQC,IAAIF,M,gIAKpB,OACI,kBAAC,EAAD,CACItC,OAAQF,KAAKE,OACba,OAAQf,KAAKe,a,GA1BE4B,IAAM1B,WAsCtBC,mBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyBa,G,4DChChCc,EAAUxD,IAAVwD,MAEaC,E,4MACjB3B,MAAQ,CACJ4B,WAAW,G,EAGfC,WAAa,SAAAD,GACT,EAAKE,SAAS,CAAEF,e,uDAKhB,OACI,kBAACF,EAAD,CACIK,aAAW,EACXH,UAAW/C,KAAKmB,MAAM4B,UACtBC,WAAYhD,KAAKgD,WACjBvD,MAAQ,CAAE0D,UAAW,QACrB/C,MAAM,SAEN,kBAAC,IAAD,CAAMA,MAAM,QAAQgD,oBAAqB,CAAC,QAASC,aAAc,CAACrD,KAAKC,MAAMqD,UAAWhD,KAAK,UACzF,kBAAC,IAAKQ,KAAN,CAAWE,IAAI,SAASJ,KAAM,kBAAC2C,EAAA,EAAD,MAAkBxD,QAASC,KAAKC,MAAMC,QAApE,UAGA,kBAAC,IAAKY,KAAN,CAAWE,IAAI,YAAYJ,KAAM,kBAAC4C,EAAA,EAAD,MAAsBzD,QAASC,KAAKC,MAAMwD,aAA3E,aAGA,kBAAC,IAAK3C,KAAN,CAAWE,IAAI,QAAQJ,KAAM,kBAAC8C,EAAA,EAAD,MAAoB3D,QAASC,KAAKC,MAAM0D,YAArE,SAGA,kBAAC,IAAK7C,KAAN,CAAWE,IAAI,WAAWJ,KAAM,kBAACgD,EAAA,EAAD,MAAmB7D,QAASC,KAAKC,MAAM4D,WAAvE,YAGA,kBAAC,IAAK/C,KAAN,CAAWE,IAAI,WAAWJ,KAAM,kBAACkD,EAAA,EAAD,MAAsB/D,QAASC,KAAKC,MAAM8D,YAA1E,kBAGA,kBAAC,IAAKjD,KAAN,CAAWE,IAAI,iBAAiBJ,KAAM,kBAACoD,EAAA,EAAD,MAAkBjE,QAASC,KAAKC,MAAMgE,gBAA5E,wB,GAnCiBhD,aCT/BiD,E,kDAGF,WAAYjE,GAAO,IAAD,8BACd,cAAMA,IAWVC,OAAS,kBAAM,EAAKD,MAAM+B,SAASC,YAAK,OAZtB,EAalBkC,aAAe,kBAAM,EAAKlE,MAAM+B,SAASC,YAAK,kBAb5B,EAclB4B,UAAY,kBAAM,EAAK5D,MAAM+B,SAASC,YAAK,eAdzB,EAelBwB,YAAc,kBAAM,EAAKxD,MAAM+B,SAASC,YAAK,gBAf3B,EAgBlB0B,WAAa,kBAAM,EAAK1D,MAAM+B,SAASC,YAAK,YAhB1B,EAiBlB8B,WAAa,kBAAM,EAAK9D,MAAM+B,SAASC,YAAK,eAjB1B,EAkBlBgC,eAAiB,kBAAM,EAAKhE,MAAM+B,SAASC,YAAK,qBAf5C,EAAK/B,OAAS,EAAKA,OAAOgC,KAAZ,gBACd,EAAKiC,aAAe,EAAKA,aAAajC,KAAlB,gBACpB,EAAK2B,UAAY,EAAKA,UAAU3B,KAAf,gBACjB,EAAKuB,YAAc,EAAKA,YAAYvB,KAAjB,gBACnB,EAAKyB,WAAa,EAAKA,WAAWzB,KAAhB,gBAClB,EAAK6B,WAAa,EAAKA,WAAW7B,KAAhB,gBAClB,EAAK+B,eAAiB,EAAKA,eAAe/B,KAApB,gBATR,E,qDAqBd,OACI,kBAAC,EAAD,CACIhC,OAAQF,KAAKE,OACbiE,aAAcnE,KAAKmE,aACnBN,UAAW7D,KAAK6D,UAChBJ,YAAazD,KAAKyD,YAClBE,WAAY3D,KAAK2D,WACjBI,WAAY/D,KAAK+D,WACjBE,eAAgBjE,KAAKiE,eACrBX,SAAUtD,KAAKC,MAAMqD,e,GAjCLrC,aA6CjBC,mBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyBgD,GCxChCE,EAAY/E,IAAZ+E,QAqBOC,E,uKAhBP,OACI,oCACI,kBAAC,IAAD,CAAQ5E,MAAO,CAAE6E,UAAW,UACxB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQC,UAAU,eACd,kBAAC,EAAD,CAAmBjB,SAAUtD,KAAKC,MAAMuE,SAASC,SAASC,OAAO,IAAM,WACvE,kBAACN,EAAD,CAAS3E,MAAO,CAAEkF,OAAQ,cACpB3E,KAAKC,MAAM2E,iB,GAVvB3D,aCZX,SAAS4D,EAAMrE,GAClB,MAAO,CAAEsE,KAAM,SAAUtE,Q,gFCQrBuE,GAAUC,IAAVD,MAEFE,G,4MASFC,O,uCAAS,WAAOC,GAAP,iBAAAC,EAAA,6DACGC,EAAmBF,EAAnBE,QAASC,EAAUH,EAAVG,MADZ,SAECjE,EACDc,OACAoD,2BAA2BF,EAASC,GACpCjD,MAAK,SAAAC,GACF,EAAKrC,MAAM+B,SAASwD,EAAclD,EAAO9B,OACzC,EAAKP,MAAM+B,SAASC,YAAK,SAE5BM,OAAM,SAAAC,GACHiD,IAAQjD,MAAR,yCACAC,QAAQC,IAAIF,EAAMiD,YAXrB,2C,6GAgBL,OACI,oCACI,kBAAC,IAAD,CAAQlB,UAAU,UACd,kBAAC,IAAD,CAAKmB,QAAQ,eAAeC,MAAM,UAC9B,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGvG,MAAQ,CAAE0D,UAAW,SAC5D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKtD,KAAM,IACP,kBAACkF,GAAD,CAAOtF,MAAQ,CAAEY,UAAW,WAA5B,WAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI4F,KAAK,eACL1B,UAAU,aACV2B,cAAe,CACXC,UAAU,GAEdC,SAAUpG,KAAKkF,QAEf,kBAAC,IAAKpE,KAAN,CACImF,KAAK,UACLI,MAAO,CACP,CACIC,UAAU,EACVb,QAAS,0CAIb,kBAAC,IAAD,CAAOc,OAAQ,kBAAC1F,EAAA,EAAD,CAAc0D,UAAU,wBAA0BiC,YAAY,uBAEjF,kBAAC,IAAK1F,KAAN,CACImF,KAAK,QACLI,MAAO,CACP,CACIC,UAAU,EACVb,QAAS,uCAIb,kBAAC,IAAD,CACAc,OAAQ,kBAACE,EAAA,EAAD,CAAclC,UAAU,wBAChCO,KAAK,WACL0B,YAAY,mBAGhB,kBAAC,IAAK1F,KAAN,KACI,kBAAC,IAAKA,KAAN,CAAWmF,KAAK,WAAWS,cAAc,UAAUC,SAAO,GACtD,kBAAC,IAAD,8BAIR,kBAAC,IAAK7F,KAAN,KACI,kBAAC,IAAD,CAAQgE,KAAK,UAAU8B,OAAK,EAACC,SAAS,SAAStC,UAAU,qBAAzD,sB,GA7EpBtD,aAkGLC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyB+D,I,WCnGhC6B,GAASC,IAATD,KA4FOE,G,uKAvFP,OACI,kBAAC,IAAD,CAAKC,OAAQ,IACT,kBAAC,IAAD,CAAKlB,GAAI,GACL,kBAAC,IAAD,CACImB,UAAU,EACVC,UAAW,CACPC,QAAS,aAEb3H,MAAQ,CAAEK,OAAQ,WAClBC,QAASC,KAAKC,MAAMwD,aAEpB,kBAAC,KAAD,KACI,kBAACD,EAAA,EAAD,CAAkB/D,MAAQ,CAAE4H,SAAU,UACtC,kBAACP,GAAD,CAAMvG,MACF,kBAAC,WAAD,KACI,0BAAMd,MAAQ,CAAE4H,SAAU,SAA1B,gBAGRC,YAAY,0BAIxB,kBAAC,IAAD,CAAKvB,GAAI,GACL,kBAAC,IAAD,CACImB,UAAU,EACVC,UAAW,CACPC,QAAS,aAEb3H,MAAQ,CAAEK,OAAQ,WAClBC,QAASC,KAAKC,MAAM0D,YAEpB,kBAAC,KAAD,KACI,kBAACD,EAAA,EAAD,CAAiBjE,MAAQ,CAAE4H,SAAU,UACrC,kBAACP,GAAD,CAAMvG,MACF,kBAAC,WAAD,KACI,0BAAMd,MAAQ,CAAE4H,SAAU,SAA1B,YAGRC,YAAY,yBAIxB,kBAAC,IAAD,CAAKvB,GAAI,GACL,kBAAC,IAAD,CACImB,UAAU,EACVC,UAAW,CACPC,QAAS,aAEb3H,MAAQ,CAAEK,OAAQ,WAClBC,QAASC,KAAKC,MAAM4D,WAEpB,kBAAC,KAAD,KACI,kBAACD,EAAA,EAAD,CAAgBnE,MAAQ,CAAE4H,SAAU,UACpC,kBAACP,GAAD,CAAMvG,MACF,kBAAC,WAAD,KACI,0BAAMd,MAAQ,CAAE4H,SAAU,SAA1B,eAGRC,YAAY,yBAIxB,kBAAC,IAAD,CAAKvB,GAAI,GACL,kBAAC,IAAD,CACImB,UAAU,EACVC,UAAW,CACPC,QAAS,aAEb3H,MAAQ,CAAEK,OAAQ,WAClBC,QAASC,KAAKC,MAAMgE,gBAEpB,kBAAC,KAAD,KACI,kBAACD,EAAA,EAAD,CAAevE,MAAQ,CAAE4H,SAAU,UACnC,kBAACP,GAAD,CAAMvG,MACF,kBAAC,WAAD,KACI,0BAAMd,MAAQ,CAAE4H,SAAU,SAA1B,qBAGRC,YAAY,+B,GAjFTrG,aCLzBsG,G,kDAEF,WAAYtH,GAAO,IAAD,8BACd,cAAMA,IAQV4D,UAAY,kBAAM,EAAK5D,MAAM+B,SAASC,YAAK,eATzB,EAUlBwB,YAAc,kBAAM,EAAKxD,MAAM+B,SAASC,YAAK,gBAV3B,EAWlB0B,WAAa,kBAAM,EAAK1D,MAAM+B,SAASC,YAAK,YAX1B,EAYlBgC,eAAiB,kBAAM,EAAKhE,MAAM+B,SAASC,YAAK,qBAT5C,EAAK4B,UAAY,EAAKA,UAAU3B,KAAf,gBACjB,EAAKuB,YAAc,EAAKA,YAAYvB,KAAjB,gBACnB,EAAKyB,WAAa,EAAKA,WAAWzB,KAAhB,gBAClB,EAAK+B,eAAiB,EAAKA,eAAe/B,KAApB,gBANR,E,qDAed,OACI,kBAAC,GAAD,CACI2B,UAAW7D,KAAK6D,UAChBJ,YAAazD,KAAKyD,YAClBE,WAAY3D,KAAK2D,WACjBM,eAAgBjE,KAAKiE,qB,GAtBHtB,IAAM1B,WAkCzBC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyBqG,I,gGCezBC,G,kDAnDX,WAAYvH,GAAO,IAAD,8BACd,cAAMA,IAEDkB,MAAQ,CACTsG,WAAY,CAAE/H,SAAU,UACxBgI,QAAS,EAAKzH,MAAM0H,SACpBC,KAAM,EAAK3H,MAAM4H,MAEjBX,UAAU,EACVY,QAAS,EAAK7H,MAAM6H,QACpBC,KAAM,UACNxH,MAAO,kBAAM,EAAKN,MAAM+H,QACxBC,YAAY,EACZC,IAAK,OACLC,OAAQ,eAdE,E,qDAiCR,IACKhH,EADN,iBACgBnB,KAAKmB,OAEpBiH,EAAejH,EAAMuG,QAAQW,KAAI,SAAAC,GAAI,uBAAUA,MAErD,OACI,kBAAC,KAAD,iBACStI,KAAKmB,MADd,CAEIsG,WAAY,CAAEM,KAAM,QAASQ,gBAAiB,GAAI7I,SAAU,CAAC,OAAQ,aACrEgI,QAAUU,EACVI,WAAarH,EAAMyG,KACnBG,KAAK,c,gDAzBe9H,EAAOkB,GACnC,IAAIsH,EAAS,GAUb,OARIxI,EAAM6H,UAAY3G,EAAM2G,UACxBW,EAAOX,QAAU7H,EAAM6H,SAGvB7H,EAAM2H,OAASzG,EAAMyG,OACrBa,EAAOb,KAAO3H,EAAM2H,MAGjBa,M,GAhCK9F,IAAM1B,W,sCCA1ByH,KAAKC,SAAS,CAAEC,OAAQ,cAAeC,IAAI,GAAD,OAAKC,YAAL,eAC1CJ,KAAKC,SAAS,CAAEC,OAAQ,mBAAoBC,IAAI,GAAD,OAAKC,YAAL,iBAE/C,IAAMC,GAAS,CACX,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAcEC,GAAgB,SAAAC,GAAG,OAAI,IAAIC,KAAKC,aAAa,QAAS,CAAC1J,MAAO,WAAY2J,SAAU,QAAQC,OAAOJ,IAEnGK,GAASC,KAAWC,OAAO,CAC7BC,cAAe,CACXtG,UAAW,GACXxC,WAAY,EACZ+I,OAAQ,GAEZC,mBAAoB,CAChBC,YAAa,GACbC,YAAa,OACb1G,UAAW,GACX2G,WAAY,EACZC,cAAe,IAEnBC,cAAe,CACXJ,YAAa,GACbC,YAAa,OACb1G,WAAY,EACZ2G,WAAY,EACZC,cAAe,IAEnBE,iBAAkB,CACdvK,SAAU,WACVyD,WAAY,GACZxC,YAAa,EACbuJ,OAAQ,IACRN,YAAa,GACbO,YAAa,SACbN,YAAa,QAEjBO,eAAgB,CACZjH,UAAW,EACXxC,WAAY,IACZ0J,YAAa,EACbT,YAAa,EACbC,YAAa,OACbS,aAAc,EACdlD,QAAS,EACTmD,aAAc,GAElBC,cAAe,CACXC,cAAe,MACftH,UAAW,GAEfuH,WAAY,CACRC,QAAS,OACTF,cAAe,MACf7K,MAAO,KAEXgL,YAAa,CACTH,cAAe,SACf7K,MAAO,IACPuD,WAAY,EACZiE,QAAS,EACT0C,WAAY,EACZe,WAAY,EACZC,aAAc,EACdjB,YAAa,QAEjBkB,SAAU,CACNN,cAAe,OAEnBO,QAAS,CACLd,OAAQ,GACRtK,MAAO,IACPe,WAAY,EACZwC,UAAW,IAEf8H,YAAa,CACT5D,SAAU,GACV1G,WAAY,GACZf,MAAO,IACPuD,UAAW,GACXzD,SAAU,YAEda,MAAO,CACH8G,SAAU,GACV6D,eAAgB,OAChBC,WAAY,IACZC,WAAY,OACZjI,UAAW,EACXvD,MAAO,KAEXyL,SAAU,CACNhE,SAAU,EACV+D,WAAY,OACZxL,MAAO,IACPS,UAAW,UAEfiL,gBAAiB,CACbjE,SAAU,GACVkE,MAAO,QACPJ,WAAY,IACZC,WAAY,OACZxL,MAAO,IACPS,UAAW,SAEfmL,YAAa,CACTnE,SAAU,KACVoE,WAAY,mBACZF,MAAO,QACPJ,WAAY,IACZ9K,UAAW,SACXT,MAAO,IAEX8L,SAAU,CACNrE,SAAU,GACVkE,MAAO,QACPJ,WAAY,IACZD,eAAgB,OAChBtL,MAAO,IAEX+L,UAAW,CACPtE,SAAU,GACVkE,MAAO,QACPL,eAAgB,OAChBtL,MAAO,GACPsK,OAAQ,GACR0B,OAAQ,EACRC,YAAa,GACbhC,YAAa,QAEjBiC,iBAAkB,CACdzE,SAAU,EACVkE,MAAO,MACPL,eAAgB,OAChBtL,MAAO,IAEXmM,kBAAmB,CACfpB,QAAS,OACTF,cAAe,OAEnBuB,MAAO,CACH3E,SAAU,GACVlE,UAAW,EACXoI,MAAO,QACPL,eAAgB,OAChBtL,MAAO,GACPS,UAAW,QAEf4L,SAAU,CACN5E,SAAU,GACVlE,UAAW,EACXoI,MAAO,QACPJ,WAAY,IACZD,eAAgB,OAChBtL,MAAO,GACPS,UAAW,QAEf6L,MAAO,CACHT,WAAY,cACZpE,SAAU,GACVD,QAAS,EACTxH,MAAO,IACPsK,OAAQ,GACR2B,YAAa,EACbD,OAAQ,EACR/B,YAAa,QAEjBsC,SAAU,CACNV,WAAY,cACZpE,SAAU,GACVD,QAAS,EACTxH,MAAO,IACPsK,OAAQ,GACR2B,YAAa,EACbD,OAAQ,EACR/B,YAAa,OACb1G,UAAW,GAEfiJ,eAAgB,CACZzB,QAAS,OACTF,cAAe,MACf7K,MAAO,KAEXyM,gBAAiB,CACbT,OAAQ,EACR1B,OAAQ,IACRtK,MAAO,OAIT0M,GAAQ,SAAArM,GAAU,IAlMDsM,EAINC,EAKAvD,EAAKwD,EA0LVC,EAA8BzM,EAA9ByM,MAAOC,EAAuB1M,EAAvB0M,QAASC,EAAc3M,EAAd2M,IAAKC,EAAS5M,EAAT4M,KAE7B,OACI,kBAAC,KAAD,CAAMC,MAAOJ,EAAMK,KAAMtN,MAAOiN,EAAMK,KAAOzD,GAAOK,mBAAqBL,GAAOU,eAC5E,kBAAC,KAAD,CAAMvK,MAAO6J,GAAOc,gBAChB,kBAAC,KAAD,CAAM3K,MAAO6J,GAAOW,mBACpB,kBAAC,KAAD,CAAMxK,MAAO6J,GAAOkB,eAChB,kBAAC,KAAD,CAAM/K,MAAO6J,GAAOoB,YAChB,kBAAC,KAAD,CAAMjL,MAAO,CAAEG,MAAO,GAAIsK,OAAQ,KAAlC,QAKA,kBAAC,KAAD,CAAMzK,MAAO,CAAEoM,YAAa,IACxB,kBAAC,KAAD,CAAMpM,MAAO6J,GAAO/I,OAApB,4CACA,kBAAC,KAAD,CAAMd,MAAO6J,GAAOyB,UAChB,kBAAC,KAAD,CAAMtL,MAAO6J,GAAOgC,iBAApB,gBACA,kBAAC,KAAD,CAAM7L,MAAO6J,GAAOkC,cA3MnCvC,EA2MyDyD,EAAMM,GA3M1DP,EA2M8D,EA3MnDQ,OAAOhE,GAAKiE,SAAST,EAAQ,QA6MlC,kBAAC,KAAD,CAAMhN,MAAO6J,GAAO+B,UAAYwB,EAAKM,iBAG7C,kBAAC,KAAD,CAAM1N,MAAO6J,GAAOsB,aAChB,kBAAC,KAAD,CAAMnL,MAAO6J,GAAOyB,UAChB,kBAAC,KAAD,CAAMtL,MAAO6J,GAAOoC,UAApB,iBACA,kBAAC,KAAD,CAAMjM,MAAO6J,GAAOwC,mBAvN5CU,GADaA,EAwN2DE,EAAMU,YAvNhEC,SACR,GAAN,OAAUb,EAAMc,UAAhB,YAA6BvE,GAAOyD,EAAMe,YAA1C,YAAyDf,EAAMgB,kBAwN3C,kBAAC,KAAD,CAAM/N,MAAO6J,GAAOyB,UAChB,kBAAC,KAAD,CAAMtL,MAAO6J,GAAOoC,UAApB,kBACA,kBAAC,KAAD,CAAMjM,MAAO6J,GAAOqC,WAAY3C,GAAc0D,EAAMe,UAApD,MAEJ,kBAAC,KAAD,CAAMhO,MAAO6J,GAAOyB,UAChB,kBAAC,KAAD,CAAMtL,MAAO6J,GAAOoC,UAApB,oBACA,kBAAC,KAAD,CAAMjM,MAAO6J,GAAOqC,WAAY3C,GAAc0D,EAAMe,SAAW,GAA/D,QAIZ,kBAAC,KAAD,CAAMhO,MAAO6J,GAAOkB,eAChB,kBAAC,KAAD,CAAM/K,MAAO6J,GAAO8C,gBAChB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAM3M,MAAO6J,GAAOyC,mBAChB,kBAAC,KAAD,CAAMtM,MAAO6J,GAAO0C,OAApB,cAEJ,kBAAC,KAAD,CAAMvM,MAAO6J,GAAOyC,mBAChB,kBAAC,KAAD,CAAMtM,MAAO6J,GAAO4C,OAAQS,IAEhC,kBAAC,KAAD,CAAMlN,MAAO6J,GAAOyC,mBAChB,kBAAC,KAAD,CAAMtM,MAAO6J,GAAO2C,UAApB,SACA,kBAAC,KAAD,CAAMxM,MAAO6J,GAAO6C,UAAWS,IAEnC,kBAAC,KAAD,CAAMnN,MAAO6J,GAAOyC,mBAChB,kBAAC,KAAD,CACItM,MAAO6J,GAAO0B,QACdnC,IAAG,8DAAyD6D,EAAMgB,OAA/D,cAEP,kBAAC,KAAD,CAAMjO,MAAO6J,GAAO2B,cA1P7BsB,EA0P0DG,EAAMgB,OAzP7E,GAAN,OAAUnB,EAAK7H,OAAO,EAAG,GAAzB,YAA+B6H,EAAK7H,OAAO,EAAG,GAA9C,YAAoD6H,EAAK7H,OAAO,EAAG,GAAnE,YAAyE6H,EAAK7H,OAAO,GAAI,GAAzF,YAA+F6H,EAAK7H,OAAO,GAAI,OA2PvF,kBAAC,KAAD,CAAMjF,MAAO6J,GAAOyC,mBAChB,kBAAC,KAAD,CAAMtM,MAAO,CAAE4H,SAAU,IAAKlE,UAAW,KAAzC,uEAMZ,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAM1D,MAAO6J,GAAO+C,uBA6D7BsB,GA3BG,SAAA1N,GAAU,IAClB2N,EAA2B3N,EAA3B2N,SAAUC,EAAiB5N,EAAjB4N,OAAQhB,EAAS5M,EAAT4M,KACpBiB,EAAkB,GAItB,OAFAA,EA9BkB,SAAAD,GAMlB,IALA,IAAIvL,EAAS,GACTyL,EAAS,GACThB,GAAO,EACPiB,EAAWC,KAAKC,KAAKL,EAAOM,OAAS,GAEhCC,EAAI,EAAGA,EAAe,EAAXJ,EAAcI,GAAKJ,EACnCD,EAAO9L,KAAK4L,EAAOQ,MAAMD,EAAGA,EAAIJ,IAGpC,IAAK,IAAII,EAAI,EAAGA,EAAIJ,EAAUI,IAAK,CAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACfP,EAAOO,GAAGF,IACV9L,EAAOL,KAAP,6BACO8L,EAAOO,GAAGF,IADjB,IAEIrB,UAGRA,GAAO,EAEXA,GAAO,EAGX,OAAOzK,EAOWiM,CAAcV,GAG5B,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAM9F,KAAK,SAAStI,MAAO,CAAEgL,cAAe,OAAS+D,MAAI,GACrD,kBAAC,KAAD,CAAM/O,MAAO6J,GAAOG,eAEZqE,EAAgBzF,KAAI,SAACqE,GAAD,OAChB,kBAAC,GAAD,CACI1L,IAAK0L,EAAMM,GACXN,MAAOA,EACPC,QAASiB,EAASjB,QAClBC,IAAKgB,EAASa,YACd5B,KAAMA,WCzUhC6B,GAAiBC,EAAQ,KAE/BjG,KAAKC,SAAS,CAAEC,OAAQ,gBAAiBC,IAAI,GAAD,OAAKC,YAAL,mBAC5CJ,KAAKC,SAAS,CAAEC,OAAQ,eAAgBC,IAAI,GAAD,OAAKC,YAAL,mBAE3C,IAEM8F,GAAW,CAAEC,KAAM,UAAWC,MAAO,QAErCC,GAAW,SAACvC,GAAD,OAAWA,EAAMa,SAAS2B,eAAe,QAASJ,KAE7DtF,GAASC,KAAWC,OAAO,CAC7ByF,KAAM,CACFnF,WAAY,EACZC,cAAe,GACfmF,kBAAmB,GACnBzD,WAAY,iBAEhB0D,OAAQ,CACJC,iBAAkB,GAClBC,aAAc,GACd1E,QAAS,OACTF,cAAe,OAEnB6E,YAAa,CACT1P,MAAO,IACPsK,OAAQ,GACRqF,QAAS,OAEbC,WAAY,CACRnI,SAAU,EACV1G,WAAY,OACZ8O,gBAAiB,GACjBpF,YAAa,EACbkF,QAAS,OAEbhP,MAAO,CACHmP,eAAgB,EAChBrI,SAAU,GACVoE,WAAY,eACZpL,UAAW,SACX6K,eAAgB,aAEpByE,cAAe,CACXxM,UAAW,GACXiM,iBAAkB,GAClBQ,SAAU,OACVnF,cAAe,OAEnBoF,KAAM,CACFxI,SAAU,GACVhH,UAAW,WAEfyP,UAAW,CACPrE,WAAY,eACZP,eAAgB,aAEpBG,SAAU,CACNzL,MAAO,OACPyH,SAAU,GACVqI,eAAgB,GAChBjE,WAAY,eACZP,eAAgB,aAEpB6E,cAAe,CACXL,eAAgB,EAChB/O,WAAY,GACZ8J,cAAe,OAEnBuF,iBAAkB,CACdN,eAAgB,EAChB/O,WAAY,GACZ8J,cAAe,OAEnBwF,qBAAsB,CAClBP,eAAgB,EAChB/O,WAAY,GACZ8J,cAAe,OAEnByF,mBAAoB,CAChBR,eAAgB,EAChB/O,WAAY,GACZ8J,cAAe,OAEnB0F,eAAgB,CACZ9I,SAAU,GACVzH,MAAO,IAGXwQ,SAAU,CACNxQ,MAAO,OACPyH,SAAU,GACVoE,WAAY,gBAEhB4E,YAAa,CACThJ,SAAU,IAEdiJ,gBAAiB,CACbjJ,SAAU,IAEdkJ,cAAe,CACXpN,UAAW,IACXiM,iBAAkB,GAClB3E,cAAe,OAEnB+F,SAAU,CACN/E,WAAY,gBACZpE,SAAU,GACVzH,MAAO,IACPyK,YAAa,GACbI,cAAe,SA0dRgG,GAtdE,SAAAxQ,GAAU,IA7GLgJ,EA8GZ2E,EAAsB3N,EAAtB2N,SAAUjB,EAAY1M,EAAZ0M,QAEhB,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAM5E,KAAK,SAAStI,MAAO6J,GAAO2F,KAAMT,MAAI,GACxC,kBAAC,KAAD,CAAM/O,MAAO6J,GAAO6F,OAAQuB,OAAK,GAC7B,kBAAC,KAAD,wBAOA,kBAAC,KAAD,CAAMjR,MAAO6J,GAAOkG,YAApB,qDAIJ,kBAAC,KAAD,CAAM/P,MAAO6J,GAAO/I,OAApB,qEAGA,kBAAC,KAAD,CAAMd,MAAO6J,GAAOqG,eAChB,kBAAC,KAAD,CAAMlQ,MAAO6J,GAAOuG,MAApB,0JAII,kBAAC,KAAD,CAAMpQ,MAAO6J,GAAOwG,WAApB,YAJJ,oCAMI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAApB,SANJ,wCAQI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAApB,SARJ,oEAUI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAApB,kBAVJ,0CAYI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAApB,gBAZJ,2BAcI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAAYlC,EAASjB,SAd7C,4BAgBI,kBAAC,KAAD,CAAMlN,MAAO6J,GAAOwG,WAAYlC,EAASa,aAhB7C,+DAkBI,kBAAC,KAAD,CAAMhP,MAAO6J,GAAOwG,WAAYnD,EAAQgE,KAlB5C,yBAoBI,kBAAC,KAAD,CAAMlR,MAAO6J,GAAOwG,WAAYnD,EAAQiE,WApB5C,0CAsBI,kBAAC,KAAD,CAAMnR,MAAO6J,GAAOwG,WAApB,cAtBJ,qDAyBA,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAO+B,UAApB,WAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,wBAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,UAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,yEAC0E,kBAAC,KAAD,CAAM5Q,MAAO,CAAEyL,eAAgB,cAA/B,0BAG9E,kBAAC,KAAD,CAAMzL,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,UAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,4EAIJ,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAO+B,UAApB,WAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,qBAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAOuG,MAApB,yDAEI,kBAAC,KAAD,CAAMpQ,MAAO,CAAEgM,WAAY,iBAA3B,gBAFJ,YAII,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,cAJJ,4EAOA,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,UAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,oHAIJ,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAO+B,UAApB,WAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,qCAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAOuG,MAApB,oDAEI,kBAAC,KAAD,CAAMpQ,MAAO6J,GAAOwG,WAAYf,GAASnB,EAASiD,eAFtD,gBAII,kBAAC,KAAD,CAAMpR,MAAO6J,GAAOwG,WAAYf,GAASnB,EAASkD,YAJtD,8EAMI,kBAAC,KAAD,CAAMrR,MAAO6J,GAAOwG,WACfpB,GAAeqC,QAAQnD,EAASoD,WAAW,GADhD,iBAEqBpD,EAASoD,UAF9B,YAKJ,kBAAC,KAAD,CAAMvR,MAAO6J,GAAO+B,UAApB,UAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,WAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAOuG,MAApB,uDAEI,kBAAC,KAAD,CAAMpQ,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,4DAII,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,aAJJ,cAMI,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAAmBiD,GAAeqC,QAAQnD,EAASqD,cAA9E,oBAxPFhI,EAwP0H2E,EAASqD,aAxP5H,IAAI/H,KAAKC,aAAa,QAAS,CAAC1J,MAAO,WAAY2J,SAAU,QAAQC,OAAOJ,IAwPjF,KANJ,qFASA,kBAAC,KAAD,CAAMxJ,MAAO6J,GAAO+B,UAApB,UAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,iBAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAOuG,MAApB,gKAGA,kBAAC,KAAD,CAAMpQ,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,UAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,eAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,yIAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,4LAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,6HAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAOgH,iBAChB,kBAAC,KAAD,CAAM7Q,MAAO,CAAEgM,WAAY,iBAA3B,6JAKR,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAOgH,iBAChB,kBAAC,KAAD,CAAM7Q,MAAO,CAAEgM,WAAY,iBAA3B,2HAKR,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,UAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,aAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,8JAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO4G,oBAChB,kBAAC,KAAD,CAAMzQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,wDACuD1C,EAASsD,YADhE,yKAIJ,kBAAC,KAAD,CAAMzR,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,4JAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,mXAIJ,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAOgH,iBAApB,iIAC4H,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAOwG,WAApB,gCAGhI,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAO2G,sBAChB,kBAAC,KAAD,CAAMxQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAOgH,iBAChB,kBAAC,KAAD,CAAM7Q,MAAO6J,GAAOwG,WAApB,qKAKR,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAO+B,UAApB,SAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,gBAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,qDAEI,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,oBAII,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,wBAJJ,2EAMI,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,wDAGR,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,kBAEI,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,8HAMJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO+G,aAChB,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,0YAKR,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO+G,aAChB,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAOwG,WAApB,kYAKR,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,8EAEI,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,qBAII,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,2EAJJ,gKAQJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,kBAEI,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,kKAMI,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,aANJ,mIAUJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAChB,kBAAC,KAAD,CAAM1Q,MAAO,CAAEgM,WAAY,iBAA3B,OAIJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO+G,aAChB,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAOwG,WAApB,sOAOR,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAO+B,UAApB,cAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAOyG,eAChB,kBAAC,KAAD,CAAMtQ,MAAO6J,GAAO6G,gBAApB,QAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO8G,UAApB,gCAIJ,kBAAC,KAAD,CAAM3Q,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,mQAIJ,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,mDAEI,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cAFJ,yEAII,kBAAC,KAAD,CAAMhM,MAAO,CAAEgM,WAAY,iBAA3B,gBAJJ,iPAQJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,gBAApB,MAGA,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAChB,kBAAC,KAAD,CAAM5Q,MAAO,CAAEgM,WAAY,iBAA3B,cADJ,kLAKJ,kBAAC,KAAD,CAAMhM,MAAO6J,GAAO+B,UAApB,UAGA,kBAAC,KAAD,CAAM5L,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,iBAGpB,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,+UAIJ,kBAAC,KAAD,CAAM5Q,MAAO6J,GAAO0G,kBAChB,kBAAC,KAAD,CAAMvQ,MAAO6J,GAAO6G,iBAGpB,kBAAC,KAAD,CAAM1Q,MAAO6J,GAAO+G,aAApB,wTAIJ,kBAAC,KAAD,CAAM5Q,MAAO,CAAEiQ,eAAgB,GAAI9P,MAAO,UAC1C,kBAAC,KAAD,CAAMH,MAAO6J,GAAOuG,MAApB,kHAGA,kBAAC,KAAD,CAAMpQ,MAAO,CAAEiQ,eAAgB,GAAI9P,MAAO,UAC1C,kBAAC,KAAD,CAAMH,MAAO6J,GAAOuG,MAApB,0BAEI,kBAAC,KAAD,CAAMpQ,MAAO,CAAEgM,WAAY,iBACrBmC,EAASuD,cAAc9D,SAASC,WAH1C,0BAMI,kBAAC,KAAD,CAAM7N,MAAO,CAAEgM,WAAY,iBACtBsD,GAASnB,EAASuD,eADvB,OAKR,kBAAC,KAAD,CAAM1R,MAAO6J,GAAOiH,eAChB,kBAAC,KAAD,CAAM9Q,MAAO6J,GAAOkH,UAChB,kBAAC,KAAD,sDACA,kBAAC,KAAD,mBACe,kBAAC,KAAD,CAAM/Q,MAAO6J,GAAOwG,WAApB,aAEf,kBAAC,KAAD,aACS,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOwG,WAApB,WAGb,kBAAC,KAAD,CAAMrQ,MAAO6J,GAAOkH,UAChB,kBAAC,KAAD,sDACA,kBAAC,KAAD,iBACa,kBAAC,KAAD,CAAM/Q,MAAO6J,GAAOwG,WAAYlC,EAASjB,UAEtD,kBAAC,KAAD,aACS,kBAAC,KAAD,CAAMlN,MAAO6J,GAAOwG,WAAYnD,EAAQC,WChjBnEwE,GAAa,SAACC,GAChB,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IAKzCkD,GAAc,SAACC,GACjB,IAAIC,EAAM,CAAElG,MAAO,QACnB,OAAQiG,GACJ,IAAK,SACDC,EAAIlG,MAAQ,UACZ,MACJ,IAAK,WACDkG,EAAIlG,MAAQ,UACZ,MACJ,IAAK,aACDkG,EAAIlG,MAAQ,UAMpB,OAAOkG,GASL1C,GAAW,SAACvC,GACd,OAAO4E,GACH,IAAIM,KAAqB,IAAhBlF,EAAMmF,SAAgBC,mBAAmB,QAAS,CACvD/C,KAAM,UACNC,MAAO,YAKb+C,GAAe,uCAAG,WAAOC,GAAP,eAAA1M,EAAA,6DAChB2M,EAAY,KADI,SAEdD,EAAIE,MAAM3P,MAAK,SAAC4P,GACdA,EAAIC,SACJH,EAAYE,EAAIrK,WAJJ,gCAObmK,GAPa,2CAAH,sDAcfI,GAAa,uCAAG,WAAOL,GAAP,eAAA1M,EAAA,6DACdgN,EAAY,GADE,SAGZN,EAAIE,MAAM3P,MAAK,SAACgQ,GAClBA,EAASC,SAAQ,SAACL,GACdG,EAAUnQ,KAAV,cACI+K,GAAIiF,EAAIjF,IACLiF,EAAIrK,eAPD,gCAWXwK,GAXW,2CAAH,sDAgPJG,GAlOM,SAACtS,GAAW,IACrBuS,EAAmBvS,EAAnBuS,eADoB,EAEcC,oBAAS,GAFvB,oBAErBC,EAFqB,KAENC,EAFM,OAGcF,oBAAS,GAHvB,oBAGrBG,EAHqB,KAGNC,EAHM,OAIAJ,mBAAS,IAJT,oBAIrBK,EAJqB,KAIbC,EAJa,OAKAN,mBAAS,IALT,oBAKrB5E,EALqB,KAKbmF,EALa,KAO5BC,qBAAU,WACNJ,GAAiB,GACjBF,GAAiB,GAEjB,IAAIb,EAAMzQ,EAAI6R,YAAYC,WAAW,aAAalB,IAAIO,GAEtDX,GAAgBC,GACXzP,MAAK,SAAC+Q,GAAD,OAASL,EAAUK,MACxBC,SAAQ,kBAAMV,GAAiB,MAEpCR,GAAcL,EAAIqB,WAAW,WACxB9Q,MAAK,SAAC+Q,GAAD,OAASJ,EAAUI,MACxBC,SAAQ,kBAAMR,GAAiB,QACrC,CAACL,IAEJ,IAtFgBc,EAqBGrK,EAiEbsK,EAAW,SAAC1G,GACd2G,aAAI7F,GAAU,CAAEC,SAAUkF,EAAQjF,OAAQA,EAAQhB,KAAMA,KACnD4G,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,oBAEiBrB,EAAOpF,OAFxB,aAEmCb,EAFnC,UAIAkH,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAIlB6R,EAAkB,uCAAG,WAAOvB,GAAP,eAAA1N,EAAA,6DACnBuH,EAAU,KADS,SAEjBmG,EAAOwB,YACRtC,MACA3P,MAAK,SAAC4P,GAAD,OAAUtF,EAAUsF,EAAIrK,UAC7BrF,OAAM,SAACC,GACJiD,IAAQjD,MACJ,wEAPW,UAWlBmK,EAXkB,iDAavB6G,aAAI/C,GAAS,CAAE7C,SAAUkF,EAAQnG,QAASA,KACrC8G,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,mBAEgBrB,EAAOpF,OAFvB,SAIAqG,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,MA1BG,2CAAH,sDA8BxB,OACI,kBAAC,KAAD,CACIxB,IAAI,eACJuT,QAAStU,EAAMsU,QACfC,SAAUvU,EAAMwU,aAChB7U,MAAO,IACPW,MACI,wDAGSmS,GACD,0BAAMjT,MAAO8R,GAAYuB,EAAOtB,SAAhC,IACMsB,EAAOtB,OADb,MAMZkD,OAAQ,sCAER,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GACP,kBAAC,IAAD,CACIpU,MACI,kBAAC,KAAD,KACI,oCAAUiS,EAAV,KACA,kBAAC,KAAD,CAASjS,MAAM,uBACX,gCACI,kBAACqU,GAAA,EAAD,CACI5T,IAAI,WACJjB,QAAS,kBACLsU,EAAmBvB,IAEvBrT,MAAO,CAAE8L,MAAO,gBAMpCpE,UAAW,CAAE+C,OAAQ,OAEnBwI,GACE,yCACa,gCAASI,EAAOnG,SACzB,6BAFJ,eAGiB,IACb,gCAASmG,EAAOrE,aAJpB,IAI0C,6BAJ1C,MAKQ,IACJ,2CACaqE,EAAO+B,IADpB,IAC0B/B,EAAOgC,IAEjC,6BATJ,mBAUqB,IACjB,iCArKT7L,EAsK4B6J,EAAO7B,aArKtD,IAAI/H,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,KAoKkB,6BAdJ,gBAekB,IACd,gCAAS6J,EAAO5B,aAChB,6BAjBJ,mBAkBqB,IACjB,gCAASnC,GAAS+D,EAAOjC,eACzB,6BApBJ,gBAqBkB,IACd,gCAAS9B,GAAS+D,EAAOhC,YACzB,6BAvBJ,kBAwBoB,IAChB,iCAxMZwC,EAwMgCR,EAAOzN,QAxM/B+L,GAAWkC,EAAIyB,MAAM,KAAK,SA6MtC,kBAAC,IAAD,CAAKJ,KAAM,GAAIxU,OAAQ,GACnB,kBAAC,IAAD,CACII,MACI,kBAAC,KAAD,KACI,2CACEqS,GACE,kBAAC,KAAD,KACI,kBAAC,KAAD,CAASrS,MAAM,sBACX,kBAACqU,GAAA,EAAD,CACI5T,IAAI,mBACJjB,QAAS,kBACLwT,EAAS,aAEb9T,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,mBACX,kBAACqU,GAAA,EAAD,CACI5T,IAAI,gBACJjB,QAAS,kBACLwT,EAAS,oBAEb9T,MAAO,CAAE8L,MAAO,gBAOxCpE,UAAW,CAAE+C,OAAQ,IAAK8K,UAAW,WAErC,kBAAC,KAAD,CACIxM,WAAYqF,EACZoH,WAAY,SAAC3M,GAAD,OACR,kBAAC,KAAKxH,KAAN,CAAWE,IAAKsH,EAAKoF,QACjB,kBAAC,KAAK5M,KAAKgG,KAAX,CACIvG,MACI,gCACK+H,EAAK0E,GADV,KACgB,IACX+B,GAASzG,EAAK8E,aAGvB9F,aAzMjBiF,EAyM6CjE,EAAKoF,OAxM/D,GAAN,OAAUnB,EAAK7H,OAAO,EAAG,GAAzB,YAA+B6H,EAAK7H,OAAO,EAAG,GAA9C,YAAoD6H,EAAK7H,OAAO,EAAG,GAAnE,YAAyE6H,EAAK7H,OAAO,GAAI,GAAzF,YAA+F6H,EAAK7H,OAAO,GAAI,OA0M/E,6BACK4D,EAAK4M,UACF,0BAAMzV,MAAO,CAAE8L,MAAO,YAAtB,aAIA,0BAAM9L,MAAO,CAAE8L,MAAO,YAAtB,eAjNrB,IAAAgB,KAyNEqG,GACG,yBAAKrO,UAAU,qBACX,kBAAC,KAAD,WAOdmO,GAAmC,aAAlBI,EAAOtB,QAC1B,6BACI,kBAAC,IAAD,CAAK9L,QAAQ,SAASjG,MAAO,CAAE0D,UAAW,KACtC,kBAAC,IAAD,CAAKwR,KAAM,GAAIlV,MAAO,CAAEY,UAAW,WAC/B,4DAGR,kBAAC,IAAD,CAAKqF,QAAQ,UACT,kBAAC,IAAD,CAAKiP,KAAM,GAAIlV,MAAO,CAAEY,UAAW,WAC9ByS,EAAOqC,qBCvS9BpG,GAAW,SAAAvC,GACb,MALiB,kBADF6E,EAMG,IAAIK,KAAqB,IAAhBlF,EAAMmF,SAAgBC,mBAAmB,QAAS,CAAE/C,KAAM,UAAWC,MAAO,WALrEuC,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,GAF5B,IAAAgD,GASb+D,GAAc,uCAAG,WAAMtD,GAAN,eAAA1M,EAAA,6DACf2M,EAAY,KADG,SAEbD,EACLE,MACA3P,MAAK,SAAA4P,GACEA,EAAIC,SACJH,EAAYE,EAAIrK,WANL,gCASZmK,GATY,2CAAH,sDAYdsD,GAAgB,uCAAG,WAAMvD,GAAN,eAAA1M,EAAA,6DACjBkQ,EAAe,GADE,SAEfxD,EACLE,MACA3P,MAAK,SAAAgQ,GACFA,EAASC,SAAQ,SAAAL,GACbqD,EAAarT,KAAb,cACI+K,GAAIiF,EAAIjF,IACLiF,EAAIrK,eARE,gCAYd0N,GAZc,2CAAH,sDAuHP/C,GAxGM,SAAAtS,GAAU,IAEnBsV,EAAkBtV,EAAlBsV,cAFkB,EAGkB9C,oBAAS,GAH3B,oBAGnB+C,EAHmB,KAGHC,EAHG,OAIsBhD,oBAAS,GAJ/B,oBAInBiD,EAJmB,KAIDC,EAJC,OAKIlD,mBAAS,IALb,oBAKnB9F,EALmB,KAKViJ,EALU,OAMQnD,mBAAS,IANjB,oBAMnBoD,EANmB,KAMRC,EANQ,KAwB1B,OAhBA7C,qBAAU,WACN0C,GAAoB,GACpBF,GAAkB,GAElB,IAAIM,EAAa1U,EAAI6R,YAAYC,WAAW,YAAYlB,IAAIsD,GACxDS,EAAe3U,EAAI6R,YAAYC,WAAW,aAAa8C,MAAM,cAAe,KAAMF,GAEtFX,GAAeW,GACd1T,MAAK,SAAA+Q,GAAG,OAAIwC,EAAWxC,MACvBC,SAAQ,kBAAMoC,GAAkB,MAEjCJ,GAAiBW,GAChB3T,MAAK,SAAA+Q,GAAG,OAAI0C,EAAa1C,MACzBC,SAAQ,kBAAMsC,GAAoB,QACpC,CAACJ,IAGA,kBAAC,KAAD,CACIvU,IAAI,eACJuT,QAAStU,EAAMsU,QACfC,SAAUvU,EAAMwU,aAChB7U,MAAO,IACPW,MACI,mDAIJmU,OACI,sCAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,EAAGlV,MAAO,CAAEyW,SAAU,MAC7B,kBAAC,IAAD,CACI3V,MACI,kBAAC,KAAD,KACI,8CAGR4G,UAAW,CAAE+C,OAAQ,OAGhBsL,GACD,wCACY,0CAAY7I,EAAQwJ,OAApB,YAA8BxJ,EAAQyJ,WAAoB,6BADtE,QAES,gCAASzJ,EAAQC,KAAa,6BAFvC,QAGS,gCAASD,EAAQgE,KAAa,6BAHvC,gBAIc,gCAAShE,EAAQ0J,UAAkB,6BAJjD,iBAKe,gCAAS1J,EAAQiE,WAAmB,gCAK/D,kBAAC,IAAD,CAAK+D,KAAM,GAAIxU,OAAQ,GACnB,kBAAC,IAAD,CACII,MACI,kBAAC,KAAD,KACI,6CACA,kBAAC,KAAD,CAASA,MAAM,sBACX,uBAAG2T,KAAK,cAAcoC,OAAO,SAAS7W,MAAO,CAAE4H,SAAU,GAAI1C,OAAQ,UAArE,WAMZwC,UAAW,CAAE+C,OAAQ,IAAK8K,UAAW,SAGrC,kBAAC,KAAD,CACIxM,WAAYqN,EACZZ,WAAY,SAAA3M,GAAI,OAChB,kBAAC,KAAKxH,KAAN,CAAWE,IAAKsH,EAAK0E,IACjB,kBAAC,KAAKlM,KAAKgG,KAAX,CACIvG,MAAO,gCAAS+H,EAAKoF,QACrBpG,YAAW,UAAKyH,GAASzG,EAAKuI,cAAnB,cAAsC9B,GAASzG,EAAKwI,cAEnE,6BACMxI,EAAKkJ,YAMlBkE,GACG,yBAAKnR,UAAU,qBACX,kBAAC,KAAD,Y,qBC3H1BsN,GAAe,uCAAG,WAAOC,GAAP,eAAA1M,EAAA,6DAChB2M,EAAY,KADI,SAEdD,EAAIE,MAAM3P,MAAK,SAAC4P,GACdA,EAAIC,SACJH,EAAYE,EAAIrK,WAJJ,gCAObmK,GAPa,2CAAH,sDA0FNwE,GAhFS,SAACtW,GAAW,IAAD,EAChBuW,IAAKC,UAAbC,EADwB,qBAEvBlE,EAAmBvS,EAAnBuS,eAFuB,EAGWC,oBAAS,GAHpB,oBAGxBC,EAHwB,KAGTC,EAHS,OAIHF,mBAAS,MAJN,oBAIxBK,EAJwB,KAIhBC,EAJgB,OAKDN,oBAAS,GALR,oBAKxB3K,EALwB,KAKf6O,EALe,KAMzB7E,EAAMzQ,EAAI6R,YAEhBD,qBAAU,WACNN,GAAiB,GAEjB,IAAIiE,EAAc9E,EAAIqB,WAAW,aAAalB,IAAIO,GAElDX,GAAgB+E,GACXvU,MAAK,SAAC+Q,GAAD,OAASL,EAAUK,MACxBC,SAAQ,kBAAMV,GAAiB,QAErC,CAACH,IA0BJ,OACI,kBAAC,KAAD,CACIxR,IAAI,eACJuT,QAAStU,EAAMsU,QACfC,SAAUvU,EAAMwU,aAChBlU,MAAO,uDAA4B,gCAASiS,IAC5CrL,UAAW,CAAE4C,cAAe,GAC5B2K,OACI,yBAAK1T,IAAI,kBACL,kBAAC,IAAD,CAAQA,IAAI,SAAS8D,KAAK,UAAUgD,QAASA,EAAS/H,QAjCrD,WACb4W,GAAW,GACXD,EACCG,iBACAxU,MAAK,SAAAyU,GACFhF,EAAIqB,WAAW,aACdlB,IAAIa,EAAOpF,QACXjF,OAAO,CACJ+I,OAAQ,WACR2D,gBAAiB2B,EAAIC,SAExB1U,MAAK,WACFoD,IAAQuR,QAAR,mDACA/W,EAAMwU,qBAGblS,OAAM,SAAA0U,GACHxU,QAAQC,IAAI,mBAAoBuU,MAEnC5D,SAAQ,WACLsD,GAAW,QAaH,cAMNjE,GACE,kBAAC,IAAD,CAAMgE,KAAMA,GACR,kBAAC,IAAK5V,KAAN,CACImF,KAAK,SACLiR,MAAM,SACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,+BAKjB,kBAAC,KAAD,CAAUe,YAAY,4C,oBCjEtC4Q,GAAYC,KAAZD,QACAE,GAAWC,IAAXD,OAEF1I,GAAW,CAAEC,KAAM,UAAWC,MAAO,SACrC0I,GAAY,CAAE3I,KAAM,UAAWC,MAAO,UAAW2I,IAAK,WAEtDC,GAAS,SAAClL,GACZ,OAAIA,EAAcA,EAAMa,SACZ,IAAIqE,MAKdN,GAAa,SAACC,GAChB,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IAGzCU,GAAW,SAACvC,GAAsB,IAAfmL,EAAc,wDAC/BC,EAAMD,EAAIH,GAAY5I,GAE1B,OAAOwC,GAAW5E,EAAMa,SAASuE,mBAAmB,QAASgG,KAsB3DC,G,kDACF,WAAY5X,GAAQ,IAAD,8BACf,cAAMA,IAuBVoV,iBAAmB,SAACyC,GAChB,IAAMjC,EAAY,GACVkC,EAAa,EAAK5W,MAAlB4W,SAERD,EAAcxF,QAAd,uCAAsB,WAAOL,GAAP,+CAAA7M,EAAA,2DAkBd6M,EAAIrK,OAhBJ+E,EAFc,EAEdA,QACA8B,EAHc,EAGdA,YACA+C,EAJc,EAIdA,OACA9D,EALc,EAKdA,OACAmD,EANc,EAMdA,aACAC,EAPc,EAOdA,UACAE,EARc,EAQdA,UACAE,EATc,EASdA,YACAD,EAVc,EAUdA,aACA4D,EAXc,EAWdA,IACAC,EAZc,EAYdA,GACAR,EAbc,EAadA,YACAnD,EAdc,EAcdA,cACA6G,EAfc,EAedA,oBACAC,EAhBc,EAgBdA,kBACAC,EAjBc,EAiBdA,wBAGJrH,EAAe9B,GAAS8B,GACxBC,EAAY/B,GAAS+B,IAGjBiH,IAC6C,IAA7CpL,EAAQwL,cAAcC,QAAQL,KACc,IAA5CrK,EAAOyK,cAAcC,QAAQL,KACqB,IAAlDlH,EAAasH,cAAcC,QAAQL,KACY,IAA/CjH,EAAUqH,cAAcC,QAAQL,KACyB,IAAzDC,EAAoBG,cAAcC,QAAQL,KACuB,IAAjEhJ,GAASkJ,GAAmBE,cAAcC,QAAQL,KAC2B,IAA7EhJ,GAASmJ,GAAyB,GAAMC,cAAcC,QAAQL,GA/BhD,iDAmClBlC,EAAU5T,KAAK,CACXjB,IAAKiR,EAAIjF,GACTL,UACA8B,cACAf,SACA8D,SACAX,eACAC,YACAE,YACAE,cACAD,eACA4D,MACAC,KACAR,cACAnD,gBACA6G,sBACAC,oBACAC,4BApDc,2CAAtB,uDAuDA,EAAKjV,SAAS,CACV4S,YACA/N,SAAS,KArFE,EAyFnBuQ,aAAe,SAACP,GACZ,IAAMQ,EAAQ,GAEdR,EAAcxF,SAAQ,SAACL,GAAS,IACtBsG,EAAWtG,EAAIrK,OAAf2Q,OAEND,EAAMrW,KAAK,CACPjB,IAAKiR,EAAIjF,GACTuL,OAAQA,OAIhB,EAAKtV,SAAS,CACVqV,WAtGW,EA0GnBE,gBAAkB,SAACV,GACf,IAAMW,EAAW,GAEjBX,EAAcxF,SAAQ,SAACL,GAAS,IAAD,EACKA,EAAIrK,OAA9BgF,EADqB,EACrBA,IAAKuJ,EADgB,EAChBA,OAAQC,EADQ,EACRA,SAEnBqC,EAASxW,KAAK,CACVjB,IAAKiR,EAAIjF,GACTJ,MACAuJ,SACAC,gBAIR,EAAKnT,SAAS,CACVwV,cAzHW,EAuJnBC,wBAA0B,SAAC5F,GACvB,EAAK7P,SAAS,CACV0V,iBAAiB,EACjBC,SAAU9F,KA1JC,EA8JnB2B,aAAe,WACX,EAAKxR,SAAS,CACV4V,cAAc,EACdC,qBAAqB,EACrBH,iBAAiB,KAlKN,EAsKnBI,IAAM,SAACC,GACH,EAAKC,cACL,EAAKhZ,MAAM+B,SAASC,YAAK,aAAD,OAAc+W,MAxKvB,EA2KnBE,WAAa,SAACpG,GACV,EAAK7P,SAAS,CAAE2V,SAAU9F,IAC1B,EAAK7P,SAAS,CAAE4V,cAAc,KA7Kf,EAgLnBM,kBAAoB,SAACrG,GACjB,EAAK7P,SAAS,CAAEsS,cAAezC,EAAOwB,YAAYtH,KAClD,EAAK/J,SAAS,CAAE6V,qBAAqB,KAlLtB,EAqLnBvF,SArLmB,uCAqLR,WAAOT,GAAP,eAAA1N,EAAA,6DACHuH,EAAU,KADP,SAEDmG,EAAOwB,YAAYtC,MACxB3P,MAAK,SAAA4P,GAAG,OAAItF,EAAUsF,EAAIrK,UAC1BrF,OAAM,SAAAC,GACHiD,IAAQjD,MAAM,wEALX,UAQFmK,EARE,iDAUP6G,aAAI/C,GAAS,CAAE7C,SAAUkF,EAAQnG,QAASA,KACrC8G,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,mBAEgBrB,EAAOpF,OAFvB,SAIAqG,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAvBb,2CArLQ,wDAgNnBmF,SAAW,EAAKyR,kBAhNG,EA+UnBC,WA/UmB,uCA+UN,WAAOvG,GAAP,eAAA1N,EAAA,yDACa,WAAlB0N,EAAOtB,OADF,uBAEL/L,IAAQjD,MAAM,6CAFT,0BAML8W,EANK,eAOTlC,GAAQ,CACJ7W,MAAO,4DACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,sBACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAGZ,wBAAwB5F,MAd1B,2CA/UM,sDAGf,EAAK8G,QAAUvY,EAAI6R,YACnB,EAAK8C,aAAe,EAAK4D,QAAQzG,WAAW,aAC5C,EAAK0G,YAAc,EAAKD,QAAQzG,WAAW,YAC3C,EAAK2G,SAAW,EAAKF,QAAQzG,WAAW,SACxC,EAAK4G,SAAW,EAAKH,QAAQzG,WAAW,SACxC,EAAK6G,kBAAoB,EAAKJ,QAAQzG,WAAW,kBAEjD,EAAK8F,YAAc,KACnB,EAAK9X,MAAQ,CACT2G,SAAS,EACT8Q,SAAU,KACV/C,UAAW,GACX4C,SAAU,GACVH,MAAO,GACPO,cAAc,EACdC,qBAAqB,EACrBH,iBAAiB,EACjBpD,cAAe,MApBJ,E,gEA8HfvV,KAAKiZ,YAAcjZ,KAAKgW,aACnBC,MAAM,SAAU,KAAM,UACtBA,MAAM,oBAAqB,IAAK3U,IAAS4R,UAAU+G,UAAUC,OAC7DC,QAAQ,oBAAqB,QAC7BC,WAAWpa,KAAKqV,kBACrBrV,KAAK6Z,YACAM,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAKwY,iBACrBxY,KAAK8Z,SAASK,QAAQ,UAAUC,WAAWpa,KAAKqY,gB,yCAGjCgC,EAAWC,M,6BAEvBC,GAAQ,IAAD,OACNA,EAAMpC,gBAAkBnY,KAAKmB,MAAM4W,WACnC/X,KAAKiD,SAAS,CAAE6E,SAAS,IACzB9H,KAAKiD,SAAS,CAAE8U,SAAUwC,EAAMpC,gBAChCnY,KAAKgW,aACAC,MAAM,oBAAqB,IAAK3U,IAAS4R,UAAU+G,UAAUC,OAC7DC,QAAQ,oBAAqB,QAC7BnI,MACA3P,MAAK,SAACyV,GAAD,OAAmB,EAAKzC,iBAAiByC,S,wCA+DxC,IAAD,OACd,MAAO,CACH,CACIvX,MAAO,WACPS,IAAK,WACLwZ,OAAQ,CACJC,QAAS,SAACrV,EAAGsV,GAAJ,OAAUtV,EAAEyP,IAAI8F,WAAWC,cAAcF,EAAE7F,IAAI8F,cAE5DE,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAAoD,IAAjCA,EAAOpF,OAAO0K,QAAQlM,IACnD6O,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CAAQhO,KAAK,OAAO/E,QAAS,kBAAM,EAAKmZ,WAAWpG,KAC/C,gCAASA,EAAOpF,WAI5B,CACInN,MAAO,UACPS,IAAK,UACLwZ,OAAQ,CACJC,QAAS,SAACrV,EAAGsV,GAAJ,OAAUtV,EAAEuH,QAAQiO,cAAcF,EAAE/N,WAEjDoO,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBAAM,EAAKoZ,kBAAkBrG,KAEtC,gCAASA,EAAOnG,YAI5B,CACIpM,MAAO,YACPS,IAAK,YACLwZ,OAAQ,CACJC,QAAS,SAACrV,EAAGsV,GAAJ,OAAUtV,EAAE4L,UAAU2J,WAAWC,cAAcF,EAAE1J,UAAU2J,cAExEE,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAAmBA,EAAO9B,YAAc9E,GAClD6O,OAAQ,SAACjI,GAAD,OACJ,oCACI,kBAAC,KAAD,CACIkI,MAAK,UAAKlI,EAAO9B,UAAZ,OACLvR,MAAO,CAAEwb,gBAAiB,gBAK1C,CACI1a,MAAO,SACPS,IAAK,eACLwZ,OAAQ,CACJC,QAAS,SAACrV,EAAGsV,GAAJ,OAAUtV,EAAE6L,aAAa0J,WAAWC,cAAcF,EAAEzJ,aAAa0J,cAE9EI,OAAQ,SAACjI,GAAD,OACJ,gCACI,0BAAMrT,MAAO,CAAE8L,MAAO,UAAWlE,SAAU,WA3S5C4B,EA4SoB6J,EAAO7B,aA5SnB,IAAI/H,KAAKC,aAAa,QAAS,CAAC1J,MAAO,WAAY2J,SAAU,QAASC,OAAOJ,MAAtF,IAACA,IAiTX,CACI1I,MAAO,uBACPS,IAAK,oBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAE6S,oBAAoBkD,OAASD,KAAOxD,GAAOgD,EAAEzC,oBAAoBkD,QACnGJ,OAAQ,SAACjI,GAAD,OACJ,gCAAS/D,GAAS+D,EAAOmF,sBAGjC,CACI1X,MAAO,oBACPS,IAAK,sBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE4S,oBAAoB4C,cAAcF,EAAE1C,sBACxD+C,OAAQ,SAACjI,GAAD,OACJ,gCAASA,EAAOkF,uBAGxB,CACIzX,MAAO,mBACPS,IAAK,0BACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAE8S,0BAA0BiD,OAASD,KAAOxD,GAAOgD,EAAExC,0BAA0BiD,QAC/GJ,OAAQ,SAACjI,GAAD,OACJA,EAAOoF,wBAEP,gCAASnJ,GAAS+D,EAAOoF,yBAAyB,IAElD,MAcR,CACI3X,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAO/K,KAAK,UACR,kBAAC,KAAD,CAASxH,MAAM,aACX,kBAACqU,GAAA,EAAD,CACI5T,IAAI,WACJjB,QAAS,kBAAM,EAAKwT,SAAST,IAC7BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,eACX,kBAAC6a,GAAA,EAAD,CACIrb,QAAS,kBAAM,EAAKsZ,WAAWvG,IAC/BrT,MAAO,CAAE8L,MAAO,oB,+BA4BlC,IAAD,SAUDvL,KAAKmB,MARL0U,EAFC,EAEDA,UACA/N,EAHC,EAGDA,QACA8Q,EAJC,EAIDA,SACAN,EALC,EAKDA,MACA/C,EANC,EAMDA,cACAsD,EAPC,EAODA,aACAC,EARC,EAQDA,oBACAH,EATC,EASDA,gBAGJ,OACI,6BACKE,GACG,kBAAC,GAAD,CACItE,QAASsE,EACTrG,eAAgBoG,EAAS5X,IACzByT,aAAczU,KAAKyU,eAG1BqE,GACG,kBAAC,GAAD,CACIvE,QAASuE,EACTvD,cAAeA,EACfd,aAAczU,KAAKyU,eAG1BkE,GACG,kBAAC,GAAD,CACIpE,QAASoE,EACTnG,eAAgBoG,EAAS5X,IACzByT,aAAczU,KAAKyU,eAG3B,kBAAC,KAAD,CACIlQ,UAAU,mBACVhE,MAAM,YACN8a,SAAS,iCACTC,MAAO,CACH,kBAAChE,GAAD,CACItW,IAAI,IACJwF,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OAAW,EAAKsP,OAAOtP,IACjCzM,MAAO,CAAEG,MAAO,WAI1BI,KAAK2H,SAAS,GAAGkT,QAAQ1M,QACvBmK,EAAMjQ,KAAI,SAACwM,GACP,EAAKlN,SAAS,GAAGkT,QAAQ5Y,KAAK,CAC1B4N,KAAK,OAAD,OAASgF,EAAI0D,QACjBrM,MAAM,IAAD,OAAM2I,EAAI0D,cAGzBvY,KAAK2H,SAAS,GAAGkT,QAAQ1M,QACvB0H,EACKxN,KAAI,SAACuF,GAAD,OAAcA,EAASoD,aAC3ByK,QACG,SAACvP,EAAOwP,EAAOC,GAAf,OACIA,EAAKvD,QAAQlM,KAAWwP,KAE/BE,MAAK,SAACxW,EAAGsV,GAAJ,OAAUtV,EAAIsV,KACnBrS,KAAI,SAAC2I,GACF,EAAKrJ,SAAS,GAAGkT,QAAQ5Y,KAAK,CAC1B4N,KAAK,GAAD,OAAKmB,EAAL,OACJ9E,MAAO8E,OAGvB,kBAAC,GAAD,CACIrJ,SAAU3H,KAAK2H,SACfC,KAAMiO,EACN/N,QAASA,S,GA3aL7G,aAwbTC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyB2W,ICxezBgE,G,uKAbP,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,IAAD,CAAKpc,MAAQ,CAAE0D,UAAW,QAAW8D,OAAQ,IACzC,kBAAC,IAAD,CAAKlB,GAAI,IACL,kBAAC+V,GAAD,CAAeC,WAAW,W,GAT1B9a,a,sBC+OT+a,GAhPI,SAAC/b,GAAW,IAAD,EACXuW,IAAKC,UAAbC,EADmB,qBAElBX,EAA+D9V,EAA/D8V,WAAYa,EAAmD3W,EAAnD2W,YAAaqF,EAAsChc,EAAtCgc,QAASC,EAA6Bjc,EAA7Bic,iBAAkBpJ,EAAW7S,EAAX6S,OAFlC,EAIIL,oBAAS,GAJb,oBAInB3K,EAJmB,KAIV6O,EAJU,KAM1B1D,qBAAU,WACDH,EAKOiD,EAAW9D,IAAIa,EAAO9R,KAC9BgR,MAAM3P,MAAK,SAAC4P,GACZ,GAAIA,EAAIC,OAAQ,CACZ,IAAMiK,EAAMlK,EAAIrK,OAChB8O,EAAK0F,eAAe,CAChBxP,IAAKuP,EAAIvP,IACT+D,IAAKwL,EAAIxL,IACTwF,OAAQgG,EAAIhG,OACZC,SAAU+F,EAAI/F,SACdC,SAAU8F,EAAI9F,SACdzF,UAAWuL,EAAIvL,iBAGnBnO,QAAQC,IAAR,sCAjBJgU,EAAK2F,gBAoBV,CAACvJ,EAAQ4D,EAAMX,IAElB,IAAMuG,EAAW,WACb3F,GAAW,GACXD,EACCG,iBACAxU,MAAK,SAAAyU,GACEhE,EACAyJ,EAAezF,GAAKzU,MAAK,WACrBqU,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,+CAAoDF,OAGxDga,EAAgB1F,GAAKzU,MAAK,WACtBqU,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,gDAAqDF,UAIhED,OAAM,SAAA0U,GACHxU,QAAQC,IAAI,mBAAoBuU,MAEnC5D,SAAQ,WACLsD,GAAW,OAKb6F,EAAe,uCAAG,WAAO1F,GAAP,SAAA1R,EAAA,sDACpB2Q,EAAW0G,IAAI,CACXC,QAAQ,EACRvG,OAAQW,EAAIX,OACZC,SAAUU,EAAIV,SACdxJ,IAAKkK,EAAIlK,IACT+D,IAAKmG,EAAInG,IACT0F,SAAUS,EAAIT,SACdzF,UAAWkG,EAAIlG,UACf+L,WAAW,EACXC,eAAgBtb,IAAS4R,UAAU+G,UAAUC,QAEhD7X,MAAK,SAACwa,GACHpX,IAAQuR,QAAQ,4CAEnBzU,OAAM,SAACC,GACJiD,IAAQjD,MAAM,iCACdC,QAAQD,MAAR,0CAAiDA,EAAjD,SAjBgB,2CAAH,sDAsBf+Z,EAAc,uCAAG,WAAOzF,GAAP,eAAA1R,EAAA,uDACb0M,EAAMiE,EAAW9D,IAAIa,EAAO9R,MAE9ByH,OAAO,CACP0N,OAAQW,EAAIX,OACZC,SAAUU,EAAIV,SACdxJ,IAAKkK,EAAIlK,IACT+D,IAAKmG,EAAInG,IACT0F,SAAUS,EAAIT,SACdzF,UAAWkG,EAAIlG,YAChBvO,MAAK,WAEJuU,EAAYX,MAAM,cAAe,KAAMnE,GACtCE,MACA3P,MAAK,SAAAya,GACFA,EAAGxK,SAAQ,SAAAL,GACPA,EAAIH,IAAIrJ,OAAO,CACXkE,QAAQ,GAAD,OAAKmK,EAAIX,OAAT,YAAmBW,EAAIV,kBAM1C6F,EAAQhG,MAAM,cAAe,KAAMnE,GAClCE,MACA3P,MAAK,SAAAya,GACFA,EAAGxK,SAAQ,SAAAL,GACPA,EAAIH,IAAIrJ,OAAO,CACXsU,eAAe,GAAD,OAAKjG,EAAIX,OAAT,YAAmBW,EAAIV,kBAKjD8F,EAAiBjG,MAAM,cAAe,KAAMnE,GAC3CE,MACA3P,MAAK,SAAAya,GACFA,EAAGxK,SAAQ,SAAAL,GACPA,EAAIH,IAAIrJ,OAAO,CACXsU,eAAe,GAAD,OAAKjG,EAAIX,OAAT,YAAmBW,EAAIV,kBAIjD3Q,IAAQuR,QAAQ,8CAEnBzU,OAAM,SAACC,GACJiD,IAAQjD,MAAM,+BACdC,QAAQD,MAAR,yCAAgDA,OA9CjC,2CAAH,sDAkDpB,OACI,kBAAC,KAAD,CACIxB,IAAI,aACJuT,QAAStU,EAAMsU,QACfhU,MAAON,EAAMM,MACboZ,KAAM2C,EACN9H,SAAUvU,EAAMwU,aAChBC,OAAQ,CACJ,yBAAK1T,IAAI,kBACL,kBAAC,IAAD,CAAQA,IAAI,OAAOjB,QAASE,EAAMwU,cAAlC,YAGA,kBAAC,IAAD,CAAQzT,IAAI,SAAS8D,KAAK,UAAUgD,QAASA,EAAS/H,QAASuc,GAA/D,aAKR1c,MAAO,KAEP,kBAAC,IAAD,CAAM8W,KAAMA,GACR,kBAAC,IAAK5V,KAAN,CACImF,KAAK,SACLiR,MAAM,UACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qCAGjBhG,MAAO,CAAEG,MAAO,MAEhB,kBAAC,IAAD,OAEJ,kBAAC,IAAKkB,KAAN,CACImF,KAAK,WACLiR,MAAM,YACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,uCAGjBhG,MAAO,CAAEG,MAAO,MAEhB,kBAAC,IAAD,OAEJ,kBAAC,IAAKkB,KAAN,CACImF,KAAK,MACLiR,MAAM,UACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,gCAIjB,kBAAC,IAAD,CAAOhG,MAAO,CAAEG,MAAO,QAE3B,kBAAC,IAAKkB,KAAN,CACImF,KAAK,MACLiR,MAAM,UACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,gCAIjB,kBAAC,IAAD,CAAOhG,MAAO,CAAEG,MAAO,QAE3B,kBAAC,IAAKkB,KAAN,CACImF,KAAK,WACLiR,MAAM,cACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,wCAIjB,kBAAC,IAAD,CAAOhG,MAAO,CAAEG,MAAO,QAE3B,kBAAC,IAAKkB,KAAN,CACImF,KAAK,YACLiR,MAAM,eACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2CAGjBhG,MAAO,CAAEG,MAAO,MAEhB,kBAAC,KAAD,UClOZ0X,GAAWC,IAAXD,OACAF,GAAYC,KAAZD,QAkRO4F,G,kDA/QX,WAAY/c,GAAQ,IAAD,8BACf,cAAMA,IAmBVuY,gBAAkB,SAACV,GACf,IAAMW,EAAW,GACTV,EAAa,EAAK5W,MAAlB4W,SACR,EAAK9U,SAAS,CAAE6E,SAAS,IAEzBgQ,EAAcxF,SAAQ,SAACL,GAAS,IAAD,EAQvBA,EAAIrK,OANJgF,EAFuB,EAEvBA,IACA+D,EAHuB,EAGvBA,IACAwF,EAJuB,EAIvBA,OACAC,EALuB,EAKvBA,SACAxF,EANuB,EAMvBA,UACAyF,EAPuB,EAOvBA,SAIA0B,IAC4C,IAA5C5B,EAAOgC,cAAcC,QAAQL,KACiB,IAA9C3B,EAAS+B,cAAcC,QAAQL,KACgB,IAA/CnH,EAAUuH,cAAcC,QAAQL,KACc,IAA9C1B,EAAS8B,cAAcC,QAAQL,KACJ,IAA3BpH,EAAIyH,QAAQL,KACe,IAA3BnL,EAAIwL,QAAQL,IAKhBU,EAASxW,KAAK,CACVjB,IAAKiR,EAAIjF,GACT8E,IAAKG,EAAIH,IACTqE,OAAO,GAAD,OAAKA,EAAL,YAAeC,GACrBxJ,MACA+D,MACAC,YACAyF,gBAIR,EAAKpT,SAAS,CACVwV,WACA3Q,SAAS,KA5DE,EAgFnBH,SAAW,EAAKyR,kBAhFG,EA6InB6D,UAAY,SAACnK,GACT,EAAK7P,SAAS,CACVsR,SAAS,EACTqE,SAAU9F,KAhJC,EAoJnBoK,gBAAkB,SAACvQ,GACf,IAAI2M,EAAE,eACNlC,GAAQ,CACJ7W,MAAO,uDACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,qCACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAG6D,gBAAgBxQ,OA7JZ,EAkKnByQ,iBAlKmB,uCAkKA,WAAOzQ,GAAP,SAAAvH,EAAA,+EACR,IAAIiY,SAAQ,SAACC,EAASC,GACzB,EAAK3G,YACAX,MAAM,cAAe,KAAMtJ,EAAQmF,KACnC0L,MAAM,GACNxL,MACA3P,MAAK,SAACya,GAAD,OAAQQ,EAAQR,EAAG/U,SACxBxF,OAAM,SAACkb,GAAD,OAASF,EAAOE,UAPhB,2CAlKA,wDA6KnBN,gBAAkB,SAACxQ,GACf,EAAKoJ,WACA9D,IAAItF,EAAQ3L,KACZ0c,SACArb,MAAK,kBAAMoD,IAAQuR,QAAQ,gCAC3BzU,OAAM,SAACkb,GAAD,OAAShY,IAAQjD,MAAM,2BAlLnB,EAqLnBmb,SArLmB,uCAqLR,WAAO7K,GAAP,SAAA1N,EAAA,sDACPK,IAAQqC,QAAQ,kBAChB,EAAKsV,iBAAiBtK,GAAQzQ,MAAK,SAAC0F,GAChCtC,IAAQmY,UACK,IAAT7V,EAAY,EAAKmV,gBAAgBpK,GACnB,IAAT/K,GACLtC,IAAQjD,MACJ,kEAPL,2CArLQ,wDAiMnBiS,aAAe,WACX,EAAKxR,SAAS,CACVsR,SAAS,EACTqE,SAAU,KACVC,cAAc,KArMH,EAyMnBK,WAAa,SAACpG,GACV,EAAK7P,SAAS,CAAE2V,SAAU9F,IAC1B,EAAK7P,SAAS,CAAE4V,cAAc,KAxM9B,EAAKe,QAAUvY,EAAI6R,YACnB,EAAK6C,WAAa,EAAK6D,QAAQzG,WAAW,YAC1C,EAAKyD,YAAc,EAAKgD,QAAQzG,WAAW,aAC3C,EAAK8I,QAAU,EAAKrC,QAAQzG,WAAW,SACvC,EAAK+I,iBAAmB,EAAKtC,QAAQzG,WAAW,kBAEhD,EAAKhS,MAAQ,CACT4W,SAAU,GACVjQ,SAAS,EACT2Q,SAAU,GACVlE,SAAS,EACTsJ,eAAe,EACfjF,SAAU,KACVC,cAAc,GAhBH,E,gEAiEf7Y,KAAK+V,WACAoE,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAKwY,mB,6BAGlB+B,GAAQ,IAAD,OACNA,IAAUva,KAAKmB,MAAM4W,WACrB/X,KAAKiD,SAAS,CAAE8U,SAAUwC,IAC1Bva,KAAK+V,WACAoE,QAAQ,iBAAkB,QAC1BnI,MACA3P,MAAK,SAACyV,GAAD,OAAmB,EAAKU,gBAAgBV,S,wCAMvC,IAAD,OACd,MAAO,CACH,CACIvX,MAAO,MACPS,IAAK,MACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEwH,IAAIgO,cAAcF,EAAE9N,MACxCmO,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CAAQhO,KAAK,OAAO/E,QAAS,kBAAM,EAAKmZ,WAAWpG,KAC/C,gCAASA,EAAOlG,QAI5B,CACIrM,MAAO,MACPS,IAAK,MACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEuL,IAAIiK,cAAcF,EAAE/J,MACxCoK,OAAQ,SAACjI,GAAD,OAAY,gCAASA,EAAOnC,OAExC,CACIpQ,MAAO,SACPS,IAAK,SACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE+Q,OAAOyE,cAAcF,EAAEvE,SAC3C4E,OAAQ,SAACjI,GAAD,OAAY,8BAAOA,EAAOqD,UAEtC,CACI5V,MAAO,cACPS,IAAK,WACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEiR,SAASuE,cAAcF,EAAErE,WAC7C0E,OAAQ,SAACjI,GAAD,OAAY,8BAAOA,EAAOuD,YAEtC,CACI9V,MAAO,eACPS,IAAK,YACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEwL,UAAUgK,cAAcF,EAAE9J,YAC9CmK,OAAQ,SAACjI,GAAD,OAAY,8BAAOA,EAAOlC,aAEtC,CACIrQ,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAOnN,MAAM,UACT,kBAAC,KAAD,CAASpF,MAAM,UACX,kBAACud,GAAA,EAAD,CACI/d,QAAS,kBAAM,EAAKkd,UAAUnK,IAC9BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,YACX,kBAACwd,GAAA,EAAD,CACIhe,QAAS,kBAAM,EAAK4d,SAAS7K,IAC7BrT,MAAO,CAAE8L,MAAO,oB,+BA0ElC,IAAD,SAODvL,KAAKmB,MALLoT,EAFC,EAEDA,QACAqE,EAHC,EAGDA,SACAH,EAJC,EAIDA,SACA3Q,EALC,EAKDA,QACA+Q,EANC,EAMDA,aAGJ,OACI,6BACI,kBAAC,GAAD,CACItE,QAASA,EACThU,MAAOqY,EAAW,wBAAuB,kBACzCnE,aAAczU,KAAKyU,aACnB3B,OAAQ8F,EACR7C,WAAY/V,KAAK+V,WACjBa,YAAa5W,KAAK4W,YAClBqF,QAASjc,KAAKic,QACdC,iBAAkBlc,KAAKkc,mBAE3B,kBAAC,GAAD,CACIlU,OACI,oCACI,kBAAC,IAAD,CAAKtC,QAAQ,iBACT,kBAAC,IAAD,CAAK7F,KAAM,GACP,sDAEJ,kBAAC,IAAD,CAAKA,KAAM,EAAGM,OAAQ,GAClB,kBAAC,KAAD,KACI,kBAAC,GAAD,CACIqG,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OACN,EAAKsP,OAAOtP,IAEhBzM,MAAO,CAAEG,MAAO,OAEpB,kBAAC,IAAD,CACIkF,KAAK,UACLkZ,OAAK,EACLje,QAAS,kBAAM,EAAKkd,cAHxB,aAYpBtV,SAAU3H,KAAK2H,SACfC,KAAM6Q,EACN3Q,QAASA,IAEZ+Q,GACG,kBAAC,GAAD,CACItE,QAASsE,EACTtD,cAAeqD,EAAS5X,IACxByT,aAAczU,KAAKyU,oB,GAxQpBxT,a,6DCPfgd,GAAWC,KAAXD,OAofOjC,GAlfI,SAAC/b,GAAW,IAAD,EACXuW,IAAKC,UAAbC,EADmB,qBAElByH,EAAoCle,EAApCke,QAASrL,EAA2B7S,EAA3B6S,OAAQ2F,EAAmBxY,EAAnBwY,SAAUjY,EAASP,EAATO,KAFT,EAIIiS,oBAAS,GAJb,oBAInB3K,EAJmB,KAIV6O,EAJU,OAKJlE,mBAAS,MALL,oBAKnBoC,EALmB,KAKduJ,EALc,OAMN3L,mBAAS,MANH,oBAMnBqC,EANmB,KAMfuJ,EANe,OAOkB5L,mBAAS,MAP3B,oBAOnB6L,EAPmB,KAOHC,EAPG,OAQoB9L,mBAAS,MAR7B,oBAQnB+L,EARmB,KAQFC,EARE,OASUhM,mBAAS,IATnB,oBASnBiM,EATmB,KASPC,EATO,OAUYlM,mBAAS,MAVrB,oBAUnBmM,EAVmB,KAUNC,EAVM,OAWMpM,mBAAS,MAXf,oBAWnBqM,EAXmB,KAWTC,EAXS,KAatBjN,EAAMzQ,EAAI6R,YACV8C,EAAelE,EAAIqB,WAAW,aAC9B4G,EAAWjI,EAAIqB,WAAW,SAC1B4C,GAAajE,EAAIqB,WAAW,YAC5B6L,GAAQlN,EAAIqB,WAAW,OAE3BF,qBAAU,WACDH,EAKOqL,EAAQlM,IAAIa,EAAO9R,KAC3BgR,MAAM3P,KAAV,uCAAe,WAAO4P,GAAP,mBAAA7M,EAAA,0DACP6M,EAAIC,OADG,oBAGH+M,EAAY,EAGQ,YAFlBrR,EAAWqE,EAAIrK,QAER4J,OANN,uBAOH/L,IAAQjD,MAAM,6DACdvC,EAAMwU,eARH,0CAYDsF,EAAS9D,MAAM,kBAAmB,KAAMrI,EAASF,QAClDsE,MACA3P,MAAK,SAAAya,GACFmC,EAAYnC,EAAG/U,QAElBxF,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAjBzB,YAmBHyc,EAAY,GAnBT,wBAoBHxZ,IAAQjD,MAAM,kEACdvC,EAAMwU,eArBH,kCAyBP2J,EAAOxQ,EAASiH,KAChBwJ,EAAMzQ,EAASkH,IACf+J,EAAe3D,KAAOtN,EAASiD,aAAaxD,WAC5C0R,EAAY7D,KAAOtN,EAASkD,UAAUzD,WA5B/B,UA8BDO,EAAS0G,YAAYtC,MAC1B3P,MAAK,SAAA4P,GACFiN,EAAcjN,KAhCX,QAmCPyE,EAAK0F,eAAe,CAChB+C,WAAYD,EAAYlS,GACxBgE,UAAWpD,EAASoD,UACpBC,aAAcrD,EAASqD,aACvB4D,IAAKjH,EAASiH,IACdC,GAAIlH,EAASkH,GACbjH,OAAQD,EAASsD,YACjBL,aAAcqK,KAAOtN,EAASiD,aAAaxD,YA1CxC,wBA8CP5K,QAAQC,IAAR,mCA9CO,4CAAf,uDALIgU,EAAK2F,gBAuDV,CAACvJ,EAAQ2F,EAAU/B,EAAMyH,IAE5B,IAAMiB,GAAU,SAACnW,EAAKwD,GAAN,OAAiBQ,OAAOhE,GAAKiE,SAAST,EAAQ,MAExD4S,GAAQ,uCAAG,WAAOC,EAAQC,GAAf,SAAAna,EAAA,sEACP4Z,GAAM/M,IAAIqN,GACX7W,OAAO,CAAE8W,UACThd,OAAM,SAAAC,GACH,MAAMA,KAJD,2CAAH,wDAQR8Z,GAAQ,uCAAG,sBAAAlX,EAAA,6DACbuR,GAAW,GADE,SAGPD,EAAKG,iBACNxU,KADC,uCACI,WAAMyU,GAAN,iBAAA1R,EAAA,yDACGoa,KADH,uBAEE7I,GAAW,GAFb,iCAMEhK,EAAU,GACdoJ,GAAaA,GAAW9D,IAAI6E,EAAIqI,YAP9B,SASIpJ,GACL/D,MACA3P,MAAK,SAAA4P,GACF,IAAIrK,EAAOqK,EAAIrK,OACf+E,EAAU,CACNK,GAAIiF,EAAIjF,GACRJ,IAAKhF,EAAKgF,IACVuJ,OAAQvO,EAAKuO,OACbC,SAAUxO,EAAKwO,SACftE,IAAKG,EAAIH,QAGhBvP,OAAM,SAAAC,GACH,MAAMA,KAtBR,QAyBEoL,EAAW,CACX4D,OAAQ,SACRmL,WAAW,EACXlO,YAAa9B,EAAQC,IACrBD,QAAQ,GAAD,OAAKA,EAAQwJ,OAAb,YAAuBxJ,EAAQyJ,UACtClF,YAAa4F,EAAIjJ,OACjBoD,aAAc6F,EAAI7F,aAClBD,UAAW8F,EAAI9F,UACfsD,YAAa3H,EAAQmF,IACrBkG,oBAAqB,KACrBC,kBAAmB,KACnBC,wBAAyB,KACzB7S,QAAS7E,EAAKE,QAGTgN,OAASoF,EAASA,EAAOpF,OAAV,WAAuBoJ,EAAIjC,IAA3B,YAAkCuK,GAAQtI,EAAIhC,GAAI,GAAlD,YAAwD8J,EAAYvV,OAAO,QAA3E,YAAsFyV,EAASzV,OAAO,SAEzHyJ,IACDlF,EAASuD,cAAgB7P,IAAS4R,UAAU+G,UAAUC,MACtDtM,EAASiH,IAAMiC,EAAIjC,IACnBjH,EAASkH,GAAK2K,OAAO3I,EAAIhC,IACzBlH,EAASiD,aAAe,IAAIa,KAAKkN,GACjChR,EAASkD,UAAY,IAAIY,KAAKoN,IAG9BhM,EACAyJ,GAAe3O,EAAUjB,EAASmK,GACjCzU,MAAK,WACFoD,IAAQuR,QAAQ,uCAChBN,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,+CAAoDF,OAGxDga,GAAgB5O,GACfvL,MAAK,WACFoD,IAAQuR,QAAQ,+CAChBN,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,gDAAqDF,OApE3D,4CADJ,uDAyEDD,OAAM,SAAC0U,GACJxU,QAAQC,IAAIuU,GACZxR,IAAQia,QAAQ,iDAEnBrM,SAAQ,WACLsD,GAAW,MAjFN,2CAAH,qDAqFR6F,GAAe,uCAAG,WAAO5O,GAAP,SAAAxI,EAAA,sDACpB4Q,EAAa/D,IAAb,UAAoBrE,EAASF,SAAUiS,IAAI/R,GAC1CvL,MAAK,WACF,IAAIud,EAAY,IAAIlO,KAAKkN,GACrBiB,EAAejS,EAASF,OAAOqH,MAAM,KACrC+K,EAAOL,OAAOM,SAASF,EAAa,GAAGnb,OAAO,IAElDkb,EAAUI,SAASJ,EAAUrS,WAAa,GAE1C,IAAK,IAAIa,EAAI,EAAGA,GAAKsQ,EAAYtQ,IAAK,CAClC,IAAI1B,EAAQ,CACRgB,OAAO,GAAD,OAAK0R,GAAQU,EAAM,GAAnB,YAAyBD,EAAa,IAAtC,OAA2CjS,EAASF,OAAOhJ,OAAO,EAAG,IAArE,OAA0EkJ,EAASF,OAAOhJ,OAAO,GAAI,IAArG,OAA0G0a,GAAQhR,EAAG,IAC3HX,SAAUG,EAASqD,aACnB7D,WAAY,IAAIsE,KAAKkO,EAAUI,SAASJ,EAAUrS,WAAa,IAC/D2H,WAAW,GAGfc,EAAa/D,IAAb,UAAoBrE,EAASF,SAAUyF,WAAW,UAAUlB,IAA5D,UAAmEmN,GAAQhR,EAAG,KAAMuR,IAAIjT,OAG/FrK,MAAK,SAAA4P,GACFoN,GAAS,GAAD,OAAIzR,EAASiH,IAAb,YAAoBjH,EAASkH,KAAM,MAE9CvS,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAxBI,2CAAH,sDA4Bf+Z,GAAc,uCAAG,WAAO3O,EAAUjB,EAASmK,GAA1B,eAAA1R,EAAA,6DACb0M,EAAMqM,EAAQlM,IAAIrE,EAASF,QADd,SAGboE,EACLrJ,OAAO,CACJgG,YAAa9B,EAAQC,IACrBD,QAAQ,GAAD,OAAKA,EAAQwJ,OAAb,YAAuBxJ,EAAQyJ,UACtCnF,aAAc6F,EAAI7F,aAClBD,UAAW8F,EAAI9F,UACfsD,YAAa3H,EAAQmF,MAExBzP,KARK,uCAQA,WAAOwa,GAAP,SAAAzX,EAAA,yDACEwI,EAASF,SAAWoF,EAAOpF,OAD7B,gCAC2CyQ,EAAQlM,IAAIa,EAAOpF,QAAQgQ,SADtE,UAGE9P,EAASiH,MAAQ/B,EAAO+B,KAAOjH,EAASkH,KAAOhC,EAAOgC,GAHxD,gCAIQuK,GAAS,GAAD,OAAIvM,EAAO+B,IAAX,YAAkB/B,EAAOgC,KAAM,GAJ/C,uBAKQuK,GAAS,GAAD,OAAIzR,EAASiH,IAAb,YAAoBjH,EAASkH,KAAM,GALnD,OAOFrS,QAAQC,IAAR,+BAPE,2CARA,uDAiBLH,OAAM,SAACC,GACJC,QAAQD,MAAR,yCAAgDA,OArBjC,2CAAH,0DAyBdyd,GACF,kBAAC,IAAKnf,KAAN,CAAWmF,KAAK,MAAMU,SAAO,GACzB,kBAAC,KAAD,CACIlH,MAAO,CAAEG,MAAO,IAChB4G,YAAY,MACZ0Z,SAAU,SAAApJ,GACNsH,EAAOtH,GACHhC,GAAI0K,MAEZW,SAAUrN,GAGV7S,EAAMqY,MAAMjQ,KAAI,SAAAwM,GAAG,OACf,kBAACoJ,GAAD,CAAQjd,IAAK6T,EAAI7T,IAAKkL,MAAO2I,EAAI0D,QAAS1D,EAAI0D,aAOxDiH,GAAS,uCAAG,sBAAApa,EAAA,yDACdmZ,EAAkB,cAClBE,EAAmB,MAFL,SAKL5J,EALK,sBAKM,IAAIuL,MAAM,qBALhB,UAMLtL,EANK,sBAMK,IAAIsL,MAAM,8BANf,YAONtL,GAAM,GAAKA,GAAM,KAAOuL,MAAMvL,IAPxB,sBAOmC,IAAIsL,MAAM,mCAP7C,wBASJpB,GAAM/M,IAAN,UAAa4C,EAAb,YAAoBC,IACzB9C,MACA3P,MAAK,SAAS4P,GACX,GAAIA,EAAIC,OAAQ,CACZ,GAAID,EAAIrK,OAAO2X,OAAUzM,GAAUA,EAAOgC,KAAOA,EAG7C,OAFAyJ,EAAkB,WAClBE,EAAmB,OACZ,EAEP,MAAM,IAAI2B,MAAM,2BAGpB,MAAM,IAAIA,MAAM,sCAGvB7d,OAAM,SAAAC,GACH,MAAMA,KAzBA,0DA4BV+b,EAAkB,SAClBE,EAAmB,KAAMhZ,SA7Bf,kCA+BP,GA/BO,0DAAH,qDAkCf,OACI,kBAAC,KAAD,CACIzE,IAAI,aACJuT,QAAStU,EAAMsU,QACfhU,MACI,oCACKN,EAAMM,MADX,OAIQuS,GACA,kCAEI,gCACKA,EAAOpF,QAHhB,MAUZiM,KAAM2C,GACN9H,SAAUvU,EAAMwU,aAChBC,OAAQ,CACJ,yBAAK1T,IAAI,kBACL,kBAAC,IAAD,CAAQA,IAAI,OAAOjB,QAASE,EAAMwU,cAAlC,YAGA,kBAAC,IAAD,CACIzT,IAAI,SACJ8D,KAAK,UACLgD,QAASA,EACT/H,QAASuc,IAJb,cAWR,kBAAC,IAAD,CAAM5F,KAAMA,EAAMxQ,cAAa,gBAE1B,SAAWwY,IAEX,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAK7e,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,aACLiR,MAAM,UACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,0BAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACI3Q,YAAY,wBACZ/G,MAAO,CAAEG,MAAO,KAChB0gB,YAAU,EACVC,YAAU,EACVC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAO/b,SAASuT,cAAcC,QAAQsI,EAAMvI,gBAAkB,IAI9DlY,EAAMwY,SAASpQ,KAAI,SAAAsE,GAAO,OACtB,kBAACsR,GAAD,CAAQjd,IAAK2L,EAAQ3L,IAAKkL,MAAOS,EAAQ3L,KAAzC,UAAmD2L,EAAQwJ,OAA3D,YAAqExJ,EAAQyJ,iBAMjG,kBAAC,IAAD,CAAKvW,KAAM,GACP,kBAAC,KAAD,CAASU,MAAM,iBACX,uBAAG2T,KAAK,aAAaoC,OAAO,SAAS7W,MAAO,CAAEkF,OAAQ,UAAtD,wBAOZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK9E,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,YACLiR,MAAM,YACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,cAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACIyJ,IAAK,EACLC,IAAK,IACLC,KAAM,EACNta,YAAY,YACZua,UAAW,SAAA7U,GAAK,gBAAOA,EAAP,OAChB8U,OAAQ,SAAA9U,GAAK,OAAIA,EAAM+U,QAAQ,SAAU,SAIrD,kBAAC,IAAD,CAAKphB,KAAM,GAAIM,OAAQ,GACnB,kBAAC,IAAKW,KAAN,CACImF,KAAK,eACLiR,MAAM,UACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,cAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACI2J,KAAM,IACNF,IAAK,GACLC,IAAK,IACLra,YAAY,QACZua,UAAW,SAAA7U,GAAK,MAAI,YAAKA,EAAL,KAAc+U,QAAQ,wBAAyB,MACnED,OAAQ,SAAA9U,GAAK,OAAIA,EAAM+U,QAAQ,iBAAkB,UAMjE,kBAAC,IAAKngB,KAAN,CACImF,KAAK,KACLiR,MAAM,SACNC,aAAa,WACb9Q,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qBACnCyb,aAAW,EACXC,eAAgB7C,EAChB8C,KAAM5C,GAEN,kBAAC,IAAD,CAAO2B,SAAUrN,EAAQuO,YAAapB,GAAaqB,SAAU,SAAAC,GAAE,OAAIlD,EAAMkD,EAAGjL,OAAOpK,QAAQzM,MAAO,CAAEG,MAAO,KAAO4G,YAAY,KAAKgb,OAAQhC,MAG/I,kBAAC,IAAK1e,KAAN,CACImF,KAAK,SACLiR,MAAM,WACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,cAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACIyJ,IAAK,EACLC,IAAK,IACLC,KAAM,EACNta,YAAY,eACZgb,OAAQ,SAAAD,GACJ,IAAIE,EAAMF,EAAGjL,OAAOpK,MAIpB,GAHA6S,EAAY,MACZJ,EAAc8C,GAET7C,GAAgB6C,EAArB,CAEA,IAAIjV,EAAQ0O,KAAO0D,EAAY5M,OAC/B+M,EAAYvS,EAAMiQ,IAAIgF,EAAM,EAAG,QAEnCtB,SAAUrN,KAGlB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKjT,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,eACLiR,MAAM,kBACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,oBAIjB0R,aAAa,YAEb,kBAAC,KAAD,CACI3Q,YAAY,kBACZkb,OAAO,QACPrY,OAAO,YACPsY,OAAQA,KACRC,aAAc,SAAAC,GACV,OAAOA,GAAWA,EAAU3G,OAAS4G,SAAS,EAAG,MAErDR,SAAU,SAAAS,GAIN,GAHAlD,EAAe,MACfE,EAAY,MAEPgD,GAASrD,EAAd,CAEAqD,EAAKpC,IAAI,OAAQ,GACjBd,EAAekD,GACf,IAAIvV,EAAQ0O,KAAO6G,EAAK/P,OACxB+M,EAAYvS,EAAMiQ,IAAIiC,EAAa,EAAG,QAE1CyB,SAAUrN,MAItB,kBAAC,IAAD,CAAKjT,KAAM,GAAIM,OAAQ,GAEf2e,GAAY,4CAAiB,gCAAUA,EAASzV,OAAO,oBCrd3E+N,GAAYC,KAAZD,QACAE,GAAWC,IAAXD,OAEF1I,GAAW,CAAEC,KAAM,UAAWC,MAAO,SAOrCC,GAAW,SAACvC,GACd,MALiB,kBADD6E,EAME7E,EAAMa,SAASuE,mBAAmB,QAAShD,KAL3ByC,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,GAF5B,IAACgD,GASdqG,GAAS,SAAClL,GACZ,OAAIA,EAAcA,EAAMa,SACZ,IAAIqE,MAGdH,GAAc,SAACC,GACjB,IAAIC,EAAM,CAAElG,MAAO,QACnB,OAAQiG,GACJ,IAAK,SACDC,EAAIlG,MAAQ,UACZ,MACJ,IAAK,WACDkG,EAAIlG,MAAQ,UACZ,MACJ,IAAK,aACDkG,EAAIlG,MAAQ,UAMpB,OAAOkG,GAGLoG,G,kDACF,WAAY5X,GAAQ,IAAD,8BACf,cAAMA,IAyBV+I,cAAgB,SAACC,GAAD,OACZ,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IA9BK,EAgCnBoM,iBAAmB,SAACyC,GAChB,IAAMjC,EAAY,GACVkC,EAAa,EAAK5W,MAAlB4W,SAERD,EAAcxF,QAAd,uCAAsB,WAAOL,GAAP,2CAAA7M,EAAA,2DAgBd6M,EAAIrK,OAdJ+E,EAFc,EAEdA,QACA8B,EAHc,EAGdA,YACA+C,EAJc,EAIdA,OACA9D,EALc,EAKdA,OACAmD,EANc,EAMdA,aACAC,EAPc,EAOdA,UACAE,EARc,EAQdA,UACAE,EATc,EASdA,YACAD,EAVc,EAUdA,aACA4D,EAXc,EAWdA,IACAC,EAZc,EAYdA,GACAR,EAbc,EAadA,YACAnD,EAdc,EAcdA,cACA9L,EAfc,EAedA,SAIA0S,IAC6C,IAA7CpL,EAAQwL,cAAcC,QAAQL,KACc,IAA5CrK,EAAOyK,cAAcC,QAAQL,KAC+B,IAA5DhJ,GAAS8B,GAAcsH,cAAcC,QAAQL,KACY,IAAzDhJ,GAAS+B,GAAWqH,cAAcC,QAAQL,KACG,IAA7C1S,EAAQ8S,cAAcC,QAAQL,GAxBhB,iDA4BlBlC,EAAU5T,KAAK,CACXjB,IAAKiR,EAAIjF,GACTL,UACA8B,cACAf,SACA8D,SACAX,eACAC,YACAE,YACAE,cACAD,eACA4D,MACAC,KACAR,cACAnD,gBACA9L,YA3Cc,2CAAtB,uDA8CA,EAAKpC,SAAS,CACV4S,YACA/N,SAAS,KApFE,EAwFnBuQ,aAAe,SAACP,GACZ,IAAMQ,EAAQ,GAEdR,EAAcxF,SAAQ,SAACL,GAAS,IACtBsG,EAAWtG,EAAIrK,OAAf2Q,OAEND,EAAMrW,KAAK,CACPjB,IAAKiR,EAAIjF,GACTuL,OAAQA,OAIhB,EAAKtV,SAAS,CACVqV,WArGW,EAyGnBE,gBAAkB,SAACV,GACf,IAAMW,EAAW,GAEjBX,EAAcxF,SAAQ,SAACL,GAAS,IAAD,EACKA,EAAIrK,OAA9BgF,EADqB,EACrBA,IAAKuJ,EADgB,EAChBA,OAAQC,EADQ,EACRA,SAEnBqC,EAASxW,KAAK,CACVjB,IAAKiR,EAAIjF,GACTJ,MACAuJ,SACAC,gBAIR,EAAKnT,SAAS,CACVwV,cAxHW,EAkJnBwE,UAAY,SAACnK,GACT,EAAK7P,SAAS,CACVsR,SAAS,EACTqE,SAAU9F,KArJC,EAyJnB4F,wBAA0B,SAAC5F,GACvB,EAAK7P,SAAS,CACV0V,iBAAiB,EACjBC,SAAU9F,KA5JC,EAgKnB2B,aAAe,WACX,EAAKxR,SAAS,CACV4V,cAAc,EACdC,qBAAqB,EACrBH,iBAAiB,EACjBpE,SAAS,EACTqE,SAAU,QAtKC,EA0KnBG,IAAM,SAACC,GACH,EAAKC,cACL,EAAKhZ,MAAM+B,SAASC,YAAK,aAAD,OAAc+W,MA5KvB,EA+KnBE,WAAa,SAACpG,GACV,EAAK7P,SAAS,CAAE2V,SAAU9F,IAC1B,EAAK7P,SAAS,CAAE4V,cAAc,KAjLf,EAoLnBM,kBAAoB,SAACrG,GACjB,EAAK7P,SAAS,CAAEsS,cAAezC,EAAOwB,YAAYtH,KAClD,EAAK/J,SAAS,CAAE6V,qBAAqB,KAtLtB,EAyLnBvF,SAzLmB,uCAyLR,WAAOT,GAAP,eAAA1N,EAAA,6DACHuH,EAAU,KADP,SAEDmG,EAAOwB,YAAYtC,MACxB3P,MAAK,SAAA4P,GAAG,OAAItF,EAAUsF,EAAIrK,UAC1BrF,OAAM,SAAAC,GACHiD,IAAQjD,MAAM,wEALX,UAQFmK,EARE,iDAUP6G,aAAI/C,GAAS,CAAE7C,SAAUkF,EAAQnG,QAASA,KACrC8G,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,mBAEgBrB,EAAOpF,OAFvB,SAIAqG,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAvBb,2CAzLQ,wDAoNnBmF,SAAW,EAAKyR,kBApNG,EAiWnB8D,gBAAkB,SAACtP,GACf,IAAI0L,EAAE,eACNlC,GAAQ,CACJ7W,MAAO,uDACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,oBACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAG0I,iBAAiBpU,OA1Wb,EA+WnBqU,4BA/WmB,uCA+WW,WAAOrU,GAAP,SAAAxI,EAAA,+EACnB,IAAIiY,SAAQ,SAACC,EAASC,GACzB,EAAKxD,SACA9D,MAAM,kBAAmB,KAAMrI,EAASF,QACxC8P,MAAM,GACNxL,MACA3P,MAAK,SAACya,GACa,IAAZA,EAAG/U,KACH,EAAKiS,kBACA/D,MAAM,kBAAmB,KAAMrI,EAASF,QACxC8P,MAAM,GACNxL,MACA3P,MAAK,SAACya,GACHQ,EAAQR,EAAG/U,SAGnBuV,EAAQR,EAAG/U,SAGlBxF,OAAM,SAACkb,GAAD,OAASF,EAAOE,UAnBL,2CA/WX,wDAuYnBuE,iBAAmB,SAACpU,GAChB,EAAKoI,aACA/D,IAAIrE,EAAS5M,KACb0c,SACArb,MAAK,WAEF,EAAK6f,OACJjQ,IADD,UACQrE,EAASiH,IADjB,YACwBjH,EAASkH,KAChC9C,MACA3P,MAAK,SAAA8f,GACFA,EAAKrQ,IAAIrJ,OAAO,CAAE8W,OAAO,OAE7B9Z,IAAQuR,QAAQ,gCAEnBzU,OAAM,SAACkb,GAAD,OAAShY,IAAQjD,MAAM,2BArZnB,EAwZnB6W,WAxZmB,uCAwZN,WAAOvG,GAAP,eAAA1N,EAAA,yDACa,WAAlB0N,EAAOtB,OADF,uBAEL/L,IAAQjD,MAAM,sEAFT,0BAML8W,EANK,eAOTlC,GAAQ,CACJ7W,MAAO,4DACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,sBACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAGZ,wBAAwB5F,MAd1B,2CAxZM,wDA2anB6K,SA3amB,uCA2aR,WAAO7K,GAAP,SAAA1N,EAAA,sDACPK,IAAQqC,QAAQ,kBAChB,EAAKma,4BAA4BnP,GAAQzQ,MAAK,SAAC0F,GAC3CtC,IAAQmY,UACK,IAAT7V,EAAY,EAAKmV,gBAAgBpK,GAC5B/K,GAAQ,GAAGtC,IAAQjD,MAAM,yFAL/B,2CA3aQ,sDAGf,EAAKwT,aAAe3U,EAAI6R,YAAYC,WAAW,aAC/C,EAAK0G,YAAcxY,EAAI6R,YAAYC,WAAW,YAC9C,EAAK2G,SAAWzY,EAAI6R,YAAYC,WAAW,SAC3C,EAAK+O,OAAS7gB,EAAI6R,YAAYC,WAAW,OACzC,EAAK4G,SAAW1Y,EAAI6R,YAAYC,WAAW,SAC3C,EAAK6G,kBAAoB3Y,EAAI6R,YAAYC,WAAW,kBAEpD,EAAK8F,YAAc,KACnB,EAAK9X,MAAQ,CACTX,KAAMP,EAAMO,KAAKA,KACjBsH,SAAS,EACT+N,UAAW,GACX4C,SAAU,GACVH,MAAO,GACP/D,SAAS,EACTqE,SAAU,KACVD,iBAAiB,EACjBE,cAAc,EACdC,qBAAqB,EACrBvD,cAAe,MAtBJ,E,gEA6HfvV,KAAKiZ,YAAcjZ,KAAKgW,aACnBmE,QAAQ,gBAAiB,QACzBC,WAAWpa,KAAKqV,kBACrBrV,KAAK6Z,YACAM,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAKwY,iBACrBxY,KAAK8Z,SAASK,QAAQ,UAAUC,WAAWpa,KAAKqY,gB,yCAGjCgC,EAAWC,M,6BAEvBC,GAAQ,IAAD,OACNA,EAAMpC,gBAAkBnY,KAAKmB,MAAM4W,WACnC/X,KAAKiD,SAAS,CAAE6E,SAAS,IACzB9H,KAAKiD,SAAS,CAAE8U,SAAUwC,EAAMpC,gBAChCnY,KAAKgW,aACAhE,MACA3P,MAAK,SAACyV,GAAD,OAAmB,EAAKzC,iBAAiByC,S,wCAwExC,IAAD,OACd,MAAO,CACH,CACIvX,MAAO,YACPS,IAAK,SACLwZ,OAAQ,CACJC,QAAS,SAACrV,EAAGsV,GAAJ,OAAUtV,EAAEyP,IAAI8F,WAAWC,cAAcF,EAAE7F,IAAI8F,cAE5DE,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAAoD,IAAjCA,EAAOpF,OAAO0K,QAAQlM,IACnD6O,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CAAQhO,KAAK,OAAO/E,QAAS,kBAAM,EAAKmZ,WAAWpG,KAC/C,gCAASA,EAAOpF,WAI5B,CACInN,MAAO,UACPS,IAAK,UACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEuH,QAAQiO,cAAcF,EAAE/N,UAC5CoO,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBAAM,EAAKoZ,kBAAkBrG,KAEtC,gCAASA,EAAOnG,YAI5B,CACIpM,MAAO,YACPS,IAAK,YACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE4L,UAAU2J,WAAWC,cAAcF,EAAE1J,UAAU2J,aACnEE,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAAmBA,EAAO9B,YAAc9E,GAClD6O,OAAQ,SAACjI,GAAD,OACJ,oCACI,kBAAC,KAAD,CACIkI,MAAK,UAAKlI,EAAO9B,UAAZ,OACLvR,MAAO,CAAEwb,gBAAiB,gBAK1C,CACI1a,MAAO,SACPS,IAAK,eACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE6L,aAAa0J,WAAWC,cAAcF,EAAEzJ,aAAa0J,aACzEI,OAAQ,SAACjI,GAAD,OACJ,gCACI,0BAAMrT,MAAO,CAAE8L,MAAO,UAAWlE,SAAU,UACtC,EAAK2B,cAAc8J,EAAO7B,kBAK3C,CACI1Q,MAAO,eACPS,IAAK,eACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAEyL,eAAesK,OAASD,KAAOxD,GAAOgD,EAAE7J,eAAesK,QACzFJ,OAAQ,SAACjI,GAAD,OACJ,8BACK/D,GAAS+D,EAAOjC,iBAI7B,CACItQ,MAAO,YACPS,IAAK,YACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAE0L,YAAYqK,OAASD,KAAOxD,GAAOgD,EAAE5J,YAAYqK,QACnFJ,OAAQ,SAACjI,GAAD,OACJ,8BACK/D,GAAS+D,EAAOhC,cAI7B,CACIvQ,MAAO,SACPS,IAAK,SACL6Z,QAAS,CACL,CACIhL,KAAM,SACN3D,MAAO,UAEX,CACI2D,KAAM,aACN3D,MAAO,cAEX,CACI2D,KAAM,WACN3D,MAAO,aAGf4O,SAAU,SAAC5O,EAAO4G,GAAR,OAAoD,IAAjCA,EAAOtB,OAAO4G,QAAQlM,IACnDsO,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEoM,OAAOmJ,WAAWC,cAAcF,EAAElJ,OAAOmJ,aAC7DI,OAAQ,SAACjI,GAAD,OACJ,gCACI,0BAAMrT,MAAO8R,GAAYuB,EAAOtB,SAC3BsB,EAAOtB,WAKxB,CACIjR,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAO/K,KAAK,UACR,kBAAC,KAAD,CAASxH,MAAM,aACX,kBAACqU,GAAA,EAAD,CACI5T,IAAI,WACJjB,QAAS,kBAAM,EAAKwT,SAAST,IAC7BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,UACX,kBAACud,GAAA,EAAD,CACI/d,QAAS,kBAAM,EAAKkd,UAAUnK,IAC9BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,eACX,kBAAC6a,GAAA,EAAD,CACIrb,QAAS,kBAAM,EAAKsZ,WAAWvG,IAC/BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,YACX,kBAACwd,GAAA,EAAD,CACIhe,QAAS,kBAAM,EAAK4d,SAAS7K,IAC7BrT,MAAO,CAAE8L,MAAO,oB,+BA4FlC,IAAD,SAaDvL,KAAKmB,MAXL0U,EAFC,EAEDA,UACA/N,EAHC,EAGDA,QACAyM,EAJC,EAIDA,QACAqE,EALC,EAKDA,SACAH,EANC,EAMDA,SACAH,EAPC,EAODA,MACA/C,EARC,EAQDA,cACAsD,EATC,EASDA,aACAC,EAVC,EAUDA,oBACAH,EAXC,EAWDA,gBACAnY,EAZC,EAYDA,KAGJ,OACI,6BACK+T,GACG,kBAAC,GAAD,CACIA,QAASA,EACThU,MAAQqY,EAAW,wBAAuB,iBAC1CpY,KAAMA,EACNiY,SAAUA,EACVH,MAAOA,EACP7D,aAAczU,KAAKyU,aACnB3B,OAAQ8F,EACRuF,QAASne,KAAKgW,eAGrB6C,GACG,kBAAC,GAAD,CACItE,QAASsE,EACTrG,eAAgBoG,EAAS5X,IACzByT,aAAczU,KAAKyU,eAG1BqE,GACG,kBAAC,GAAD,CACIvE,QAASuE,EACTvD,cAAeA,EACfd,aAAczU,KAAKyU,eAG1BkE,GACG,kBAAC,GAAD,CACIpE,QAASoE,EACTnG,eAAgBoG,EAAS5X,IACzByT,aAAczU,KAAKyU,eAG3B,kBAAC,KAAD,CACIlQ,UAAU,mBACVhE,MAAM,YACN8a,SAAS,qBACTC,MAAO,CACH,kBAAC,GAAD,CACIta,IAAI,IACJwF,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OAAW,EAAKsP,OAAOtP,IACjCzM,MAAO,CAAEG,MAAO,OAEpB,kBAAC,IAAD,CACIoB,IAAI,IACJ8D,KAAK,UACLkZ,OAAK,EACLje,QAAS,kBAAM,EAAKkd,cAJxB,aAUNjd,KAAK2H,SAAS,GAAGkT,QAAQ1M,QACvBmK,EAAMjQ,KAAI,SAACwM,GACP,EAAKlN,SAAS,GAAGkT,QAAQ5Y,KAAK,CAC1B4N,KAAK,OAAD,OAASgF,EAAI0D,QACjBrM,MAAM,IAAD,OAAM2I,EAAI0D,cAGzBvY,KAAK2H,SAAS,GAAGkT,QAAQ1M,QACvB0H,EACKxN,KAAI,SAACuF,GAAD,OAAcA,EAASoD,aAC3ByK,QACG,SAACvP,EAAOwP,EAAOC,GAAf,OACIA,EAAKvD,QAAQlM,KAAWwP,KAE/BE,MAAK,SAACxW,EAAGsV,GAAJ,OAAUtV,EAAIsV,KACnBrS,KAAI,SAAC2I,GACF,EAAKrJ,SAAS,GAAGkT,QAAQ5Y,KAAK,CAC1B4N,KAAK,GAAD,OAAKmB,EAAL,OACJ9E,MAAO8E,OAGvB,kBAAC,GAAD,CACIrJ,SAAU3H,KAAK2H,SACfC,KAAMiO,EACN/N,QAASA,S,GAphBL7G,aAiiBTC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyB2W,I,qBC9lBhCoG,GAAWC,KAAXD,OAwSOjC,GAtSI,SAAC/b,GAAW,IAAD,EACXuW,IAAKC,UAAbC,EADmB,qBAElBkD,EAAiC3Z,EAAjC2Z,QAAS9G,EAAwB7S,EAAxB6S,OAAQwF,EAAgBrY,EAAhBqY,MAAO9X,EAASP,EAATO,KAE1BoW,EAAcgD,EAAQzG,WAAW,aACjC+I,EAAmBtC,EAAQzG,WAAW,kBALlB,EAOJV,mBAAS,MAPL,oBAOnBoC,EAPmB,KAOduJ,EAPc,OAQN3L,mBAAS,MARH,oBAQnBqC,EARmB,KAQfuJ,EARe,OASkB5L,mBAAS,MAT3B,oBASnB6L,EATmB,KASHC,EATG,OAUoB9L,mBAAS,MAV7B,oBAUnB+L,EAVmB,KAUFC,EAVE,OAWMhM,mBAAS,MAXf,oBAWnB7E,EAXmB,KAWTwU,EAXS,OAYA3P,mBAAS,MAZT,oBAYnBjG,EAZmB,KAYZ6V,EAZY,OAcI5P,oBAAS,GAdb,oBAcnB3K,EAdmB,KAcV6O,EAdU,KAgB1B1D,qBAAU,WACDH,EAKL8D,EAAY3E,IAAIa,EAAOwP,iBACtBtQ,MACA3P,MAAK,SAAA4P,GACF,GAAIA,EAAIC,OAAQ,CACZ,IAAIqQ,EAAatQ,EAAIrK,OAErBwW,EAAOmE,EAAW1N,KAClBwJ,EAAMkE,EAAWzN,IACjBsN,EAAYG,GACZF,EAAS,IAAI3Q,KAAKoB,EAAOtG,QAEzBkK,EAAK0F,eAAe,CAChBvH,IAAK0N,EAAW1N,IAChBC,GAAIyN,EAAWzN,GACftI,MAAO0O,KAAOpI,EAAOtG,OACrBoE,UAAWkC,EAAOlC,UAClBmG,OAAQjE,EAAOiE,OACfyL,YAAa1P,EAAO0P,kBArB5B9L,EAAK2F,gBA0BV,CAACvJ,EAAQ4D,EAAMkD,IAElB3G,qBAAU,WACF6B,GAAI2N,MAET,CAAC5N,IAEJ,IAAMyH,EAAQ,uCAAG,sBAAAlX,EAAA,6DACbuR,GAAW,GADE,SAEPD,EACLG,iBACAxU,KAFK,uCAEA,WAAMyU,GAAN,SAAA1R,EAAA,sEACUqd,IADV,wCAEE9L,GAAW,GAFb,0BAME7D,EACAyJ,EAAezF,GAAKzU,MAAK,WACrBqU,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,+CAAoDF,OAGxDga,EAAgB1F,GAAKzU,MAAK,WACtBqU,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHC,QAAQC,IAAR,gDAAqDF,OApB3D,2CAFA,uDA0BLD,OAAM,SAAA0U,GACHxU,QAAQC,IAAI,mBAAoBuU,MAEnC5D,SAAQ,WACLsD,GAAW,MAhCF,2CAAH,qDAqCR6F,EAAe,uCAAG,WAAO1F,GAAP,SAAA1R,EAAA,sDACpB8W,EAAiBO,IAAI,CACjBE,WAAW,EACXnQ,MAAOA,EACP8V,gBAAiB1U,EAASF,OAC1BqP,eAAgBnP,EAASjB,QACzB2H,YAAa1G,EAAS0G,YACtB1D,UAAWkG,EAAIlG,UACfmG,OAAQD,EAAIC,OACZyL,YAAa1L,EAAI0L,YACjB5F,eAAgBtb,IAAS4R,UAAU+G,UAAUC,MAC7C7U,QAAS7E,EAAKE,QAEjB2B,MAAK,SAACwa,GACHpX,IAAQuR,QAAQ,4CAEnBzU,OAAM,SAACC,GACJiD,IAAQjD,MAAM,iCACdC,QAAQD,MAAMA,MAlBE,2CAAH,sDAuBf+Z,EAAc,uCAAG,WAAOzF,GAAP,SAAA1R,EAAA,sDACnB8W,EAAiBjK,IAAIa,EAAO9R,KAC3ByH,OAAO,CACJ+D,MAAOA,EACP8V,gBAAiB1U,EAASF,OAC1BqP,eAAgBnP,EAASjB,QACzB2H,YAAa1G,EAAS0G,YACtB1D,UAAWkG,EAAIlG,UACfmG,OAAQD,EAAIC,OACZyL,YAAa1L,EAAI0L,cAClBngB,MAAK,WACJoD,IAAQuR,QAAQ,8CAEnBzU,OAAM,SAACC,GACJiD,IAAQjD,MAAM,+BACdC,QAAQD,MAAMA,MAfC,2CAAH,sDAmBdyd,EACF,kBAAC,IAAKnf,KAAN,CAAWmF,KAAK,MAAMU,SAAO,GACzB,kBAAC,KAAD,CACIlH,MAAO,CAAEG,MAAO,IAChB4G,YAAY,MACZ0Z,SAAU,SAAApJ,GACNsH,EAAOtH,KAIXwB,EAAMjQ,KAAI,SAAAwM,GAAG,OACT,kBAAC,GAAD,CAAQ7T,IAAK6T,EAAI7T,IAAKkL,MAAO2I,EAAI0D,QAAS1D,EAAI0D,aAOxDkK,EAAe,uCAAG,4BAAArd,EAAA,yDACpBmZ,EAAkB,cAClBE,EAAmB,MACfnc,GAAS,EAHO,SAMXuS,EANW,sBAMA,IAAIuL,MAAM,qBANV,UAOXtL,EAPW,sBAOD,IAAIsL,MAAM,8BAPT,YAQZtL,GAAM,GAAKA,GAAM,KAAOuL,MAAMvL,IARlB,uBAQ6B,IAAIsL,MAAM,mCARvC,yBAUVxJ,EAAYX,MAAM,MAAO,KAAMpB,GAAKoB,MAAM,KAAM,KAAMnB,GAAImB,MAAM,YAAa,MAAM,GACxFjE,MACA3P,MAAK,SAAAya,GAIF,GAHAsF,EAAY,MACZ7D,EAAkB,MAEF,IAAZzB,EAAG/U,KAAY,MAAM,IAAIqY,MAAM,gDAEnCtD,EAAGxK,SAAQ,SAAAL,GACPmQ,EAAYnQ,EAAIrK,QAChB2W,EAAkB,WAClBjc,GAAS,QAIhBC,OAAM,SAAAC,GACH,MAAMA,KA1BM,0DA6BhB+b,EAAkB,SAClBE,EAAmB,KAAMhZ,SA9BT,iCAgCbnD,GAhCa,0DAAH,qDAmCrB,OACI,kBAAC,KAAD,CACItB,IAAI,aACJuT,QAAStU,EAAMsU,QACfhU,MAAON,EAAMM,MACboZ,KAAM2C,EACN9H,SAAUvU,EAAMwU,aAChBC,OAAQ,CACJ,yBAAK1T,IAAI,kBACL,kBAAC,IAAD,CAAQA,IAAI,OAAOjB,QAASE,EAAMwU,cAAlC,YAGA,kBAAC,IAAD,CAAQzT,IAAI,SAAS8D,KAAK,UAAUgD,QAASA,EAAS/H,QAASuc,GAA/D,cAMR,kBAAC,IAAD,CAAM5F,KAAMA,GACR,kBAAC,IAAK5V,KAAN,CACImF,KAAK,KACLiR,MAAM,SACNC,aAAa,WACb9Q,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,qBACnCyb,aAAW,EACXC,eAAgB7C,EAChB8C,KAAM5C,GAEN,kBAAC,IAAD,CAAO6C,YAAapB,EAAaqB,SAAU,SAAAC,GAAE,OAAIlD,EAAMoB,OAAO8B,EAAGjL,OAAOpK,SAASzM,MAAO,CAAEG,MAAO,KAAO4G,YAAY,KAAKgb,OAAQiB,KAErI,kBAAC,KAAD,CAAShjB,MAAO,CAAEkF,OAAQ,WAC1B,0BAAMlF,MAAO,CAAE0L,WAAY,MAA3B,aACc,gCAASyC,EAAWA,EAASF,OAAS,cAdxD,IAeY,6BACR,0BAAMjO,MAAO,CAAE0L,WAAY,MAA3B,YACa,gCAASyC,EAAWA,EAASjB,QAAU,cAjBxD,IAkBY,6BAER,kBAAC,IAAK7L,KAAN,CACImF,KAAK,QACLiR,MAAM,QACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,oBAGjB0R,aAAa,WACb1X,MAAO,CAAE0D,UAAW,KAEpB,kBAAC,KAAD,CACIqD,YAAY,QACZ6C,OAAO,eACPsY,OAAQA,KACRC,aAAc,SAAAC,GAEV,OAAOA,IAAYA,EAAU3G,OAAS4G,SAAS,EAAG,MAAQD,GAAWA,EAAU3G,OAASwH,MAAM,SAElGpB,SAAU,SAAAS,GACNM,EAAS,IAAI3Q,KAAKqQ,KAEtBtiB,MAAO,CAAEG,MAAO,QAIxB,kBAAC,IAAKkB,KAAN,CACImF,KAAK,YACLiR,MAAM,eACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,gCAIjB,kBAAC,IAAD,CAAOe,YAAY,uCAAoCmc,UAAU,KAAKljB,MAAO,CAAEG,MAAO,QAG1F,kBAAC,IAAKkB,KAAN,CACImF,KAAK,SACLiR,MAAM,SACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,4CAIjB,kBAAC,IAAD,CAAOe,YAAY,sBAAsBmc,UAAU,KAAKljB,MAAO,CAAEG,MAAO,QAG5E,kBAAC,IAAKkB,KAAN,CACImF,KAAK,cACLiR,MAAM,WACNC,aAAa,WACb9Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,0CAIjB,kBAAC,KAAD,CAAUhG,MAAO,CAAEG,MAAO,KAAO4G,YAAY,8BC/QzD4Q,GAAYC,KAAZD,QACAE,GAAWC,IAAXD,OAEJ1I,GAAW,CAAEC,KAAM,UAAWC,MAAO,UAAW2I,IAAK,WAEnDC,GAAS,SAAClL,GACZ,OAAIA,EAAcA,EAAMa,SACZ,IAAIqE,MAGdkR,G,kDACF,WAAY3iB,GAAQ,IAAD,8BACf,cAAMA,IAqBV4iB,sBAAwB,SAAC/F,GACrB,IAAMgG,EAAiB,GACf/K,EAAa,EAAK5W,MAAlB4W,SACR,EAAK9U,SAAS,CAAE6E,SAAS,IAEzBgV,EAAGxK,SAAQ,SAACL,GAAS,IAAD,EASZA,EAAIrK,OAPJ0a,EAFY,EAEZA,gBACAvF,EAHY,EAGZA,eACAvQ,EAJY,EAIZA,MACAoE,EALY,EAKZA,UACAmG,EANY,EAMZA,OACAyL,EAPY,EAOZA,YACAlO,EARY,EAQZA,YAIAyD,IACqD,IAArDuK,EAAgBnK,cAAcC,QAAQL,KACc,IAApDgF,EAAe5E,cAAcC,QAAQL,KACU,IAA/CnH,EAAUuH,cAAcC,QAAQL,KACY,IAA5ChB,EAAOoB,cAAcC,QAAQL,KACoB,IAAjDyK,EAAYrK,cAAcC,QAAQL,IAKtC+K,EAAe7gB,KAAK,CAChBjB,IAAKiR,EAAIjF,GACT+P,iBACAuF,kBACA1R,YACAmG,SACAyL,cACAhW,QACA8H,mBAIR,EAAKrR,SAAS,CACV6f,iBACAhb,SAAS,KA/DE,EAmFnBH,SAAW,EAAKyR,kBAnFG,EAmLnBuE,SAAW,SAACoF,GACR,IAAIzJ,EAAE,eACNlC,GAAQ,CACJ7W,MAAO,uDACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,yBACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAG0J,sBAAsBD,OA5LlB,EAiMnBC,sBAAwB,SAACD,GACrB,EAAK7G,iBACAjK,IAAI8Q,EAAc/hB,KAClB0c,SACArb,MAAK,kBAAMoD,IAAQuR,QAAQ,gCAC3BzU,OAAM,SAACkb,GAAD,OAAShY,IAAQjD,MAAM,2BAtMnB,EAyMnBya,UAAY,SAACnK,GACT,EAAK7P,SAAS,CACVsR,SAAS,EACTqE,SAAU9F,KA5MC,EAgNnB2B,aAAe,WACX,EAAKxR,SAAS,CACVsR,SAAS,EACTqE,SAAU,KACVqK,iBAAiB,EACjBC,gBAAgB,KArNL,EAyNnBC,mBAAqB,SAACzV,GAClB,EAAKzK,SAAS,CAAEuP,eAAgB9E,IAChC,EAAKzK,SAAS,CAAEggB,iBAAiB,KA3NlB,EA8NnB9J,kBAAoB,SAACzL,GACjB,EAAKzK,SAAS,CAAEsS,cAAe7H,IAC/B,EAAKzK,SAAS,CAAEigB,gBAAgB,KAhOjB,EAmOnB7K,aAAe,SAACyE,GACZ,IAAMxE,EAAQ,GAEdwE,EAAGxK,SAAQ,SAACL,GAAS,IACXsG,EAAWtG,EAAIrK,OAAf2Q,OAEND,EAAMrW,KAAK,CACPjB,IAAKiR,EAAIjF,GACTuL,OAAQA,OAIhB,EAAKtV,SAAS,CAAEqV,WA5OhB,EAAKsB,QAAUvY,EAAI6R,YACnB,EAAKgJ,iBAAmB,EAAKtC,QAAQzG,WAAW,kBAChD,EAAK2G,SAAW,EAAKF,QAAQzG,WAAW,SAExC,EAAKhS,MAAQ,CACTX,KAAMP,EAAMO,KAAKA,KACjBuX,SAAU,GACVjQ,SAAS,EACTgb,eAAgB,GAChBvO,SAAS,EACTqE,SAAU,KACVN,MAAO,GACP9F,eAAgB,GAChB+C,cAAe,GACf0N,iBAAiB,EACjBC,gBAAgB,GAlBL,E,gEAoEfljB,KAAKkc,iBACA/B,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAK6iB,uBACrB7iB,KAAK8Z,SAASK,QAAQ,UAAUC,WAAWpa,KAAKqY,gB,6BAG7CkC,GAAQ,IAAD,OACNA,IAAUva,KAAKmB,MAAM4W,WACrB/X,KAAKiD,SAAS,CAAE8U,SAAUwC,EAAMpC,gBAChCnY,KAAKkc,iBACAlK,MACA3P,MAAK,SAACya,GAAD,OAAQ,EAAK+F,sBAAsB/F,S,wCAMlC,IAAD,OACd,MAAO,CACH,CACIvc,MAAO,WACPS,IAAK,kBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OACJtV,EAAEkd,gBACG5d,OAAO,GACPkW,cAAcF,EAAE4H,gBAAgB5d,OAAO,KAChDqW,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBACL,EAAKojB,mBAAmBrQ,EAAOwP,mBAGnC,gCAASxP,EAAOwP,oBAI5B,CACI/hB,MAAO,UACPS,IAAK,iBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OACJtV,EAAE2X,eAAenC,cAAcF,EAAEqC,iBACrChC,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBACL,EAAKoZ,kBAAkBrG,EAAOwB,YAAYtH,MAG9C,gCAAS8F,EAAOiK,mBAI5B,CACIxc,MAAO,QACPS,IAAK,QACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OACJQ,KAAOxD,GAAOtS,EAAEoH,QAAQ2O,OACxBD,KAAOxD,GAAOgD,EAAElO,QAAQ2O,QAC5BJ,OAAQ,SAACjI,GAAD,OACJ,gCACK4E,GAAO5E,EAAOtG,OAAOwC,eAAe,QAASJ,OAI1D,CACIrO,MAAO,eACPS,IAAK,YACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEwL,UAAUgK,cAAcF,EAAE9J,YAC9CmK,OAAQ,SAACjI,GAAD,OAAY,8BAAOA,EAAOlC,aAEtC,CACIrQ,MAAO,SACPS,IAAK,SACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE2R,OAAO6D,cAAcF,EAAE3D,SAC3CgE,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CACI0G,QACI,yBAAK/Z,MAAO,CAAEG,MAAO,MAChBkT,EAAO0P,aAGhBjiB,MAAM,WAELuS,EAAOiE,UAIpB,CACIxW,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAOnN,MAAM,UACT,kBAAC,KAAD,CAASpF,MAAM,UACX,kBAACud,GAAA,EAAD,CACI/d,QAAS,kBAAM,EAAKkd,UAAUnK,IAC9BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,YACX,kBAACwd,GAAA,EAAD,CACIhe,QAAS,kBAAM,EAAK4d,SAAS7K,IAC7BrT,MAAO,CAAE8L,MAAO,oB,+BAwElC,IAAD,SAYDvL,KAAKmB,MAVLX,EAFC,EAEDA,KACA+T,EAHC,EAGDA,QACAqE,EAJC,EAIDA,SACAkK,EALC,EAKDA,eACAhb,EANC,EAMDA,QACAwQ,EAPC,EAODA,MACA2K,EARC,EAQDA,gBACAC,EATC,EASDA,eACA1Q,EAVC,EAUDA,eACA+C,EAXC,EAWDA,cAGJ,OACI,6BACI,kBAAC,GAAD,CACI/U,KAAMA,EACN+T,QAASA,EACThU,MACIqY,EACM,wBACA,wBAEVnE,aAAczU,KAAKyU,aACnB3B,OAAQ8F,EACRgB,QAAS5Z,KAAK4Z,QACdtB,MAAOA,IAEX,kBAAC,GAAD,CACItQ,OACI,oCACI,kBAAC,IAAD,CAAKtC,QAAQ,iBACT,kBAAC,IAAD,CAAK7F,KAAM,GACP,4DAEJ,kBAAC,IAAD,CAAKA,KAAM,EAAGM,OAAQ,GAClB,kBAAC,KAAD,KACI,kBAAC,GAAD,CACIqG,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OACN,EAAKsP,OAAOtP,IAEhBzM,MAAO,CAAEG,MAAO,OAEpB,kBAAC,IAAD,CACIkF,KAAK,UACLkZ,OAAK,EACLje,QAAS,kBAAM,EAAKkd,cAHxB,aAYpBtV,SAAU3H,KAAK2H,SACfC,KAAMkb,EACNhb,QAASA,IAEZmb,GACG,kBAAC,GAAD,CACI1O,QAAS0O,EACTzQ,eAAgBA,EAChBiC,aAAczU,KAAKyU,eAG1ByO,GACG,kBAAC,GAAD,CACI3O,QAAS2O,EACT3N,cAAeA,EACfd,aAAczU,KAAKyU,oB,GA3TdxT,aAyUdC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyB0hB,I,sBCzWxCla,KAAKC,SAAS,CAAEC,OAAQ,cAAeC,IAAI,GAAD,OAAKC,YAAL,eAE1C,IAAM8F,GAAW,CAAEC,KAAM,UAAWC,MAAO,QACrCsU,GAAY,CAAEvU,KAAM,UAAWC,MAAO,OAAQ2I,IAAK,WAOnDzO,GAAgB,SAAAC,GAAG,OAAI,IAAIC,KAAKC,aAAa,QAAS,CAAC1J,MAAO,WAAY2J,SAAU,QAAQC,OAAOJ,IAEnGK,GAASC,KAAWC,OAAO,CAC7BC,cAAe,CAGX7J,MAAO,IACP+E,OAAQ,GAEZ0e,cAAe,CACXlgB,UAAW,IACXxC,WAAY,KAEhB2iB,UAAW,CACP7X,WAAY,cACZpE,SAAU,IAEdkc,iBAAkB,CACd9X,WAAY,cACZpE,SAAU,KAEdmc,cAAe,CACXrgB,UAAW,GACXxC,WAAY,IAEhB8iB,qBAAsB,CAGlBtgB,UAAW,EACXwH,QAAS,OACTF,cAAe,OAEnBiZ,cAAe,CAGX/iB,WAAY,GACZf,MAAO,IAGX+jB,QAAS,CACLxgB,UAAW,IAEfygB,kBAAmB,CAGfhkB,MAAO,IACP2K,aAAc,EACdsZ,aAAc,UAElBC,gBAAiB,CAGblkB,MAAO,GACPS,UAAW,UAEf0jB,WAAY,CACRtY,WAAY,cACZpE,SAAU,GAEd2c,iBAAkB,CAGdrjB,WAAY,OACZ0J,YAAa,GACbzK,MAAO,IAEXqkB,eAAgB,CAGZvkB,SAAU,WACVyD,UAAW,IACXxC,WAAY,GACZgK,QAAS,OACTF,cAAe,OAEnByZ,mBAAoB,CAGhBvjB,WAAY,GACZf,MAAO,KAEXukB,gBAAiB,CACbxZ,QAAS,QAGbyZ,cAAe,CAGXzjB,WAAY,IACZf,MAAO,GACPsK,OAAQ,GACR7J,UAAW,YAIbS,GAAO,SAAAb,GAAU,IACXokB,EAASpkB,EAATokB,KAER,OACI,kBAAC,KAAD,CAAM5kB,MAAO6J,GAAOma,sBAChB,kBAAC,KAAD,CAAMhkB,MAAO6J,GAAOoa,eAChB,kBAAC,KAAD,CAAMjkB,MAAO6J,GAAOga,WAApB,MAEJ,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAOsa,mBAChB,kBAAC,KAAD,CAAMnkB,MAAO6J,GAAOia,kBAApB,2CA7GC,SAAC/W,GAAyB,IACnCoL,EADkC,wDACrBwL,GAAYxU,GAC7B,OAAOpC,EAAMa,SAAS2B,eAAe,QAAS4I,GA4GW7I,CAASsV,EAAKC,eAG/D,kBAAC,KAAD,CAAM7kB,MAAO6J,GAAOwa,iBAChB,kBAAC,KAAD,CAAMrkB,MAAO6J,GAAOya,YACf/a,GAAcqb,EAAK5W,YAG5B,kBAAC,KAAD,CAAMhO,MAAO6J,GAAO0a,kBAChB,kBAAC,KAAD,CAAMvkB,MAAO6J,GAAOga,WACfta,GAAcqb,EAAK5W,cAiIzB8W,GA1HC,SAAAtkB,GAAU,IAChBukB,EAAYvkB,EAAZukB,QAEFC,EAAcD,EAAQ3W,OAAO4N,QAAO,SAAA/O,GAAK,OAAIA,EAAMgY,gBAAkBhY,EAAMiY,YAAc,KACzFC,EAAYJ,EAAQ3W,OAAO4N,QAAO,SAAA/O,GAAK,OAAKA,EAAMgY,gBAAkBhY,EAAMiY,YAAc,KACxFE,EAAgBD,EAAUzW,OAC1B2W,EAAkBL,EAAYtW,OAC9B4W,EAAW,KACXC,EAAY,GACZC,EAAc,GAuBlB,OArBIJ,EAAgB,IAChBE,EAAW,CACPtX,SAAUoX,EACVK,eAAgB,EAChBC,MAAuB,EAAhBN,GAGXD,EAAUtS,SAAQ,SAAC+R,EAAMe,GACrBJ,GAAaX,EAAKC,YAAYjX,SAASuE,mBAAmB,QAAS,CAAE9C,MAAO,OAAQD,KAAM,YACtFuW,EAAM,EAAIP,IAAeG,GAAa,UAK9CF,EAAkB,GAClBL,EAAYnS,SAAQ,SAAC+R,EAAMe,GACvBH,GAAeZ,EAAKC,YAAYjX,SAASuE,mBAAmB,QAAS,CAAE9C,MAAO,OAAQD,KAAM,YACxFuW,EAAM,EAAIN,IAAiBG,GAAe,SAKlD,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAMld,KAAM,CAAC,IAAK,OAAQtI,MAAO,CAAEgL,cAAe,QAC9C,kBAAC,KAAD,CAAMhL,MAAO6J,GAAOG,eAChB,kBAAC,KAAD,CAAMhK,MAAO6J,GAAO+Z,eAChB,kBAAC,KAAD,CAAM5jB,MAAO6J,GAAOga,WAAYkB,EAAQhY,MAAMa,SAASuE,mBAAmB,QAAS,CAAE/C,KAAM,UAAWC,MAAO,UAAW2I,IAAK,cAEjI,kBAAC,KAAD,CAAMhY,MAAO6J,GAAOka,eAChB,kBAAC,KAAD,CAAM/jB,MAAO6J,GAAOga,WAAYkB,EAAQzH,iBAE5C,kBAAC,KAAD,CAAMtd,MAAO6J,GAAOqa,UAEhBa,EAAQ3W,OAAOxF,KAAI,SAAAqE,GAAK,OACpB,kBAAC,GAAD,CACI1L,IAAK0L,EAAM2Y,UACXhB,KAAM3X,OAKdmY,EAAgB,GAChB,kBAAC,KAAD,CAAMplB,MAAO6J,GAAOma,sBAChB,kBAAC,KAAD,CAAMhkB,MAAO6J,GAAOoa,eAChB,kBAAC,KAAD,CAAMjkB,MAAO6J,GAAOga,WAAYuB,IAEpC,kBAAC,KAAD,CAAMplB,MAAO6J,GAAOsa,mBAChB,kBAAC,KAAD,CAAMnkB,MAAO6J,GAAOia,kBAApB,0BACyByB,KAG7B,kBAAC,KAAD,CAAMvlB,MAAO6J,GAAOwa,iBAChB,kBAAC,KAAD,CAAMrkB,MAAO6J,GAAOya,YACf/a,GAAc+b,EAASG,kBAGhC,kBAAC,KAAD,CAAMzlB,MAAO6J,GAAO0a,kBAChB,kBAAC,KAAD,CAAMvkB,MAAO6J,GAAOga,WACfta,GAAc+b,EAASI,UAMpCL,EAAkB,GAClB,kBAAC,KAAD,CAAMrlB,MAAO6J,GAAOma,sBAChB,kBAAC,KAAD,CAAMhkB,MAAO6J,GAAOoa,eAChB,kBAAC,KAAD,CAAMjkB,MAAO6J,GAAOga,aAExB,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAOsa,mBAChB,kBAAC,KAAD,CAAMnkB,MAAO6J,GAAOia,kBAApB,4BAC2B0B,MAMvC,kBAAC,KAAD,CAAMxlB,MAAO6J,GAAO2a,gBAChB,kBAAC,KAAD,CAAMxkB,MAAO6J,GAAO4a,oBAChB,kBAAC,KAAD,CAAMzkB,MAAO6J,GAAOga,WAAYkB,EAAQc,eAE5C,kBAAC,KAAD,CAAM7lB,MAAO6J,GAAO6a,iBAChB,kBAAC,KAAD,CAAM1kB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAAYta,GAAcwb,EAAQW,SAE1D,kBAAC,KAAD,CAAM1lB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAApB,MAEJ,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAApB,MAEJ,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAApB,MAEJ,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAAYta,GAAcwb,EAAQW,SAE1D,kBAAC,KAAD,CAAM1lB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAApB,MAEJ,kBAAC,KAAD,CAAM7jB,MAAO6J,GAAO8a,eAChB,kBAAC,KAAD,CAAM3kB,MAAO6J,GAAOga,WAAYta,GAAcwb,EAAQW,e,iCC1NhFzW,GAAiBC,EAAQ,KAEvBsP,GAAWC,KAAXD,OAEFrP,GAAW,CAAEC,KAAM,UAAWC,MAAO,QACrCsU,GAAY,CAAEvU,KAAM,UAAWC,MAAO,OAAQ2I,IAAK,WAEnDzO,GAAgB,SAACC,GAAD,OAClB,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IAER8F,GAAW,SAACvC,GAAyB,IAAlB+Y,EAAiB,wDAClC3N,EAAM2N,EAAOnC,GAAYxU,GAC7B,OAAOpC,EAAMa,SAAS2B,eAAe,QAAS4I,IAG5C4N,GAAa,SAAChZ,EAAOiZ,GACvB,IAAIC,EAAMlZ,aAAiBkF,KAAQlF,EAAQA,EAAMa,SAC7CsY,EAAKF,EAAiBpY,SAE1B,OAAIqY,EAAGE,UAAYD,EAAGC,aAEbF,EAAGE,UAAYD,EAAGC,aAGvBF,EAAGnY,WAAaoY,EAAGpY,cAEdmY,EAAGnY,WAAaoY,EAAGpY,aAGxBmY,EAAGpY,UAAYqY,EAAGrY,YAixBX0O,GA5wBI,SAAC/b,GAAW,IAAD,EACXuW,IAAKC,UAAbC,EADmB,qBAElB5D,EAA2B7S,EAA3B6S,OAAQ2F,EAAmBxY,EAAnBwY,SAAUjY,EAASP,EAATO,KAFA,EAIIiS,oBAAS,GAJb,oBAInB3K,EAJmB,KAIV6O,EAJU,OAKMlE,mBAAS,MALf,oBAKnB7E,EALmB,KAKTwU,EALS,OAMQ3P,mBAAS,IANjB,oBAMnBoD,EANmB,KAMRC,EANQ,OAOArD,mBAAS,GAPT,oBAOnB0S,EAPmB,KAOZU,EAPY,OAQFpT,mBAAS,GARP,oBAQnBqT,EARmB,KAQbC,EARa,OASAtT,mBAAS,GATT,oBASnBuT,EATmB,KASZC,EATY,OAUAxT,mBAAS,IAVT,oBAUnByT,EAVmB,KAUZC,EAVY,OAWE1T,mBAAS,IAXX,oBAWnB5E,EAXmB,KAWXmF,EAXW,OAYIP,mBAAS,IAZb,oBAYnBzH,EAZmB,KAYVob,EAZU,QAac3T,oBAAS,GAbvB,sBAanB4T,GAbmB,MAaLC,GAbK,SAc8B7T,mBAAS,MAdvC,sBAcnB8T,GAdmB,MAcGC,GAdH,SAegC/T,mBAAS,MAfzC,sBAenBgU,GAfmB,MAeIC,GAfJ,MAiBtBC,GAActlB,EAAI6R,YAAYC,WAAW,YACzC6C,GAAe3U,EAAI6R,YAAYC,WAAW,aAC1C4G,GAAW1Y,EAAI6R,YAAYC,WAAW,SAE1CF,qBAAU,cAEP,IAEH,IAAMmM,GAAU,SAACnW,EAAKwD,GAAN,OAAiBQ,OAAOhE,GAAKiE,SAAST,EAAQ,MAExD6P,GAAQ,uCAAG,sBAAAlX,EAAA,6DACbuR,GAAW,GADE,SAGPD,EAAKG,iBACNxU,KADC,uCACI,WAAOyU,GAAP,eAAA1R,EAAA,yDACmB,IAAjB8gB,EAAM/X,OADR,uBAEE1I,IAAQjD,MAAM,yCAFhB,iCAMEgiB,EAAU,CACVhY,MAAO,IAAIkF,KAAKoF,EAAItK,OACpBoa,eAAgBV,EAAM/X,OACtBN,OAAQA,EACRiY,KAAMA,EACNE,MAAO/X,KAAK4Y,MAAc,IAARb,GAAe,IACjCb,MAAOlX,KAAK4Y,MAAc,IAAR1B,GAAe,IACjCG,aAAc5W,GAAeqC,QAAQoU,GACrCxI,WAAW,EACX2F,gBAAiB1U,EAASF,OAC1BqP,eAAgBnP,EAASjB,QACzB2H,YAAa1G,EAAS0G,YACtBsI,eAAgBtb,IAAS4R,UAAU4T,WAAWC,kBAC9C1hB,QAAS7E,EAAKE,OAnBhB,SAuBIimB,GAAYlK,IAAI+H,GACrBniB,MAAK,SAAAwa,GACFqJ,EAAM5T,SAAQ,SAAA+R,GACVA,EAAKvS,IAAIrJ,OAAO,CAAEue,WAAW,OAEjCvhB,IAAQuR,QAAQ,uCAChBN,EAAK2F,cACLpc,EAAMwU,kBAETlS,OAAM,SAAAC,GACHiD,IAAQjD,MAAM,wBACdC,QAAQC,IAAIF,MAlCd,2CADJ,uDAsCDD,OAAM,SAACC,GACJiD,IAAQia,QAAQ,iDAEnBrM,SAAQ,WACLsD,GAAW,MA7CN,2CAAH,qDAiDRsQ,GAAW,uCAAG,WAAOvZ,GAAP,yBAAAtI,EAAA,yDACZmH,EAAOmB,EAAOuT,QAAQ,KAAM,KAE5B,SAASiG,KAAK3a,GAHF,wBAIR4a,GAAQ,EACRC,GAAoB,EACpBtH,EAAOL,OAAOM,SAASxT,EAAK7H,OAAO,EAAG,IACtC2iB,EAAM9a,EAAK7H,OAAO,EAAG,GACrB4iB,EARQ,WAQUxH,EARV,YAQkBuH,EARlB,YAQyB9a,EAAK7H,OAAO,EAAG,GARxC,YAQ8C6H,EAAK7H,OAAO,GAAI,IAR9D,SAUNqV,GACD9H,IAAI1F,GACJyF,MACA3P,MAAK,SAACgiB,GACCA,EAAKnS,SACLzM,IAAQjD,MAAM,oCACd2kB,GAAQ,MAGf5kB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MApBR,WAuBR2kB,EAvBQ,mDAyBZnR,GACK/D,IAAIqV,GACJtV,MACA3P,KAHL,uCAGU,WAAOkgB,GAAP,iBAAAnd,EAAA,0DACEmd,EAAWrQ,OADb,oBAEMqV,EAAOhF,EAAW3a,OAClB4f,EAAW/H,OAAOM,SAASxT,EAAK7H,OAAO,GAAI,IAE3B,WAAhB6iB,EAAK/V,OALX,uBAMM/L,IAAQjD,MAAM,8CANpB,+BAUMglB,EAAW,GAVjB,iCAWYjF,EAAWzQ,IACZqB,WAAW,UACXlB,IAFC,UAEMmN,GAAQoI,EAAW,EAAG,KAC7BxV,MACA3P,MAAK,SAAC4P,GACSA,EAAIrK,OACNsN,YAAWkS,GAAoB,MAjBvD,UAqBWA,EArBX,wBAsBU3hB,IAAQjD,MAAM,iDAtBxB,8BA0BUglB,IAAaD,EAAKrW,YA1B5B,kCA2BgBqR,EAAWzQ,IACZrJ,OAAO,CAAE+I,OAAQ,eA5BhC,QAgCE+Q,EAAWzQ,IACNqB,WAAW,UACXlB,IAFL,UAEYmN,GAAQoI,EAAU,KACzBxV,MACA3P,MAAK,SAAColB,GACH,GAAIA,EAAQvV,OAAQ,CAChB,IAAIxF,EAAQ+a,EAAQ7f,OAChBgY,EAAY,IAAIlO,KAEpBqI,GACK9H,IAAIvF,EAAMgB,QACViS,IAAI,CACDlS,SAAUf,EAAMe,SAChB6U,gBAAiBiF,EAAK7Z,OACtB4G,YAAaiT,EAAKjT,YAClByI,eAAgBwK,EAAK5a,QACrB+a,aAAcD,EAAQza,GACtBsX,YAAa5X,EAAMU,WACnBA,WAAYwS,EACZkG,KAAMN,GAAW5F,EAAWlT,EAAMU,YAAc,EAAI,EACpDsX,gBAAgB,EAChBsC,WAAW,EACXpK,eAAgBtb,IAAS4R,UAAU4T,WAAWC,kBAC9C1hB,QAAS7E,EAAKE,QAEjB2B,MAAK,SAAC4P,GACHwV,EAAQ3V,IACHrJ,OAAO,CAAEyM,WAAW,IACpB7S,KAFL,sBAEU,sBAAA+C,EAAA,6DACFghB,EAAW,IACX1P,EAAK0F,eAAe,CAAE+C,WAAYoI,EAAKjT,YAAYtH,KAFjD,SAGI2a,GAAgBJ,EAAKjT,YAAYtH,IAHrC,cAIF0J,EAAK0F,eAAe,CAAEwL,YAAaL,EAAK7Z,SAJtC,SAMI6U,EAAWzQ,IAChBrJ,OAAO,CACJuP,oBAAqByP,EAAQza,GAC7BiL,kBAAmBvL,EAAMU,WACzB8K,wBAAyB0H,IAV3B,OAYFiI,GAAYN,EAAK7Z,QACjBjI,IAAQuR,QAAQ,mBAbd,+CAgBbzU,OAAM,SAAAC,GACHC,QAAQC,IAAIF,UA7ElC,wBAkFEiD,IAAQjD,MAAM,sBAlFhB,4CAHV,uDAwFKD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAlHR,wBAqHZiD,IAAQqiB,KAAK,4CArHD,4CAAH,sDAyHXC,GAAuB,uCAAG,WAAOjV,GAAP,SAAA1N,EAAA,sEACtB2U,GACD9H,IAAIa,EAAO9R,KACXyH,OAAO,CACJic,gBAAiB5R,EAAO4R,iBAE3BriB,MAAK,WACEyQ,EAAO4R,eACPjf,IAAQuR,QAAQ,iDAEhBvR,IAAQuR,QAAQ,4CACpB6Q,GAAY/U,EAAOwP,oBAEtB/f,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZiD,IAAQjD,MAAM,0BAfM,2CAAH,sDAmBvBwlB,GAAY,uCAAG,WAAOlV,GAAP,uBAAA1N,EAAA,6DACb6iB,GAAqB,EACrBzc,EAAciU,OAAOM,SAASjN,EAAO4U,cACrCQ,EAAoB,KACpBC,EAAkB,KAClBC,EAAuB,KALV,SAOXpS,GACD/D,IAAIa,EAAOwP,iBACXtQ,MACA3P,KAHC,uCAGI,WAAOkgB,GAAP,SAAAnd,EAAA,0DACEmd,EAAWrQ,OADb,mBAGmC,WAA7BqQ,EAAW3a,OAAO4J,OAHxB,uBAIM/L,IAAQjD,MAAM,uEAJpB,0CAQQ+f,EAAWzQ,IACZqB,WAAW,UACXlB,IAAImN,GAAQ5T,EAAc,EAAG,IAC7BwG,MACA3P,MAAK,SAAColB,GACCA,EAAQvV,QAAUuV,EAAQ7f,OAAOsN,YAAW+S,GAAqB,MAb/E,2CAHJ,uDAPW,WA6BbA,EA7Ba,wBA8BbxiB,IAAQjD,MAAM,oDA9BD,4CAkCXuX,GACD9H,IADC,UACMa,EAAO9R,MACd0c,SACArb,MAAK,WACF2T,GACK/D,IAAIa,EAAOwP,iBACXtQ,MACA3P,KAHL,uCAGU,WAAOuL,GAAP,SAAAxI,EAAA,0DACEwI,EAASsE,OADX,mBAEEtE,EAASkE,IACJqB,WAAW,UACXlB,IAAIa,EAAO4U,cACX1V,MACA3P,MAAK,SAACqK,GACCA,EAAMwF,QACNxF,EAAMoF,IACDrJ,OAAO,CAAEyM,WAAW,IACpB7S,MAAK,WACFwlB,GAAYja,EAAShG,OAAO8F,QAC5BjI,IAAQuR,QAAQ,0BAKhCxL,EAAc,GAjBpB,gCAkBYuO,GACD9H,IADC,UACMa,EAAO9R,IAAI0D,OAAO,EAAG,KAD3B,OACiC0a,GAAQ5T,EAAc,EAAG,KAC3DwG,MACA3P,MAAK,SAAAgmB,GACF,IAAIhE,EAAOgE,EAAOzgB,OAClBsgB,EAAoB7D,EAAKqD,aACzBS,EAAkB9D,EAAKC,YACvB8D,EAAuB/D,EAAKjX,cAE/B7K,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MA5B1B,OAgCEoL,EAASkE,IACRrJ,OAAO,CACJuP,oBAAqBkQ,EACrBjQ,kBAAmBkQ,EACnBjQ,wBAAyBkQ,IApC/B,sBAuCE3iB,IAAQjD,MAAM,sBAvChB,2CAHV,0DAtCS,4CAAH,sDAsFZmlB,GAAe,uCAAG,WAAOW,GAAP,iBAAAljB,EAAA,yDACpBohB,GAAwB,cACxBE,GAAyB,MACzBhQ,EAAK0F,eAAe,CAChBwL,YAAa,OAEjBzB,EAAS,IACTrQ,EAAa,IAERwS,EATe,oDAWhBhT,EAAe,GACf3I,EAAU8L,EAAS8P,MAAK,SAACpM,GAAD,OAASA,EAAInb,MAAQsnB,KAZ7B,oEAgBdtS,GACDC,MAAM,cAAe,KAAMtJ,EAAQmF,KACnCmE,MAAM,SAAU,KAAM,UACtBjE,MACA3P,MAAK,SAACya,GACHA,EAAGxK,SAAQ,SAACL,GACRqD,EAAarT,KAAb,cAAoBjB,IAAKiR,EAAIjF,IAAOiF,EAAIrK,YAE5CkO,EAAaR,MAxBD,eA2BQ,IAAxBA,EAAanH,QACbqY,GAAwB,WACxBE,GAAyB,gCACM,IAAxBpR,EAAanH,QACpBuI,EAAK0F,eAAe,CAChBwL,YAAatS,EAAa,GAAG5H,SAEjCma,GAAYvS,EAAa,GAAG5H,QAC5B8Y,GAAwB,OAExBA,GAAwB,MArCR,mBAwCb,GAxCa,4CAAH,sDA2CfqB,GAAW,uCAAG,WAAOrV,GAAP,qBAAApN,EAAA,yDACZojB,EAAW,GACXpW,EAAY,GACZqW,EAAW,EACXC,EAAU,EAEdzC,EAAS,GACTF,EAAQ,GACRF,EAAS,GACT7S,EAAU,IACVmT,EAAS,IACT/D,EAAY,MAEP5P,EAbW,0DAehB8T,IAAgB,GAfA,UAiBVtQ,GACD/D,IAAIO,GACJR,MACA3P,MAAK,SAAC4P,GACHmQ,EAAYnQ,EAAIrK,WArBR,yBAwBVmS,GACD9D,MAAM,kBAAmB,KAAMzD,GAC/ByD,MAAM,YAAa,MAAM,GACzBjE,MACA3P,MAAK,SAACya,GACHA,EAAGxK,SAAQ,SAACL,GACR,IAAIoS,EAAOpS,EAAIrK,OACfyc,EAAKvS,IAAMG,EAAIH,IACfuS,EAAKrjB,IAAMiR,EAAIjF,GAEfoF,EAAUnQ,KAAK,CACXqiB,YAAaD,EAAKC,YAClBlX,WAAYiX,EAAKjX,WACjBiY,UAAWhB,EAAKqD,aAChB/C,YAAaN,EAAKyB,KAClBpB,eAAgBL,EAAKK,eACrBjX,SAAU4W,EAAK5W,WAGnB+a,EAASvmB,KAAKoiB,GACdoE,GAAYpE,EAAK5W,UAGZ4W,EAAKK,gBACNL,EAAKjX,YACLoY,GAAWnB,EAAKjX,WAAYiX,EAAKC,eAEjCoE,GAAW,MAInB1V,EAAUZ,GACV+T,EAASqC,GACTzC,EAAQ2C,GACRzC,EAASwC,GACT5C,EAAS4C,EAAWC,MA3DZ,QA8DhBpC,IAAgB,GA9DA,4CAAH,sDAiEXqC,GAAc,SAAC1oB,GAAY,IACvB6S,EAAW7S,EAAX6S,OACFtG,EAAQ,KACRsZ,EAAO,EAiBX,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CACInE,OAAQA,KACRtY,OAAO,eACPtB,KAAK,QACLuZ,SAAW,SAAAS,GAAUvV,EAAQuV,EAAO,IAAIrQ,KAAKqQ,EAAK/P,OAAS,QAE/D,kBAAC4W,GAAA,EAAD,CAAqB7oB,QAAS,kBAvBjB2N,EAuBsCoF,EAAO9R,IArB1DwL,GAASgZ,GAAWhZ,EAAOsG,EAAOwR,eAAcwB,EAAO,QAE3D/L,GAAS9H,IAAIvE,GACZjF,OAAO,CACJ2E,WAAYZ,EACZsZ,SAEHzjB,MAAK,WACFoD,IAAQuR,QAAQ,wCAChB6Q,GAAY/U,EAAOwP,oBAXN,IAAA5U,GAuBmDjO,MAAO,CAAE8L,MAAO,eAKtF5D,GAAW,CACb,CACIpH,MAAO,YACPoF,MAAO,SACPkjB,UAAW,gBAEf,CACItoB,MAAO,MACPsoB,UAAW,cACX9N,OAAQ,SAACuJ,GAAD,OAAiB,8BAAOvV,GAASuV,MAE7C,CACI/jB,MAAO,gBACPS,IAAK,aACL+Z,OAAQ,SAACjI,GAAD,OACJ,8BACI,kBAAC,IAAD,CAAKpN,QAAQ,UACT,kBAAC,IAAD,KAEQoN,EAAO1F,WAAP,WAEI2B,GAAS+D,EAAO1F,YAAY,GAFhC,KAIA,GAEJ,kBAAC,KAAD,CACIoM,QACI,kBAACmP,GAAD,CAAa7V,OAAQA,IAEzBvS,MAAM,aACNuoB,QAAQ,SAER,kBAACC,GAAA,EAAD,CAAkBtpB,MAAO,CAAE8L,MAAO,mBAO1D,CACIhL,MAAO,kBACPsoB,UAAW,WACX9N,OAAQ,SAACtN,GAAD,OAAc,gCAASzE,GAAcyE,MAEjD,CACIlN,MAAO,OACPS,IAAK,OACL+Z,OAAQ,SAACjI,GACL,IAAIrT,EAAQ,CACRyL,eAAgB,QAMpB,OAHI4H,EAAO4R,iBACPjlB,EAAMyL,eAAiB,gBAGvB,kBAAC,KAAD,CAAOnD,KAAK,SACR,4BAAQtI,MAAOA,GAAQuJ,GAAc8J,EAAOgT,OAExChT,EAAOgT,KAAO,GACd,kBAAC,KAAD,CAASvlB,MAAM,2BACX,kBAACyoB,GAAA,EAAD,CACI7I,SAA0B,IAAhBrN,EAAOgT,KACjB9kB,IAAI,YACJjB,QAAS,kBAAMgoB,GAAwBjV,IACvCrT,MAAO,CAAE8L,MAAO,iBA4B5C,CACIhL,MAAO,gBACPS,IAAK,mBACL+Z,OAAQ,SAACjI,GACL,IAAImW,EAAOnW,EAAOrF,SAQlB,OALIqF,EAAO1F,YACPoY,GAAW1S,EAAO1F,WAAY0F,EAAOwR,eAErC2E,GAAQ,GAEL,gCAASjgB,GAAcigB,MAGtC,CACIjoB,IAAK,WACL2E,MAAO,SACPoV,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAO/K,KAAK,UACR,kBAAC,KAAD,CAASxH,MAAM,YACX,kBAAC6a,GAAA,EAAD,CAAcpa,IAAI,SAASjB,QAAS,kBAAMioB,GAAalV,IAASrT,MAAO,CAAE8L,MAAO,kBAOpG,OACI,kBAAC,KAAD,CACIvK,IAAI,aACJuT,QAAStU,EAAMsU,QACfhU,MACI,oCACKN,EAAMM,MADX,OAGKuS,GACG,kCACK,gCAASA,EAAOpF,QADrB,MAMZiM,KAAM2C,GACN9H,SAAUvU,EAAMwU,aAChBC,OAAQ,CACJ,yBAAK1T,IAAI,kBACL,kBAAC,IAAD,CAAQA,IAAI,OAAOjB,QAASE,EAAMwU,cAAlC,YAGA,kBAAC,IAAD,CACIzT,IAAI,SACJ8D,KAAK,UACLgD,QAASA,EACT/H,QAASuc,IAJb,aAUR1c,MAAO,KAEP,kBAAC,IAAD,CAAM8W,KAAMA,GACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK7W,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,aACLiR,MAAM,UACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,0BAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACI3Q,YAAY,wBACZ/G,MAAO,CAAEG,MAAO,KAChB0gB,YAAU,EACVC,YAAU,EACVC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAO/b,SACFuT,cACAC,QAAQsI,EAAMvI,gBAAkB,GAEzCmJ,SAAU,SAAC5T,GAAD,OAAYia,GAAgBja,KAErC+K,EAASpQ,KAAI,SAACsE,GAAD,OACV,kBAAC,GAAD,CACI3L,IAAK2L,EAAQ3L,IACbkL,MAAOS,EAAQ3L,KAFnB,UAGK2L,EAAQwJ,OAHb,YAGuBxJ,EAAQyJ,iBAK/C,kBAAC,IAAD,CAAKvW,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,cACLiR,MAAM,WACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2BAGjB0R,aAAa,WACb+J,aAAW,EACXC,eAAgBoF,GAChBnF,KAAMqF,IAEN,kBAAC,KAAD,CACIjgB,YAAY,yBACZ/G,MAAO,CAAEG,MAAO,KAChB0gB,YAAU,EACVC,YAAU,EACVC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAAR,OACVA,EAAO/b,SACFuT,cACAC,QAAQsI,EAAMvI,gBAAkB,GAEzCmJ,SAAU,SAAC5T,GAAD,OAAYma,GAAYna,KAEjCmI,EAAUxN,KAAI,SAACkf,GAAD,OACX,kBAAC,GAAD,CACIvmB,IAAKumB,EAAK7Z,OACVxB,MAAOqb,EAAK7Z,QAFhB,UAGK6Z,EAAK7Z,gBAM9B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK7N,KAAM,IACP,kBAAC,IAAKiB,KAAN,CACImF,KAAK,QACLiR,MAAM,QACN7Q,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,oBAGjB0R,aAAa,YAEb,kBAAC,KAAD,CACI3Q,YAAY,QACZkb,OAAO,OACPrY,OAAO,eACPsY,OAAQA,KAIRL,SAAU,SAACS,KASXtiB,MAAO,CAAEG,MAAO,UAKhC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,EAAGJ,MAAO,CAAEY,UAAW,UAC9B,0CAEJ,kBAAC,IAAD,CAAKR,KAAM,GAAIM,OAAQ,GACnB,kBAAC,IAAD,CACIkhB,YAAa,kBAAC6H,GAAA,EAAD,MACb1iB,YAAY,kBACZ/G,MAAO,CAAEG,MAAO,KAChBupB,WAAS,EACTxG,UAAW,GACXrC,YAAU,EACVpU,MAAOlB,EACPsW,SAAU,SAACC,GAAD,OAAQ6E,EAAW7E,EAAGjL,OAAOpK,QACvCkd,QAAS,SAAC7H,GACa,KAAfA,EAAG8H,SACHpC,GAAY1F,EAAGjL,OAAOpK,YAM1C,kBAAC,KAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKrM,KAAM,IACP,kBAAC,KAAD,CACIiI,QAASue,GACT3e,QAASC,GACTa,WAAY0d,EACZxR,OAAQ,kBACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjV,MAAO,CAAEY,UAAW,SACpBR,KAAM,IAEN,gCAASqmB,EAAM/X,OAAf,YAEJ,kBAAC,IAAD,CACI1O,MAAO,CAAEY,UAAW,SACpBR,KAAM,IAEN,kBAAC,KAAD,KACI,4BACIJ,MAAO,CAAE4H,SAAU,UADvB,SAGW2B,GAAc8c,IAEzB,4BACIrmB,MAAO,CAAE4H,SAAU,UADvB,UAGY2B,GAAcgd,QAM1Cje,KAAK,YAIjB,kBAAC,KAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKlI,KAAM,IACP,4BAAQJ,MAAO,CAAE4H,SAAU,UAA3B,kBACoB2B,GAAcmc,SC9zBpDvW,GAAW,CAAEC,KAAM,UAAWC,MAAO,QACrCsU,GAAY,CAAEvU,KAAM,UAAWC,MAAO,OAAQ2I,IAAK,WAEnDrG,GAAa,SAACC,GAChB,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IAKzCrF,GAAgB,SAACC,GAAD,OAClB,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IAER8F,GAAW,SAACvC,GAAyB,IAAlB+Y,EAAiB,wDAClC3N,EAAM2N,EAAOnC,GAAYxU,GAE7B,OAAOwC,GACH,IAAIM,KAAqB,IAAhBlF,EAAMmF,SAAgBC,mBAAmB,QAASgG,KAI7D0R,GAAc,uCAAG,WAAOxX,GAAP,eAAA1M,EAAA,6DACf2M,EAAY,KADG,SAEbD,EAAIE,MAAM3P,MAAK,SAAC4P,GACdA,EAAIC,SACJH,EAAYE,EAAIrK,WAJL,gCAOZmK,GAPY,2CAAH,sDAiKLQ,GArIM,SAACtS,GAAW,IA5CbqT,EA6CRiW,EAAkBtpB,EAAlBspB,cADoB,EAEA9W,mBAAS,IAFT,oBAErBK,EAFqB,KAEbC,EAFa,OAGcN,oBAAS,GAHvB,oBAGrBC,EAHqB,KAGNC,EAHM,KAe5B,OAVAM,qBAAU,WACNN,GAAiB,GAEjB,IAAIb,EAAMzQ,EAAI6R,YAAYC,WAAW,YAAYlB,IAAIsX,GAErDD,GAAexX,GACVzP,MAAK,SAAC+Q,GAAD,OAASL,EAAUK,MACxBC,SAAQ,kBAAMV,GAAiB,QACrC,CAAC4W,IAGA,kBAAC,KAAD,CACIvoB,IAAI,eACJuT,QAAStU,EAAMsU,QACfC,SAAUvU,EAAMwU,aAChB7U,MAAO,IACPW,MAAO,mDACPmU,OAAQ,sCAER,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GACP,kBAAC,IAAD,CACIpU,MACI,kBAAC,KAAD,KACI,oCAAUuS,EAAOwP,gBAAjB,KACA,kBAAC,KAAD,CAAS/hB,MAAM,uBACX,gCACI,kBAACqU,GAAA,EAAD,CACI5T,IAAI,WACJjB,QAAS,kBApDpC,SAAC+S,GACdU,aAAI+Q,GAAQ,CAAEC,QAAS1R,KAClBW,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,mBAEgBrB,EAAOiK,eAFvB,UAIAhJ,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAsCmC+Q,CAAST,IACxBrT,MAAO,CAAE8L,MAAO,gBAMpCpE,UAAW,CAAE+C,OAAQ,OAEnBwI,GACE,4CAEI,gCAASI,EAAOiK,gBAChB,6BAHJ,gBAKI,gCAASjK,EAAOwP,iBAChB,6BANJ,aAQI,gCAASvT,GAAS+D,EAAOtG,OAAO,IAChC,6BATJ,uBAWI,gCACKxD,GAAc8J,EAAOjF,OAAO,GAAGJ,WAEpC,6BAdJ,aAgBI,gCAASzE,GAAc8J,EAAOkT,QAC9B,6BAjBJ,YAmBI,gCAAShd,GAAc8J,EAAOgT,OAC9B,6BApBJ,aAsBI,gCAAS9c,GAAc8J,EAAOqS,QAC9B,6BAvBJ,sBAyBI,iCAjHZ7R,EAiHgCR,EAAOzN,QAjH/B+L,GAAWkC,EAAIyB,MAAM,KAAK,SAsHtC,kBAAC,IAAD,CAAKJ,KAAM,GAAIxU,OAAQ,GACnB,kBAAC,IAAD,CACII,MAAO,2CAAiBuS,EAAO8T,eAAxB,KACPzf,UAAW,CAAE+C,OAAQ,IAAK8K,UAAW,WAErC,kBAAC,KAAD,CACIxM,WAAYsK,EAAOjF,OACnBoH,WAAY,SAAC3M,GAAD,OACR,kBAAC,KAAKxH,KAAN,CAAWE,IAAKsH,EAAK+c,WACjB,kBAAC,KAAKvkB,KAAKgG,KAAX,CACIvG,MACI,gCACK+H,EAAK+c,UADV,KAEKtW,GAASzG,EAAKgc,cAGvBhd,YACIgB,EAAKoc,eAED,0BACIjlB,MAAO,CAAE8L,MAAO,YADpB,kBAMiB,IAArBjD,EAAKqc,YAED,yCAEK3b,GACGV,EAAKqc,cAIjB,0BACIllB,MAAO,CAAE8L,MAAO,YADpB,WAIKvC,GACGV,EAAKqc,gBAKrB,6BACI,gCACK3b,GAAcV,EAAKmF,qBCjJxD6J,GAAWC,IAAXD,OACAF,GAAYC,KAAZD,QAEJtF,GAAMzQ,EAAI6R,YAERkM,GAAU,SAACnW,EAAKwD,GAAN,OAAiBQ,OAAOhE,GAAKiE,SAAST,EAAQ,MAExDiL,GAAS,SAAClL,GACZ,OAAIA,EAAcA,EAAMa,SACZ,IAAIqE,MAGd8X,GAAe,SAACvpB,GAAW,IACvB6S,EAAW7S,EAAX6S,OACFyF,EAAS,EAETkR,EAAgB,WACZlR,GAAU,EACV9S,IAAQjD,MAAM,6CAIlBsP,GAAIqB,WAAW,YACVlB,IAAIa,EAAO9R,KACXyH,OAAO,CACJ8P,OAAQ6G,GAAQ7G,EAAQ,KAE3BlW,MAAK,WACFoD,IAAQuR,QAAQ,gDAI5B,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CACIjP,KAAK,QACL6Y,IAAK,EACLC,IAAK,IACLS,SAAU,SAACxK,GACPyB,EAASzB,GAEb4S,aAAc,SAACnI,GAAD,OAAQkI,OAE1B,kBAACb,GAAA,EAAD,CACI7oB,QAAS,kBAAM0pB,KACfhqB,MAAO,CAAE8L,MAAO,eAM1Boe,G,kDACF,WAAY1pB,GAAQ,IAAD,8BACf,cAAMA,IA0BV+I,cAAgB,SAACC,GAAD,OACZ,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IA/BK,EAkCnB2gB,gBAAkB,SAAC9M,GACf,IAAM+M,EAAW,GACT9R,EAAa,EAAK5W,MAAlB4W,SAER+E,EAAGxK,QAAH,uCAAW,WAAOL,GAAP,yCAAA7M,EAAA,2DAeH6M,EAAIrK,OAbJgf,EAFG,EAEHA,eACAtE,EAHG,EAGHA,gBACA/J,EAJG,EAIHA,OACA/L,EALG,EAKHA,MACAuQ,EANG,EAMHA,eACAiJ,EAPG,EAOHA,MACAF,EARG,EAQHA,KACApB,EATG,EASHA,eACAS,EAVG,EAUHA,MACAG,EAXG,EAWHA,aACAhR,EAZG,EAYHA,YACAzG,EAbG,EAaHA,OACAxI,EAdG,EAcHA,SAIA0S,IACoD,IAApDgF,EAAe5E,cAAcC,QAAQL,KACgB,IAArDuK,EAAgBnK,cAAcC,QAAQL,KACY,IAAlDuN,EAAanN,cAAcC,QAAQL,KACU,IAA7C1S,EAAQ8S,cAAcC,QAAQL,GAtB3B,iDA0BP8R,EAAS5nB,KAAK,CACVjB,IAAKiR,EAAIjF,GACTsV,kBACAvF,iBACAvQ,QACAoa,iBACAzB,QACAG,eACAhR,cACAzG,SACAmY,QACAF,OACApB,iBACAnM,SACAlT,YAxCG,2CAAX,uDA2CA,EAAKpC,SAAS,CACV4mB,WACA/hB,SAAS,KAnFE,EAuFnBuQ,aAAe,SAACyE,GACZ,IAAMxE,EAAQ,GAEdwE,EAAGxK,SAAQ,SAACL,GAAS,IACXsG,EAAWtG,EAAIrK,OAAf2Q,OAEND,EAAMrW,KAAK,CACPjB,IAAKiR,EAAIjF,GACTuL,OAAQA,OAIhB,EAAKtV,SAAS,CACVqV,WApGW,EAwGnBE,gBAAkB,SAACsE,GACf,IAAMrE,EAAW,GAEjBqE,EAAGxK,SAAQ,SAACL,GAAS,IAAD,EACgBA,EAAIrK,OAA9BgF,EADU,EACVA,IAAKuJ,EADK,EACLA,OAAQC,EADH,EACGA,SAEnBqC,EAASxW,KAAK,CACVjB,IAAKiR,EAAIjF,GACT8E,IAAKG,EAAIH,IACTlF,MACAuJ,SACAC,gBAIR,EAAKnT,SAAS,CACVwV,cAxHW,EAgJnBwE,UAAY,SAACnK,GACT,EAAK7P,SAAS,CACVsR,SAAS,EACTqE,SAAU9F,KAnJC,EAuJnB2B,aAAe,WACX,EAAKxR,SAAS,CACV2V,SAAU,KACVC,cAAc,EACdC,qBAAqB,EACrBgR,sBAAsB,EACtBtX,eAAgB,KAChB+B,SAAS,KA9JE,EAkKnBnD,WAAa,SAACC,GACV,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IApK5B,EAuKnB0K,IAAM,SAACC,GACH,EAAKC,cACL,EAAKhZ,MAAM+B,SAASC,YAAK,YAAD,OAAa+W,MAzKtB,EA4KnBE,WAAa,SAACpG,GACV,EAAK7P,SAAS,CACV2V,SAAU9F,EACV+F,cAAc,KA/KH,EAmLnBsK,mBAAqB,SAACzV,GAClB,EAAKzK,SAAS,CACVuP,eAAgB9E,EAChBoc,sBAAsB,KAtLX,EA0LnB3Q,kBAAoB,SAACrG,GACjB,EAAK7P,SAAS,CACVsS,cAAezC,EAAOwB,YAAYtH,GAClC8L,qBAAqB,KA7LV,EAiMnBnR,SAAW,EAAKyR,kBAjMG,EAmUnB7F,SAAW,SAACT,GACRU,aAAI+Q,GAAQ,CAAEC,QAAS1R,KAClBW,SACApR,MAAK,SAACqR,GACH,IAAIC,EAASC,OAAOC,IAAIC,gBAAgBJ,GACpCK,EAAWC,SAASC,cAAc,KACtCF,EAASG,KAAOP,EAChBI,EAASI,aACL,WADJ,mBAEgBrB,EAAOiK,eAFvB,UAIAhJ,EAASK,WAEZ7R,OAAM,SAACC,GACJC,QAAQC,IAAIF,OAjVL,EAqVnBmb,SArVmB,uCAqVR,WAAO7K,GAAP,2BAAA1N,EAAA,6DACH2kB,EAAcjX,EAAOjF,OAAOiF,EAAOjF,OAAOM,OAAS,GACnD6b,EAAiBvK,OAAOM,SAASgK,EAAY1E,WAC7C4E,GAAqB,EACrBpK,EAAe/M,EAAOwP,gBAAgBvN,MAAM,KAC5C+K,EAAOL,OAAOM,SAASF,EAAa,GAAGnb,OAAO,IAC9C8N,EANG,UAMiB4M,GAAQU,EAAM,GAN/B,YAMqCD,EAAa,IANlD,OAMuD/M,EAAOwP,gBAAgB5d,OAAO,EAAG,IANxF,OAM6FoO,EAAOwP,gBAAgB5d,OAAO,GAAI,IAN/H,SAQD,EAAKqV,SACN9H,IADC,UACMO,EADN,YACwB4M,GAAQ4K,EAAiB,EAAG,KACrDhY,MACA3P,MAAK,SAAC4P,GACCA,EAAIC,QAAUD,EAAIrK,OAAOof,YAAWiD,GAAqB,MAEhE1nB,OAAM,SAACC,GACJiD,IAAQjD,MAAM,8CACdC,QAAQC,IAAIF,MAhBb,WAmBHynB,EAnBG,wBAoBHxkB,IAAQjD,MACJ,kEArBD,2BA0BH8W,EA1BG,eA4BPlC,GAAQ,CACJ7W,MAAO,uDACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,qCACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAG4Q,gBAAgBpX,MAnCpB,4CArVQ,wDA6XnBoX,gBA7XmB,uCA6XD,WAAOpX,GAAP,qBAAA1N,EAAA,sDACVya,EAAe/M,EAAOwP,gBAAgBvN,MAAM,KAC5C+K,EAAOL,OAAOM,SAASF,EAAa,GAAGnb,OAAO,IAC9C2iB,EAAM5H,OAAOM,SAASF,EAAa,IACnCrN,EAJU,UAIU4M,GAAQU,EAAM,IAJxB,OAI6BV,GAAQiI,EAAK,IAJ1C,OAI+CvU,EAAOwP,gBAAgB5d,OAAO,EAAG,IAJhF,OAIqFoO,EAAOwP,gBAAgB5d,OAAO,GAAI,IAErI,EAAKiiB,YACA1U,IAAIa,EAAO9R,KACX0c,SACArb,KAHL,sBAGU,sBAAA+C,EAAA,sEAEI0N,EAAOjF,OAAOyE,QAAd,uCAAsB,WAAM5F,GAAN,SAAAtH,EAAA,sEAClB,EAAK2U,SACV9H,IADK,UACEO,GADF,OACmB4M,GAAQK,OAAOM,SAASrT,EAAM2Y,WAAY,KAClErT,MACA3P,MAAK,SAAC4P,GACCA,EAAIC,QACJD,EAAIH,IAAIrJ,OAAO,CAAEue,WAAW,OAGnCzkB,OAAM,SAACC,GACJiD,IAAQjD,MAAM,8CACdC,QAAQC,IAAIF,MAXQ,2CAAtB,uDAFJ,OAgBFiD,IAAQuR,QAAQ,+CAhBd,4CAkBLzU,OAAM,SAACC,GACJiD,IAAQjD,MAAM,sDA5BR,2CA7XC,sDAGf,EAAKoX,QAAUvY,EAAI6R,YACnB,EAAKyT,YAAc,EAAK/M,QAAQzG,WAAW,YAC3C,EAAK0G,YAAc,EAAKD,QAAQzG,WAAW,YAC3C,EAAK2G,SAAW,EAAKF,QAAQzG,WAAW,SACxC,EAAK4G,SAAW,EAAKH,QAAQzG,WAAW,SACxC,EAAKvE,SAAW,CAAEC,KAAM,UAAWC,MAAO,UAAW2I,IAAK,WAE1D,EAAKwB,YAAc,KACnB,EAAK9X,MAAQ,CACTX,KAAMP,EAAMO,KAAKA,KACjBsH,SAAS,EACT+hB,SAAU,GACVvR,MAAO,GACPG,SAAU,GACVlE,SAAS,EACTqE,SAAU,KACVC,cAAc,EACdC,qBAAqB,EACrBgR,sBAAsB,EACtBtX,eAAgB,KAChB+C,cAAe,MAvBJ,E,gEA6HfvV,KAAKiZ,YAAcjZ,KAAK2mB,YACnBxM,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAK4pB,iBAErB5pB,KAAK6Z,YACAM,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAKwY,iBAErBxY,KAAK8Z,SAASK,QAAQ,UAAUC,WAAWpa,KAAKqY,gB,6BAG7CkC,GAAQ,IAAD,OACNA,EAAMpC,gBAAkBnY,KAAKmB,MAAM4W,WACnC/X,KAAKiD,SAAS,CAAE6E,SAAS,IACzB9H,KAAKiD,SAAS,CAAE8U,SAAUwC,EAAMpC,gBAChCnY,KAAK2mB,YAAY3U,MAAM3P,MAAK,SAACya,GAAD,OAAQ,EAAK8M,gBAAgB9M,S,wCAuD9C,IAAD,OACd,MAAO,CACH,CACIvc,MAAO,UACPS,IAAK,UACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE2X,eAAenC,cAAcF,EAAEqC,iBACnDhC,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBAAM,EAAKoZ,kBAAkBrG,KAEtC,gCAASA,EAAOiK,mBAI5B,CACIxc,MAAO,WACPS,IAAK,kBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEkd,gBAAgB5d,OAAO,GAAGkW,cAAcF,EAAE4H,gBAAgB5d,OAAO,KACrFmW,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAA6D,IAA1CA,EAAOwP,gBAAgBlK,QAAQlM,IAC5D6O,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBACL,EAAKojB,mBAAmBrQ,EAAOwP,mBAGnC,gCAASxP,EAAOwP,oBAI5B,CACI/hB,MAAO,cACPS,IAAK,SACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CAAKpN,QAAQ,UACT,kBAAC,IAAD,KACKoN,EAAOyF,OAASzF,EAAOyF,OAAS,IACjC,kBAAC,KAAD,CACIiB,QAAS,kBAAC,GAAD,CAAc1G,OAAQA,IAC/BvS,MAAM,aACNuoB,QAAQ,SAER,kBAAChL,GAAA,EAAD,CAAcre,MAAO,CAAE8L,MAAO,kBAMlD,CACIhL,MAAO,QACPsoB,UAAW,QACXrO,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAEoH,QAAQ2O,OAASD,KAAOxD,GAAOgD,EAAElO,QAAQ2O,QAC3EJ,OAAQ,SAACvO,GAAD,OACJ,gCACKkL,GAAOlL,GACHoF,mBAAmB,QAAS,EAAKhD,aAIlD,CACIrO,MAAO,eACPS,IAAK,iBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEwhB,eAAejM,WAAWC,cAAcF,EAAEkM,eAAejM,aAC7EhV,MAAO,SACPoV,OAAQ,SAACjI,GAAD,OAAY,gCAASA,EAAO8T,kBAExC,CACIrmB,MAAO,QACPS,IAAK,QACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE4gB,MAAMrL,WAAWC,cAAcF,EAAEsL,MAAMrL,aAC3DI,OAAQ,SAACjI,GAAD,OAAY,gCAAS,EAAK9J,cAAc8J,EAAOkT,UAE3D,CACIzlB,MAAO,OACPS,IAAK,OACL+Z,OAAQ,SAACjI,GACL,IAAIgT,EAAOhT,EAAO4R,eAAiB,EAAI5R,EAAOgT,KAE9C,OAAO,gCAAS,EAAK9c,cAAc8c,MAG3C,CACIvlB,MAAO,QACPS,IAAK,QACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE+f,MAAMxK,WAAWC,cAAcF,EAAEyK,MAAMxK,aAC3DI,OAAQ,SAACjI,GAAD,OACJ,gCACI,0BAAMrT,MAAO,CAAE8L,MAAO,UAAWlE,SAAU,UACtC,EAAK2B,cAAc8J,EAAOqS,WAM3C,CACI5kB,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAO/K,KAAK,UACR,kBAAC,KAAD,CAASxH,MAAM,YACX,kBAAC4pB,GAAA,EAAD,CACInpB,IAAI,OACJjB,QAAS,kBAAM,EAAKmZ,WAAWpG,IAC/BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,aACX,kBAACqU,GAAA,EAAD,CACI5T,IAAI,WACJjB,QAAS,kBAAM,EAAKwT,SAAST,IAC7BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,YACX,kBAAC6a,GAAA,EAAD,CACIpa,IAAI,SACJjB,QAAS,kBAAM,EAAK4d,SAAS7K,IAC7BrT,MAAO,CAAE8L,MAAO,oB,+BAmGlC,IAAD,SAcDvL,KAAKmB,MAZL0oB,EAFC,EAEDA,SACAvR,EAHC,EAGDA,MACAxQ,EAJC,EAIDA,QACAyM,EALC,EAKDA,QACAqE,EANC,EAMDA,SACAH,EAPC,EAODA,SACAlD,EARC,EAQDA,cACAsD,EATC,EASDA,aACAC,EAVC,EAUDA,oBACAgR,EAXC,EAWDA,qBACAtX,EAZC,EAYDA,eACAhS,EAbC,EAaDA,KAGJ,OACI,6BACK+T,GACG,kBAAC,GAAD,CACIA,QAASA,EACThU,MACIqY,EAAW,wBAAuB,gBAEtCpY,KAAMA,EACNiY,SAAUA,EACVhE,aAAczU,KAAKyU,aACnB3B,OAAQ8F,EACRuF,QAASne,KAAKgW,eAGrB6C,GACG,kBAAC,GAAD,CACItE,QAASsE,EACT0Q,cAAe3Q,EAAS5X,IACxByT,aAAczU,KAAKyU,eAG1BqE,GACG,kBAAC,GAAD,CACIvE,QAASuE,EACTvD,cAAeA,EACfd,aAAczU,KAAKyU,eAG1BqV,GACG,kBAAC,GAAD,CACIvV,QAASuV,EACTtX,eAAgBA,EAChBiC,aAAczU,KAAKyU,eAG3B,kBAAC,KAAD,CACIlQ,UAAU,mBACVhE,MAAM,WACN8a,SAAS,oBACTC,MAAO,CACH,kBAAC,GAAD,CACIta,IAAI,SACJwF,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OAAW,EAAKsP,OAAOtP,IACjCzM,MAAO,CAAEG,MAAO,OAEpB,kBAAC,IAAD,CACIoB,IAAI,QACJ8D,KAAK,UACLkZ,OAAK,EACLje,QAAS,kBAAM,EAAKkd,cAJxB,aAWHjd,KAAK2H,SAAS,GAAGkT,QAAQ1M,QAC1BmK,EAAMjQ,KAAI,SAAAwM,GACN,EAAKlN,SAAS,GAAGkT,QAAQ5Y,KACrB,CACI4N,KAAK,OAAD,OAASgF,EAAI0D,QACjBrM,MAAM,IAAD,OAAM2I,EAAI0D,aAK/B,kBAAC,GAAD,CACI5Q,SAAU3H,KAAK2H,SACfC,KAAMiiB,EACN/hB,QAASA,S,GArfN7G,aAkgBRC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyByoB,ICnlBlC/a,GAAW,CAAEC,KAAM,UAAWC,MAAO,QACrCsU,GAAY,CAAEvU,KAAM,UAAWC,MAAO,OAAQ2I,IAAK,WAEnDrG,GAAa,SAACC,GAChB,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IAKzCrF,GAAgB,SAACC,GAAD,OAClB,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IAER8F,GAAW,SAACvC,GAAyB,IAAlB+Y,EAAiB,wDAClC3N,EAAM2N,EAAOnC,GAAYxU,GAE7B,OAAOwC,GAAW5E,EAAMa,SAASuE,mBAAmB,QAASgG,KAO3DwS,GAAW,uCAAG,WAAOtY,GAAP,eAAA1M,EAAA,6DACZ2M,EAAY,KADA,SAEVD,EAAIE,MAAM3P,MAAK,SAAC4P,GACdA,EAAIC,SACJH,EAAYE,EAAIrK,WAJR,gCAOTmK,GAPS,2CAAH,sDAwFFQ,GA9EM,SAACtS,GAAW,IA5BbqT,EAcG/G,EAeX8d,EAAepqB,EAAfoqB,WADoB,EAEA5X,mBAAS,IAFT,oBAErBK,EAFqB,KAEbC,EAFa,OAGcN,oBAAS,GAHvB,oBAGrBC,EAHqB,KAGNC,EAHM,KAe5B,OAVAM,qBAAU,WACNN,GAAiB,GAEjB,IAAIb,EAAMzQ,EAAI6R,YAAYC,WAAW,SAASlB,IAAIoY,GAElDD,GAAYtY,GACPzP,MAAK,SAAC+Q,GAAD,OAASL,EAAUK,MACxBC,SAAQ,kBAAMV,GAAiB,QACrC,CAAC0X,IAGA,kBAAC,KAAD,CACIrpB,IAAI,eACJuT,QAAStU,EAAMsU,QACfC,SAAUvU,EAAMwU,aAChBlU,MAAO,iDACPmU,OAAQ,sCAER,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,KAAM,GACP,kBAAC,IAAD,CACIpU,MACI,kBAAC,KAAD,aACS,qCA1CdgM,EA0CuC8d,EAzCpD,GAAN,OAAU9d,EAAK7H,OAAO,EAAG,GAAzB,YAA+B6H,EAAK7H,OAAO,EAAG,GAA9C,YAAoD6H,EAAK7H,OAAO,EAAG,GAAnE,YAAyE6H,EAAK7H,OAAO,GAAI,GAAzF,YAA+F6H,EAAK7H,OAAO,GAAI,KAyC9E,MAGbyC,UAAW,CAAE+C,OAAQ,OAEnBwI,GACE,6CAEI,gCAASI,EAAOwP,iBAChB,6BAHJ,eAKI,gCAASxP,EAAOiK,gBAChB,6BANJ,gBAQI,gCACK/T,GAAc8J,EAAOrF,WAE1B,6BAXJ,YAaI,4BAAQhO,MAAOqT,EAAO4R,eAAiB,CAAExZ,eAAgB,gBAAmB,CAACA,eAAgB,SACxFlC,GAAc8J,EAAOgT,OAE1B,6BAhBJ,aAkBI,gCACKhT,EAAO4U,aADZ,MAC6B3Y,GAAS+D,EAAOwR,cAE7C,6BArBJ,qBAuBI,gCAASxR,EAAO1F,WAAa2B,GAAS+D,EAAO1F,YAAY,GAAQ,IACjE,6BAxBJ,iBA0BK0F,EAAOkU,UAEJ,4BAAQvnB,MAAO,CAAE8L,MAAO,YAAxB,SAEA,4BAAQ9L,MAAO,CAAE8L,MAAO,YAAxB,MAEJ,6BAhCJ,sBAkCI,iCAhGZ+H,EAgGgCR,EAAOzN,QAhG/B+L,GAAWkC,EAAIyB,MAAM,KAAK,YCqB9CuC,GAAWC,IAAXD,OACAF,GAAYC,KAAZD,QAEJtF,GAAMzQ,EAAI6R,YAERkM,GAAU,SAACnW,EAAKwD,GAAN,OAAiBQ,OAAOhE,GAAKiE,SAAST,EAAQ,MAE1DmC,GAAW,CAAEC,KAAM,UAAWC,MAAO,UAAW2I,IAAK,WAEnDrG,GAAa,SAACC,GAChB,MAAiB,kBAANA,EAAuBA,EAC3BA,EAAEC,OAAO,GAAGnE,cAAgBkE,EAAEhD,MAAM,IAGzCic,GAAa,SAAChX,GAAD,OAASlC,GAAWkC,EAAIyB,MAAM,KAAK,KAEhD/L,GAAgB,SAACC,GAAD,OAClB,IAAIC,KAAKC,aAAa,QAAS,CAC3B1J,MAAO,WACP2J,SAAU,QACXC,OAAOJ,IAGR0f,GAAc,SAAC1oB,GAAW,IACtB6S,EAAqB7S,EAArB6S,OAAQqN,EAAalgB,EAAbkgB,SACV3T,EAAQ,KACRsZ,EAAO,EAEPyE,EAAc,uCAAG,WAAO7c,GAAP,SAAAtI,EAAA,sDAEboH,GAASgZ,GAAWhZ,EAAOsG,EAAOwR,eAAcwB,EAAO,GAE3DhU,GAAIqB,WAAW,SACVlB,IAAIvE,GACJsE,MACA3P,KAHL,uCAGU,WAAOgmB,GAAP,eAAAjjB,EAAA,0DACEijB,EAAOnW,OADT,uBAEMmS,EAAOgE,EAAOzgB,OAClBygB,EAAOvW,IAAIrJ,OAAO,CACd2E,WAAYZ,EACZsZ,SALN,SAQQhU,GAAIqB,WAAW,aACpBlB,IAAIoS,EAAK/B,iBACT7Z,OAAO,CACJyP,wBAAyB1L,IAE5BjK,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAdlB,OAiBFiD,IAAQuR,QAAQ,wCAjBd,2CAHV,uDAJiB,2CAAH,sDA4BlB,OACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CACImJ,SAAUA,EACVwB,OAAQA,KACRtY,OAAO,eACPtB,KAAK,QACLuZ,SAAU,SAACS,GACPvV,EAAQuV,EAAO,IAAIrQ,KAAKqQ,EAAK/P,OAAS,QAG9C,kBAAC4W,GAAA,EAAD,CACI7oB,QAAS,kBAAMwqB,EAAezX,EAAO9R,MACrCvB,MAAO,CAAE8L,MAAO,eAM1Bia,GAAa,SAAChZ,EAAOiZ,GACvB,IAAIC,EAAKlZ,EACLmZ,EAAKF,EAAiBpY,SAE1B,OAAIqY,EAAGE,UAAYD,EAAGC,aAEbF,EAAGE,UAAYD,EAAGC,aAGvBF,EAAGnY,WAAaoY,EAAGpY,cAEdmY,EAAGnY,WAAaoY,EAAGpY,aAGxBmY,EAAGpY,UAAYqY,EAAGrY,YAKpByB,GAAW,SAACvC,GACd,OAAO4E,GAAW5E,EAAMa,SAASuE,mBAAmB,QAAS,CAAC/C,KAAM,UAAWC,MAAO,YAGpF4I,GAAS,SAAClL,GACZ,OAAIA,EAAcA,EAAMa,SACZ,IAAIqE,MAGd8Y,G,kDACF,WAAYvqB,GAAQ,IAAD,8BACf,cAAMA,IAwBViZ,WAAa,SAACpG,GACV,EAAK7P,SAAS,CACV2V,SAAU9F,EACV+F,cAAc,KA5BH,EAgCnB4R,KAAO,WACH,EAAKxnB,SAAS,CAAEynB,oBAAoB,KAjCrB,EAoCnBC,oBAAsB,SAACD,GACnB,EAAKznB,SAAS,CAAEynB,wBArCD,EAwCnBrS,aAAe,SAACyE,GACZ,IAAMxE,EAAQ,GAEdwE,EAAGxK,SAAQ,SAACL,GAAS,IACXsG,EAAWtG,EAAIrK,OAAf2Q,OAEND,EAAMrW,KAAK,CACPjB,IAAKiR,EAAIjF,GACTuL,OAAQA,OAIhB,EAAKtV,SAAS,CAACqV,WApDA,EAuDnBsS,aAAe,SAAC9S,GACZ,IAAMoO,EAAQ,GACNnO,EAAa,EAAK5W,MAAlB4W,SACR,EAAK9U,SAAS,CAAE6E,SAAS,IAEzBgQ,EAAcxF,SAAQ,SAACL,GAAS,IAAD,EAcvBA,EAAIrK,OAZJ6F,EAFuB,EAEvBA,SACAuZ,EAHuB,EAGvBA,UACA1E,EAJuB,EAIvBA,gBACAvF,EALuB,EAKvBA,eACA2K,EANuB,EAMvBA,aACA9K,EAPuB,EAOvBA,eACAtI,EARuB,EAQvBA,YACAgQ,EATuB,EASvBA,YACAlX,EAVuB,EAUvBA,WACA0Y,EAXuB,EAWvBA,KACApB,EAZuB,EAYvBA,eACArf,EAbuB,EAavBA,QAIA0S,IACqD,IAArDuK,EAAgBnK,cAAcC,QAAQL,KACc,IAApDgF,EAAe5E,cAAcC,QAAQL,KACsB,IAA3DhJ,GAASuV,GAAanM,cAAcC,QAAQL,KACD,IAA3CtK,EAASkN,WAAWvC,QAAQL,KACiB,IAA7C1S,EAAQ8S,cAAcC,QAAQL,IAKlCmO,EAAMjkB,KAAK,CACPjB,IAAKiR,EAAIjF,GACTS,WACA6U,kBACAvF,iBACA2K,eACA9K,iBACA0H,cACAlX,aACA0Y,OACApB,iBACAsC,YACA1S,cACAjP,eAIR,EAAKpC,SAAS,CACVijB,QACApe,SAAS,KA1GE,EA+HnBH,SAAW,EAAKyR,kBA/HG,EAiInB+J,mBAAqB,SAACzV,GAClB,EAAKzK,SAAS,CACVuP,eAAgB9E,EAChBuV,iBAAiB,KApIN,EAwInB9J,kBAAoB,SAACzL,GACjB,EAAKzK,SAAS,CACVsS,cAAe7H,EACfwV,gBAAgB,KA3IL,EA+InBzO,aAAe,WACX,EAAKxR,SAAS,CACV4V,cAAc,EACdqK,gBAAgB,EAChBD,iBAAiB,KAnJN,EAuTnBgE,YAvTmB,uCAuTL,WAAOvZ,GAAP,yBAAAtI,EAAA,yDACNmH,EAAOmB,EAAOuT,QAAQ,KAAM,KAE5B,WAAWiG,KAAK3a,GAHV,wBAIF4a,GAAQ,EACRC,GAAoB,EACpBtH,EAAOL,OAAOM,SAASxT,EAAK7H,OAAO,EAAG,IACtC2iB,EAAM9a,EAAK7H,OAAO,EAAG,GACrB4iB,EARE,WAQgBxH,EARhB,YAQwBuH,EARxB,YAQ+B9a,EAAK7H,OAAO,EAAG,GAR9C,YAQoD6H,EAAK7H,OAAO,GAAI,IARpE,SAUA,EAAKqV,SACN9H,IAAI1F,GACJyF,MACA3P,MAAK,SAACgiB,GACCA,EAAKnS,SACLzM,IAAQjD,MAAM,oCACd2kB,GAAQ,MAGf5kB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MApBd,WAuBF2kB,EAvBE,mDAyBN,EAAKnR,aACA/D,IAAIqV,GACJtV,MACA3P,KAHL,uCAGU,WAAOkgB,GAAP,iBAAAnd,EAAA,0DACEmd,EAAWrQ,OADb,oBAEMtE,EAAW2U,EAAW3a,OACtB4f,EAAW/H,OAAOM,SAASxT,EAAK7H,OAAO,GAAI,IAEvB,WAApBkJ,EAAS4D,OALf,uBAMM/L,IAAQjD,MAAM,8CANpB,+BAUMglB,EAAW,GAVjB,iCAWYjF,EAAWzQ,IACZqB,WAAW,UACXlB,IAFC,UAEMmN,GAAQoI,EAAW,EAAG,KAC7BxV,MACA3P,MAAK,SAAC4P,GACSA,EAAIrK,OACNsN,YAAWkS,GAAoB,MAjBvD,UAqBWA,EArBX,wBAsBU3hB,IAAQjD,MAAM,iDAtBxB,8BA0BUglB,IAAa5Z,EAASsD,YA1BhC,kCA2BgBqR,EAAWzQ,IAAIrJ,OAAO,CAAE+I,OAAQ,eA3BhD,QA+BE+Q,EAAWzQ,IACNqB,WAAW,UACXlB,IAFL,UAEYmN,GAAQoI,EAAU,KACzBxV,MACA3P,MAAK,SAAColB,GACH,GAAIA,EAAQvV,OAAQ,CAChB,IAAIxF,EAAQ+a,EAAQ7f,OAEpB,EAAKmS,SACA9H,IAAIvF,EAAMgB,QACViS,IAAI,CACDlS,SAAUf,EAAMe,SAChB6U,gBAAiBC,EAAWvV,GAC5BsH,YAAa1G,EAAS0G,YACtByI,eAAgBnP,EAASjB,QACzB+a,aAAcD,EAAQza,GACtBsX,YAAa5X,EAAMU,WACnBA,WAAY,KACZ0Y,KAAM,EACNpB,gBAAgB,EAChBsC,WAAW,EACXpK,eAAgBtb,IAAS4R,UAAU4T,WAAWC,kBAC9C1hB,QAAS,EAAKlE,MAAMX,KAAKE,QAE5B2B,MAAK,SAAC4P,GACHwV,EAAQ3V,IACHrJ,OAAO,CAAEyM,WAAW,IACpB7S,MAAK,WACF,EAAKY,SAAS,CAAE+H,QAAS,KACzBvF,IAAQuR,QAAQ,sBAGxBuL,EAAWzQ,IACVrJ,OAAO,CACJuP,oBAAqByP,EAAQza,GAC7BiL,kBAAmBvL,EAAMU,WACzB8K,wBAAyB,UAGhC3V,OAAM,SAACC,GACJiD,IAAQjD,MAAM,sDACdC,QAAQC,IAAIF,UAxElC,wBA6EEiD,IAAQjD,MAAM,sBA7EhB,4CAHV,kCAAAxC,KAAA,gBAzBM,wBA6GNyF,IAAQqiB,KAAK,4CA7GP,4CAvTK,wDAwanB+C,aAxamB,uCAwaJ,WAAO/X,GAAP,SAAA1N,EAAA,sEACL,EAAK2U,SACN9H,IAAIa,EAAO9R,KACXyH,OAAO,CACJic,gBAAiB5R,EAAO4R,iBAE3BriB,MAAK,WACEyQ,EAAO4R,eACPjf,IAAQuR,QAAQ,iDAEhBvR,IAAQuR,QAAQ,+CAEvBzU,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZiD,IAAQjD,MAAM,0BAdX,2CAxaI,wDA0bnBmb,SA1bmB,uCA0bR,WAAO7K,GAAP,iBAAA1N,EAAA,yDACH6iB,GAAqB,GAErBnV,EAAOkU,UAHJ,uBAIHvhB,IAAQjD,MAAM,mCAJX,0CAQD,EAAKwT,aACN/D,IAAIa,EAAOwP,iBACXtQ,MACA3P,KAHC,uCAGI,WAAOkgB,GAAP,eAAAnd,EAAA,0DACEmd,EAAWrQ,OADb,uBAEMsV,EAAW/H,OAAOM,SAASjN,EAAO4U,cAFxC,SAIQnF,EAAWzQ,IACZqB,WAAW,UACXlB,IAAImN,GAAQoI,EAAW,EAAG,IAC1BxV,MACA3P,MAAK,SAAColB,GACCA,EAAQvV,QAAUuV,EAAQ7f,OAAOsN,YAAW+S,GAAqB,MAT/E,2CAHJ,kCAAAjoB,KAAA,gBARC,WA0BHioB,EA1BG,uBA2BHxiB,IAAQjD,MAAM,oDA3BX,0BA+BH8W,EA/BG,eAiCPlC,GAAQ,CACJ7W,MAAO,mDACPK,KAAM,kBAAC2Y,GAAA,EAAD,MACNC,QAAS,gBACTC,OAAQ,QACRC,WAAY,KACZC,KANI,WAOAL,EAAG0O,aAAalV,MAxCjB,4CA1bQ,wDAuenBkV,aAvemB,uCAueJ,WAAOlV,GAAP,qBAAA1N,EAAA,6DACPoG,EAAciU,OAAOM,SAASjN,EAAO4U,cACrCQ,EAAoB,KACpBC,EAAkB,KAClBC,EAAuB,KAJhB,SAML,EAAKrO,SACN9H,IADC,UACMa,EAAO9R,MACd0c,SACArb,MAAK,WACF,EAAK2T,aACA/D,IAAIa,EAAOwP,iBACXtQ,MACA3P,KAHL,uCAGU,WAAOkgB,GAAP,SAAAnd,EAAA,0DACEmd,EAAWrQ,OADb,oBAI0B,WAFTqQ,EAAW3a,OAEb4J,OAJf,uBAKM/L,IAAQjD,MAAM,uEALpB,0CASQ+f,EAAWzQ,IAChBqB,WAAW,UACXlB,IAAIa,EAAO4U,cACX1V,MACA3P,MAAK,SAACqK,GACCA,EAAMwF,QACNxF,EAAMoF,IACDrJ,OAAO,CAAEyM,WAAW,IACpB7S,MAAK,WACFoD,IAAQuR,QAAQ,wBAlBlC,YAuBMxL,EAAc,GAvBpB,kCAwBY,EAAKuO,SACN9H,IADC,UACMa,EAAO9R,IAAI0D,OAAO,EAAG,KAD3B,OACiC0a,GAAQ5T,EAAc,EAAG,KAC3DwG,MACA3P,MAAK,SAAAgmB,GACF,IAAIhE,EAAOgE,EAAOzgB,OAClBugB,EAAkB9D,EAAKC,YACvB8D,EAAuB/D,EAAKjX,WAC5B8a,EAAoB7D,EAAKqD,gBAE5BnlB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAlC1B,QAsCE+f,EAAWzQ,IACVrJ,OAAO,CACJuP,oBAAqBkQ,EACrBjQ,kBAAmBkQ,EACnBjQ,wBAAyBkQ,IA1C/B,wBA6CE3iB,IAAQjD,MAAM,sBA7ChB,4CAHV,kCAAAxC,KAAA,mBAVG,2CAveI,sDAGf,EAAK+Z,SAAWjI,GAAIqB,WAAW,SAC/B,EAAK2G,SAAWzY,EAAI6R,YAAYC,WAAW,SAC3C,EAAK6C,aAAelE,GAAIqB,WAAW,aACnC,EAAK8F,YAAc,KAEnB,EAAK9X,MAAQ,CACTX,KAAMP,EAAMO,KAAKA,KACjBuX,SAAU,GACVjQ,SAAS,EACToe,MAAO,GACP5N,MAAO,GACPtN,QAAS,GACTwH,eAAgB,GAChB+C,cAAe,GACfqD,SAAU,KACVC,cAAc,EACdoK,iBAAiB,EACjBC,gBAAgB,EAChBwH,oBAAoB,GArBT,E,gEA+Gf1qB,KAAK+Z,SACAI,QAAQ,iBAAkB,QAC1BC,WAAWpa,KAAK4qB,cAErB5qB,KAAK8Z,SAASK,QAAQ,UAAUC,WAAWpa,KAAKqY,gB,6BAG7CkC,GAAQ,IAAD,OACNA,EAAMpC,gBAAkBnY,KAAKmB,MAAM4W,WACnC/X,KAAKiD,SAAS,CAAE8U,SAAUwC,EAAMpC,gBAChCnY,KAAK+Z,SACA/H,MACA3P,MAAK,SAACyV,GAAD,OAAmB,EAAK8S,aAAa9S,S,wCA4BpC,IAAD,OACd,MAAO,CACH,CACIvX,MAAO,WACPS,IAAK,kBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEkd,gBAAgB5d,OAAO,GAAGkW,cAAcF,EAAE4H,gBAAgB5d,OAAO,KACrFmW,QAAS,GACTC,SAAU,SAAC5O,EAAO4G,GAAR,OAA6D,IAA1CA,EAAOwP,gBAAgBlK,QAAQlM,IAC5D6O,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBACL,EAAKojB,mBAAmBrQ,EAAOwP,mBAGnC,gCAASxP,EAAOwP,oBAI5B,CACI/hB,MAAO,UACPS,IAAK,iBACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE2X,eAAenC,cAAcF,EAAEqC,iBACnDhC,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CACIhO,KAAK,OACL/E,QAAS,kBACL,EAAKoZ,kBAAkBrG,EAAOwB,YAAYtH,MAG9C,gCAAS8F,EAAOiK,mBAI5B,CACIxc,MAAO,WACPS,IAAK,WACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEqI,SAASkN,WAAWC,cAAcF,EAAEjN,SAASkN,aACjEI,OAAQ,SAACjI,GAAD,OACJ,gCAAS9J,GAAc8J,EAAOrF,aAGtC,CACIlN,MAAO,QACPS,IAAK,eACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAEsiB,aAAa9M,cAAcF,EAAEgN,eACjD3M,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,eACQA,EAAO4U,aADf,cACiC3Y,GAAS+D,EAAOwR,iBAIzD,CACI/jB,MAAO,gBACPS,IAAK,aACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUQ,KAAOxD,GAAOtS,EAAEgI,aAAa+N,OAASD,KAAOxD,GAAOgD,EAAEtN,aAAa+N,QACrFJ,OAAQ,SAACjI,GAAD,OACJ,kBAAC,IAAD,CAAKpN,QAAQ,UACT,kBAAC,IAAD,KACKoN,EAAO1F,WAAP,WACSsK,GAAO5E,EAAO1F,YACbwE,mBAAmB,QAAShD,IAFtC,KAGK,KAGDkE,EAAOkU,WACR,kBAAC,KAAD,CACIxN,QAAS,kBAAC,GAAD,CAAa2G,SAAUrN,EAAOkU,UAAWlU,OAAQA,IAC1DvS,MAAM,aACNuoB,QAAQ,SAER,kBAACC,GAAA,EAAD,CACI5I,SAAUrN,EAAOkU,UACjBvnB,MAAO,CAAE8L,MAAO,kBAQ5C,CACIhL,MAAO,OACPS,IAAK,OACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE0gB,KAAKnL,WAAWC,cAAcF,EAAEoL,KAAKnL,aACzDI,OAAQ,SAACjI,GACL,IAAIrT,EAAQ,CACRyL,eAAgB,QAMpB,OAHI4H,EAAO4R,iBACPjlB,EAAMyL,eAAiB,gBAGvB,kBAAC,KAAD,CAAOnD,KAAK,SACR,4BAAQtI,MAAOA,GAAQuJ,GAAc8J,EAAOgT,OAEvChT,EAAOgT,KAAO,IAAMhT,EAAOkU,WAC5B,kBAAC,KAAD,CAASzmB,MAAM,2BACX,kBAACyoB,GAAA,EAAD,CACI7I,SAA0B,IAAhBrN,EAAOgT,KACjB9kB,IAAI,YACJjB,QAAS,kBAAM,EAAK8qB,aAAa/X,IACjCrT,MAAO,CAAE8L,MAAO,iBAQ5C,CACIhL,MAAO,YACPS,IAAK,YACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAUtV,EAAE4hB,UAAUrM,WAAWC,cAAcF,EAAEsM,UAAUrM,aACnEhV,MAAO,SACPoV,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,KACKA,EAAOkU,UACJ,4BAAQvnB,MAAO,CAAE8L,MAAO,YAAxB,SAEA,4BAAQ9L,MAAO,CAAE8L,MAAO,YAAxB,SAKhB,CACIhL,MAAO,UACPS,IAAK,UACLwZ,OAAQ,SAACpV,EAAGsV,GAAJ,OAAU4P,GAAWllB,EAAEC,SAASuV,cAAc0P,GAAW5P,EAAErV,WACnEM,MAAO,SACPoV,OAAQ,SAACjI,GAAD,OACJ,gCAASwX,GAAWxX,EAAOzN,YAGnC,CACI9E,MAAO,WACPS,IAAK,WACL+Z,OAAQ,SAACjI,GAAD,OACJ,kBAAC,KAAD,CAAO/K,KAAK,UACR,kBAAC,KAAD,CAASxH,MAAM,YACX,kBAAC4pB,GAAA,EAAD,CACInpB,IAAI,OACJjB,QAAS,kBAAM,EAAKmZ,WAAWpG,IAC/BrT,MAAO,CAAE8L,MAAO,cAGxB,kBAAC,KAAD,CAAShL,MAAM,YACX,kBAAC6a,GAAA,EAAD,CACIpa,IAAI,SACJjB,QAAS,kBAAM,EAAK4d,SAAS7K,IAC7BrT,MAAO,CAAE8L,MAAO,oB,+BAyPlC,IAAD,SAWDvL,KAAKmB,MATL+kB,EAFC,EAEDA,MACA5N,EAHC,EAGDA,MACAxQ,EAJC,EAIDA,QACA8Q,EALC,EAKDA,SACAC,EANC,EAMDA,aACAoK,EAPC,EAODA,gBACAC,EARC,EAQDA,eACA1Q,EATC,EASDA,eACA+C,EAVC,EAUDA,cAGJ,OACI,6BACKsD,GACG,kBAAC,GAAD,CACItE,QAASsE,EACTwR,WAAYzR,EAAS5X,IACrByT,aAAczU,KAAKyU,eAI3B,kBAAC,KAAD,CACIlQ,UAAU,mBACVhE,MAAM,QACN8a,SAAS,eACTyP,OAAQ,kBAAM,MACdxP,MAAO,CACH,kBAAC,IAAD,CACIta,IAAI,IACJqgB,YAAa,kBAAC6H,GAAA,EAAD,MACb1iB,YAAY,kBACZ/G,MAAO,CAAEG,MAAO,KAChBupB,WAAS,EACTxG,UAAW,GACXrC,YAAU,EACVpU,MAAOlM,KAAKmB,MAAM6J,QAClBsW,SAAU,SAACC,GAAD,OACN,EAAKte,SAAS,CAAE+H,QAASuW,EAAGjL,OAAOpK,SAEvCkd,QAAS,SAAC7H,GACa,KAAfA,EAAG8H,SACH,EAAKpC,YAAY1F,EAAGjL,OAAOpK,aAM9C+W,GACG,kBAAC,GAAD,CACI1O,QAAS0O,EACTzQ,eAAgBA,EAChBiC,aAAczU,KAAKyU,eAG1ByO,GACG,kBAAC,GAAD,CACI3O,QAAS2O,EACT3N,cAAeA,EACfd,aAAczU,KAAKyU,gBAKtBzU,KAAK2H,SAAS,GAAGkT,QAAQ1M,QAC1BmK,EAAMjQ,KAAI,SAACwM,GACP,EAAKlN,SAAS,GAAGkT,QAAQ5Y,KAAK,CAC1B4N,KAAK,OAAD,OAASgF,EAAI0D,QACjBrM,MAAM,IAAD,OAAM2I,EAAI0D,aAK3B,kBAAC,GAAD,CACIvQ,OACI,oCACI,kBAAC,IAAD,CAAKtC,QAAQ,iBACT,kBAAC,IAAD,CAAK7F,KAAM,GACP,mDAEJ,kBAAC,IAAD,CAAKA,KAAM,EAAGM,OAAQ,GAClB,kBAAC,KAAD,KACI,kBAAC,GAAD,CACIqG,YAAY,SACZ+U,SAAU,SAACrP,GAAD,OACN,EAAKsP,OAAOtP,IAEhBzM,MAAO,CAAEG,MAAO,WAOxC+H,SAAU3H,KAAK2H,SACfC,KAAMse,EACNpe,QAASA,S,GAzoBT7G,aAspBLC,oBANf,SAAyBC,EAAOyB,GAC5B,MAAO,CACHpC,KAAMW,EAAMX,QAILU,CAAyBspB,I,oBC1xBlC9b,GAAiBC,EAAQ,KA6ahBoc,G,kDAzaX,WAAY9qB,GAAQ,IAAD,8BACf,cAAMA,IA0BV+qB,SAAW,WAGP,EAAKC,eA9BU,EAoCnBC,gBApCmB,sBAoCD,sBAAA9lB,EAAA,sEACR,EAAK+lB,OAAOnZ,MACjB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3BA,EAAIH,IAAIrJ,OAAO,CACX8W,OAAO,UAIlBhd,OAAM,SAASC,GACZC,QAAQC,IAAI,iCAAkCF,MAVpC,2CApCC,EAkDnB4c,QAAU,SAACnW,EAAKwD,GAAN,OAAiBQ,OAAOhE,GAAKiE,SAAST,EAAQ,MAlDrC,EAoDnB2e,UAAY,WAER,OADA3oB,QAAQC,IAAI,mBACL,IAAI2a,SAAQ,SAACC,EAASC,GACzB,IADqC,IAAD,WAC3BnP,GACL,EAAK0L,SAAS2C,IAAI,CACdlE,OAAQnK,IAEX/L,MAAK,SAAA4P,GACQ,KAAN7D,GACAkP,EAAQ,uBAGf/a,OAAM,SAACC,GACJ+a,EAAO/a,OAVN4L,EAAI,GAAIA,EAAI,GAAIA,IAAK,EAArBA,OAvDE,EAuEnBid,QAvEmB,sBAuET,4BAAAjmB,EAAA,6DACFkT,EAAQ,GACZ7V,QAAQC,IAAI,iBAFN,SAIA,EAAKoX,SAAS9H,MACnB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEf0Q,EAAMrW,KAAK,CACP+K,GAAIiF,EAAIjF,GACRuL,OAAQ3Q,EAAK2Q,eAIxBhW,OAAM,SAASC,GACZC,QAAQC,IAAI,gCAAiCF,MAhB3C,UAmBD8V,EAAMnK,OAnBL,0EAqBC,IAAIkP,SAAQ,SAACC,EAASC,GACzB,IAAK,IAAInP,EAAI,EAAGA,EAAIkK,EAAMnK,OAAQC,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAI,IAAKA,IACrB,EAAK6c,OAAOlZ,IAAZ,UAAmBqG,EAAMlK,GAAGmK,OAA5B,YAAsCjK,IAAKqR,IAAI,CAC3C9K,IAAKyD,EAAMlK,GAAGmK,OACdA,OAAQjK,EACRiR,OAAO,IAEVld,MAAK,SAAA4P,GACmB,IAAjBqG,EAAMnK,QACNmP,EAAQ,gCAGf/a,OAAM,SAACC,GACJ+a,EAAO/a,UAnCjB,2CAvES,EAiHnByoB,YAAc,WAEV,OADAxoB,QAAQC,IAAI,sBACL,IAAI2a,SAAQ,SAACC,EAASC,GACzB,IADqC,IAAD,WAC3BnP,GACL,IAAIxB,EAAM0e,KAAMC,MAAMC,YAAY,cAC9B7e,EAAU,CACVC,MACA+P,WAAW,EACXxG,OAAQmV,KAAMrlB,KAAKwlB,YACnBrV,SAAUkV,KAAMrlB,KAAKylB,WACrBrV,SAAUiV,KAAMC,MAAMC,YAAY,aAClC5a,UAAU,GAAD,OAAK0a,KAAMK,QAAQC,OAAnB,YAA6BN,KAAMK,QAAQE,aACpDjP,eAAgBtb,IAAS4R,UAAU4T,WAAWC,mBAGlD,EAAKlN,YAAY5H,IAAIrF,GAAK+S,IAAIhT,GAC7BtK,MAAK,SAAA4P,GACQ,KAAN7D,GACAkP,EAAQ,0BAGf/a,OAAM,SAACC,GACJ+a,EAAO/a,OAnBN4L,EAAI,EAAGA,GAAK,GAAIA,IAAK,EAArBA,OApHE,EA6InB0d,cA7ImB,sBA6IH,gCAAA1mB,EAAA,6DACRkT,EAAQ,GACRyT,EAAM,GACNtT,EAAW,GAHH,SAKN,EAAKqB,SAAS9H,MACnB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEf0Q,EAAMrW,KAAK,CACP+K,GAAIiF,EAAIjF,GACRuL,OAAQ3Q,EAAK2Q,eAZb,uBAiBN,EAAK4S,OAAOnZ,MACjB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEfmkB,EAAI9pB,KAAK,CACL+K,GAAIiF,EAAIjF,GACR6H,IAAKjN,EAAKiN,IACV0D,OAAQ3Q,EAAK2Q,eAzBb,uBA8BN,EAAKsB,YAAY7H,MACtB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEf6Q,EAASxW,KAAK,CACV+K,GAAIiF,EAAIjF,GACRJ,IAAKhF,EAAKgF,IACVuJ,OAAQvO,EAAKuO,OACbC,SAAUxO,EAAKwO,SACftE,IAAKG,EAAIH,YAxCT,gCA6CL,IAAIuL,SAAQ,SAACC,EAASC,GACzB,IADqC,IAAD,WAC3BnP,GACL,IAAIyG,EAAMyD,EAAMgT,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAKvI,EAAMnK,OAAS,KAC7D2G,EAAKiX,EAAIT,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAKkL,EAAI5d,OAAS,KACxDxB,EAAU8L,EAAS6S,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAKpI,EAAStK,OAAS,KACvEM,EAAc9B,EAAQC,IACtBiE,EAAeya,KAAMvJ,KAAKmK,KAAKZ,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAK,IAAK,IAAInP,MAC1EZ,EAAY,IAAIY,KAAKb,GACzBC,EAAUkP,SAASlP,EAAUvD,WAAa,IAE1C,IAAI4e,EAAatb,EAAatD,WAAa,EACvC6e,EAAUtb,EAAUvD,WAAa,EAEjC8e,EAAQ,UAAM,EAAKjN,QAAQ+M,EAAY,IAA/B,OAAoCtb,EAAarD,cAAcmN,WAAWjW,QAAQ,IAC1F4nB,EAAK,UAAM,EAAKlN,QAAQgN,EAAS,IAA5B,OAAiCtb,EAAUtD,cAAcmN,WAAWjW,QAAQ,IAEjFkJ,EAAW,CACX4D,OAAQ,SACR7E,QAAQ,GAAD,OAAKA,EAAQwJ,OAAb,YAAuBxJ,EAAQyJ,UACtC1I,OAAO,IAAD,OAAMmH,EAAI0D,OAAV,YAAoB,EAAK6G,QAAQtK,EAAGyD,OAAQ,GAA5C,YAAkD8T,EAAlD,YAA8DC,GACpEpb,YAAa,GACbzC,cACAoG,IAAKA,EAAI0D,OACTzD,GAAIA,EAAGyD,OACPpH,cAAe7P,IAAS4R,UAAU4T,WAAWC,kBAC7ClW,eACAC,YACAG,aAAcqa,KAAMU,OAAOO,MAAM,CAAC3L,IAAK,GAAIC,IAAK,KAChD7P,UAAWsa,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAK,KAC7CvM,YAAa3H,EAAQmF,KAGzB,EAAKkE,aAAa/D,IAAlB,UAAyBrE,EAASF,SAAUiS,IAAI/R,GAC/CvL,MAAK,WACF,IAAIwd,EAAejS,EAASF,OAAOqH,MAAM,KACrC+K,EAAOL,OAAOM,SAASF,EAAa,GAAGnb,OAAO,IAC9C0I,EAAa,IAAIsE,KAAKb,GAE1BzD,EAAW4S,SAAS5S,EAAWG,WAAa,GAE5C,IAAK,IAAIa,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAI1B,EAAQ,CACRgB,OAAO,GAAD,OAAK,EAAK0R,QAAQU,EAAM,GAAxB,aAA+BD,EAAa,GAA5C,YAAkDjS,EAASF,OAAOhJ,OAAO,GAAzE,YAA+E,EAAK0a,QAAQhR,EAAG,IACrGX,SAAUG,EAASqD,aACnB7D,WAAY,IAAIsE,KAAKtE,EAAW4S,SAAS5S,EAAWG,WAAa,IACjE2H,WAAW,GAGf,EAAKc,aAAa/D,IAAlB,UAAyBrE,EAASF,SAAUyF,WAAW,UAAUlB,IAAjE,UAAwE,EAAKmN,QAAQhR,EAAG,KAAMuR,IAAIjT,OAGzGnK,OAAM,SAACC,GACJ+a,EAAO/a,OAnDN4L,EAAI,EAAGA,GAAK,GAAIA,IAAK,QA9CtB,4CA7IG,EAoPnBoe,UAAY,aApPO,EAwPnBC,mBAxPmB,sBAwPE,4BAAArnB,EAAA,6DACbyQ,EAAY,GAEhBpT,QAAQC,IAAI,4BAHK,SAKX,EAAKsT,aAAahE,MACvB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEfiO,EAAU5T,KAAK,CACX+K,GAAIiF,EAAIjF,GACRU,OAAQ9F,EAAK8F,OACbf,QAAS/E,EAAK+E,QACd2H,YAAa1M,EAAK0M,YAClBxC,IAAKG,EAAIH,YAfJ,gCAoBV,IAAIuL,SAAQ,SAACC,EAASC,GACzB,IADqC,IAAD,WAC3BnP,GACL,IAAIR,EAAWiI,EAAUyV,KAAMU,OAAOC,OAAO,CAACrL,IAAK,EAAGC,IAAKhL,EAAU1H,OAAS,KAE1Eue,EAAS,CACTlgB,MAAO8e,KAAMvJ,KAAKmK,KAAK,EAAG,IAAIxa,MAC9BiL,WAAW,EACX2F,gBAAiB1U,EAASF,OAC1BqP,eAAgBnP,EAASjB,QACzB2H,YAAa1G,EAAS0G,YACtB1D,UAAU,GAAD,OAAK0a,KAAMK,QAAQC,OAAnB,YAA6BN,KAAMK,QAAQE,aACpD9U,OAAQuU,KAAMqB,MAAMC,QACpBpK,YAAa8I,KAAMqB,MAAME,YACzBjQ,eAAgBtb,IAAS4R,UAAU4T,WAAWC,mBAGlD,EAAK/M,kBAAkByC,IAAIiQ,GAC1BrqB,MAAK,SAAA4P,GACQ,KAAN7D,GAAUkP,EAAQ,gCAEzB/a,OAAM,SAACC,GACJ+a,EAAO/a,OApBN4L,EAAI,EAAGA,GAAK,GAAIA,IAAK,EAArBA,OArBI,2CAxPF,EAuSnB0e,aAvSmB,sBAuSJ,8BAAA1nB,EAAA,6DACPyQ,EAAY,GACZqQ,EAAQ,GAEZzjB,QAAQC,IAAI,sBAJD,SAML,EAAKsT,aAAahE,MACvB3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GAC3B,IAAIrK,EAAOqK,EAAIrK,OAEfiO,EAAU5T,KAAK,CACX+K,GAAIiF,EAAIjF,GACRU,OAAQ9F,EAAK8F,OACbf,QAAS/E,EAAK+E,QACd2H,YAAa1M,EAAK0M,YAClBxC,IAAKG,EAAIH,YAhBV,OAqBX+D,EAAUvD,QAAV,uCAAkB,WAAM1E,GAAN,SAAAxI,EAAA,sEACR,EAAK2U,SACF9D,MAAM,kBAAmB,KAAMrI,EAASF,QAExCsE,MACA3P,MAAK,SAAAya,GACFA,EAAGxK,SAAQ,SAAAL,GAAQ,IAAD,EACyDA,EAAIrK,OAArE6F,EADQ,EACRA,SAAU6W,EADF,EACEA,YAAalX,EADf,EACeA,WAAYsa,EAD3B,EAC2BA,aAAcpT,EADzC,EACyCA,YAEvD4R,EAAMjkB,KAAK,CACP+K,GAAIiF,EAAIjF,GACRS,WACA6W,cACAlX,aACAsa,eACApT,cACAxC,IAAKG,EAAIH,YAIpBvP,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MArBV,OAwBd0jB,EAAM5T,SAAQ,SAAA+R,GACV,IAAI0I,EAAW1I,EAAKC,YAAYjX,SAAS2B,eAAe,QAAS,CAAEH,KAAM,UAAWC,MAAO,UACvF0V,EAAU,CACVhY,MAAO8e,KAAMvJ,KAAKmK,KAAK,EAAG,IAAIxa,MAC9BkV,eAAgB,EAChBmG,UACAC,QAAQ,oFAAD,OAAmFD,GAC1FE,YAAa5I,EAAK5W,SAClB0X,MAAOd,EAAK5W,SACZ6X,aAAc5W,GAAeqC,QAAQsT,EAAK5W,UAC1CkP,WAAW,EACX2F,gBAAiB1U,EAASF,OAC1BqP,eAAgBnP,EAASjB,QACzB2H,YAAa1G,EAAS0G,YACtBsI,eAAgBtb,IAAS4R,UAAU4T,WAAWC,mBAIlD,EAAKJ,YAAYlK,IAAI+H,GACpBniB,MAAK,SAAA4P,GACFoS,EAAKvS,IAAIrJ,OAAO,CAAEue,WAAW,OAEhCzkB,OAAM,SAACC,UA9CE,2CAAlB,uDArBW,2CAvSI,EAkXnB0qB,UAAY,WACR,IAAIC,EAAS,EAAKC,SAAS,EAAKtT,UAC5BuT,EAAO,EAAKD,SAAS,EAAKjC,QAC1BmC,EAAY,EAAKF,SAAS,EAAKvT,aAC/B0T,EAAa,EAAKH,SAAS,EAAKpX,aAAc,UAC9CwX,EAAS,EAAKJ,SAAS,EAAKrT,UAGhC,OADAtX,QAAQC,IAAI,8BACL,IAAI2a,SAAQ,SAACC,EAASC,GACzBF,QAAQoQ,IAAI,CAACN,EAAQE,EAAMC,EAAWC,EAAYC,IACjDnrB,MAAK,SAAA8C,GACF1C,QAAQC,IAAI,qCACZ4a,EAAQnY,MAEX5C,OAAM,SAAAC,GACH+a,EAAO/a,UAjYA,EAsYnB4qB,SAAW,SAACtb,EAAK4b,GAEb,OADAjrB,QAAQC,IAAR,qBAA0BoP,EAAI6b,OACvB,IAAItQ,SAAQ,SAACC,EAASC,GACzBzL,EAAIE,MACH3P,MAAK,SAAAyV,GACFA,EAAcxF,SAAQ,SAASL,GACvByb,GACA5b,EAAIG,IAAIA,EAAIjF,IAAImG,WAAWua,GAC1B1b,MACA3P,MAAK,SAAAya,GACFA,EAAGxK,SAAQ,SAAAsb,GACP9b,EAAIG,IAAIA,EAAIjF,IAAImG,WAAWua,GAAQzb,IAAI2b,EAAG5gB,IAAI0Q,eAK1D5L,EAAIG,IAAIA,EAAIjF,IAAI0Q,YAGpBJ,EAAQ,aAvZhB,EAAKrX,KAAOqlB,KAAMuC,KAAK,wCAEvB,EAAK3a,UAAY7R,EAAI6R,YAErB,EAAK4G,SAAW,EAAK5G,UAAUC,WAAW,SAC1C,EAAKgY,OAAS,EAAKjY,UAAUC,WAAW,OACxC,EAAK0G,YAAc,EAAK3G,UAAUC,WAAW,YAC7C,EAAK6C,aAAe,EAAK9C,UAAUC,WAAW,aAC9C,EAAK4G,SAAW,EAAK7G,UAAUC,WAAW,SAC1C,EAAK6G,kBAAoB,EAAK9G,UAAUC,WAAW,kBACnD,EAAKwT,YAAc,EAAKzT,UAAUC,WAAW,YAE7C,EAAKhS,MAAQ,CACTmX,MAAO,GACPyT,IAAK,GACLtT,SAAU,GACV5C,UAAW,GACXqQ,MAAO,IAnBI,E,gEAwBfzjB,QAAQC,IAAI,wB,+BAuYZ,OACI,oCACI,4BAAQ3C,QAASC,KAAKgrB,UAAtB,aACA,4BAAQjrB,QAASC,KAAKktB,WAAtB,cACA,4BAAQntB,QAASC,KAAKkrB,iBAAtB,0B,GAraGjqB,a,SCmBb6sB,G,kDAEF,WAAY7tB,GAAO,IAAD,6BACd,cAAMA,GAENoB,EAAIc,OAAO4rB,oBAAmB,SAAAvtB,GAC1B,EAAKP,MAAM+B,SAASwD,EAAchF,OAJxB,E,uDASd,OAAOR,KAAKC,MAAMO,KAAKA,O,+BAKvB,OACI,kBAAC,KAAD,CAAiBwtB,QAAUhuB,KAAKC,MAAM+tB,SAClC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACN,KAAK,QAAQO,UAAWnD,KACrC,kBAAC,IAAD,CAAOkD,OAAK,EAACN,KAAK,SAASO,UAAWjpB,KACpCjF,KAAKmuB,WAAa,KAAO,kBAAC,IAAD,CAAUC,GAAG,WACxC,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOH,OAAK,EAACN,KAAK,IAAIO,UAAWrS,KACjC,kBAAC,IAAD,CAAOoS,OAAK,EAACN,KAAK,YAAYO,UAAWlR,KACzC,kBAAC,IAAD,CAAOiR,OAAK,EAACN,KAAK,aAAa5S,OAAQ,kBAAM,kBAAC,GAAD,SAC7C,kBAAC,IAAD,CAAOkT,OAAK,EAACN,KAAK,SAASO,UAAW1D,KACtC,kBAAC,IAAD,CAAOyD,OAAK,EAACN,KAAK,YAAYO,UAAWvE,KACzC,kBAAC,IAAD,CAAOsE,OAAK,EAACN,KAAK,kBAAkBO,UAAWtL,Y,GA5BlD3hB,aA0CNC,oBANf,SAAyBC,EAAOC,GAC5B,MAAO,CACHZ,KAAMW,EAAMX,QAILU,CAAyB4sB,ICvDpBO,QACW,cAA7Bza,OAAOpP,SAAS8pB,UAEe,UAA7B1a,OAAOpP,SAAS8pB,UAEhB1a,OAAOpP,SAAS8pB,SAASC,MACvB,2D,cCfS,QAAE/tB,KCHF,WACd,IADmCW,EACpC,uDAD4C,GAAIqtB,EAChD,uCACI,OAAQA,EAAO1pB,MACX,IAAK,SACD,MAAO,CAAEtE,KAAMguB,EAAOhuB,MAC1B,QACI,OAAOW,K,mCCUoB6sB,G,UCPjCA,GAAUS,eAEVC,IDKiCV,GCLVA,GDOlBW,aAPS,SAACX,GAAD,OAAaY,aAAgB,6BAC1CC,IADyC,IAE5CC,OAAQC,aAAcf,MAMlBgB,CAAYhB,IACZiB,aACIC,aAAgBC,aAAiBnB,KACjCoB,KAAa,WCTzBC,IAAStU,OACL,kBAAC,IAAD,CAAU2T,MAAQA,IACd,kBAAC,GAAD,CAAQV,QAASA,MAErBha,SAASsb,eAAe,SJkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBptB,MAAK,SAAAqtB,GACJA,EAAaC,gBAEdptB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMiD,a,iCKzI5B,mDAAImqB,EAAkB,SAACC,GACnB,MAAM,GAAN,OAAUA,EAAIve,OAAO,GAAGnE,eAAxB,OAAwC0iB,EAAIxhB,MAAM,KAGtD,SAASyhB,EAAS7mB,GAEd,OAAOA,GAEH,KAAK,EAAG,MAAO,KACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,QACf,QAAS,MAAO,IAIxB,SAAS8mB,EAAQ9mB,GAEb,IAAI+mB,EAAS/hB,KAAKgiB,MAAMhnB,EAAI,IACxBinB,EAASjnB,EAAgB,GAAT+mB,EAEpB,OAAOA,GAEH,KAAK,EACD,OAAOE,GAEH,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,UACf,KAAK,EAAG,MAAO,SACf,QAAS,MAAO,QAAUJ,EAASI,GAE3C,KAAK,EACD,OAAOA,GAEH,KAAK,EAAG,MAAO,SACf,QAAS,MAAO,SAAWJ,EAASI,GAE5C,KAAK,EAAG,OAAOC,EAAS,UAAWD,GACnC,KAAK,EAAG,OAAOC,EAAS,WAAYD,GACpC,KAAK,EAAG,OAAOC,EAAS,YAAaD,GACrC,KAAK,EAAG,OAAOC,EAAS,UAAWD,GACnC,KAAK,EAAG,OAAOC,EAAS,UAAWD,GACnC,KAAK,EAAG,OAAOC,EAAS,UAAWD,GACnC,KAAK,EAAG,OAAOC,EAAS,UAAWD,GACnC,KAAK,EAAG,OAAOJ,EAASI,GACxB,QAAS,MAAO,IAIxB,SAASC,EAASC,EAAQC,GACtB,OAAIA,EAAc,EACXD,EAAS,MAAQN,EAASO,GAE1BD,EAGX,SAASE,EAASrnB,GACd,IAAIsnB,EAAWtiB,KAAKgiB,MAAMhnB,EAAM,KAC5BunB,EAAUvnB,EAAkB,IAAXsnB,EAErB,OAAOA,GAEH,KAAK,EACD,OAAIC,EAAU,EACH,UAAYT,EAAQS,GACxB,OACX,KAAK,EAAG,MAAO,cAAgBT,EAAQS,GACvC,KAAK,EAAG,MAAO,eAAiBT,EAAQS,GACxC,KAAK,EAAG,MAAO,iBAAmBT,EAAQS,GAC1C,KAAK,EAAG,MAAO,cAAgBT,EAAQS,GACvC,KAAK,EAAG,MAAO,eAAiBT,EAAQS,GACxC,KAAK,EAAG,MAAO,eAAiBT,EAAQS,GACxC,KAAK,EAAG,MAAO,eAAiBT,EAAQS,GACxC,KAAK,EAAG,MAAO,eAAiBT,EAAQS,GACxC,QAAS,OAAOT,EAAQS,IAIhC,SAASC,EAAQxnB,EAAKynB,EAASC,EAAaC,GACxC,IAAIC,EAAU5iB,KAAKgiB,MAAMhnB,EAAMynB,GAC3BI,EAAQ7nB,EAAO4nB,EAAUH,EAEzBK,EAAS,GAWb,OATIF,EAAU,IAENE,EADAF,EAAU,EACDP,EAASO,GAAW,IAAMD,EAE1BD,GAEbG,EAAQ,IACRC,GAAU,IAEPA,EAiBX,SAASC,EAAS/nB,GACd,IAAIynB,EAAU,IAEVI,EAAQ7nB,EADEgF,KAAKgiB,MAAMhnB,EAAMynB,GACFA,EAEzBO,EAAcR,EAAQxnB,EAAKynB,EAAS,kBAAgB,eACpDQ,EApBR,SAAejoB,GACX,IAAIynB,EAAU,IAEVI,EAAQ7nB,EADEgF,KAAKgiB,MAAMhnB,EAAMynB,GACFA,EAEzBQ,EAAWT,EAAQxnB,EAAKynB,EAAS,SAAU,OAC3CS,EAAcb,EAASQ,GAE3B,MAAgB,KAAbI,EACQC,EAEJD,EAAW,IAAMC,EASTC,CAAMN,GAErB,MAAmB,KAAhBG,EACQC,EAEJD,EAAc,IAAMC,EAKhB,SAASG,EAAcpoB,GAAqB,IAAhBqoB,IAAe,yDAClD1pB,EAAO,CACP2Q,OAAQtP,EACRsoB,QAAStjB,KAAKgiB,MAAMhnB,GACpBuoB,SAAavjB,KAAK4Y,MAAY,IAAN5d,GAAiC,IAAlBgF,KAAKgiB,MAAMhnB,GAClDwoB,eAAgB,GAChBC,mBAAoB,aACpBC,qBAAsB,YAK1B,OAFA/pB,EAAK6pB,eAAL,UAAyB7pB,EAAK4pB,SAA9B,QAEKF,EAEe,IAAjB1pB,EAAK2pB,QACE,QAAN,OAAe3pB,EAAK6pB,eAApB,YAAsC7pB,EAAK8pB,oBAC1B,IAAjB9pB,EAAK2pB,QACC,GAAN,OAAU3B,EAAgBoB,EAASppB,EAAK2pB,UAAxC,YAAqD3pB,EAAK6pB,eAA1D,YAA4E7pB,EAAK+pB,sBAEjF,UAAU/B,EAAgBoB,EAASppB,EAAK2pB,UAAxC,YAAqD3pB,EAAK6pB,eAA1D,YAA4E7pB,EAAK8pB,oBAPjE9B,EAAgBoB,EAASppB,EAAK2pB,Y","file":"static/js/main.9d87208c.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Layout, Menu, Avatar } from \"antd\";\nimport { Row, Col } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst { Header } = Layout;\nconst { SubMenu } = Menu;\n\nclass PageHeader extends Component\n{\n    render()\n    {\n        return (\n            <>\n                <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <Row>\n\n                        <Col span={7} style={ { cursor: 'pointer' } } onClick={ this.props.goHome }>\n                            Logo\n                            {/* <img src={ process.env.PUBLIC_URL + \"/logo home.jpg\" } alt=\"Logo\" width=\"200px\" /> */}\n                        </Col>\n                        <Col span={5} offset={12}>\n                            <Menu theme=\"light\" style={ { textAlign: \"right\" } } mode=\"horizontal\">\n                                {/* <Menu.Item key=\"1\">\n                                    Nombre de usuario &nbsp;\n                                    <Avatar icon={<UserOutlined />} />\n                                </Menu.Item> */}\n                                <SubMenu title={\n                                    <Fragment>\n                                        <span> { this.props.user.user.displayName ? this.props.user.user.displayName : this.props.user.user.email } </span>\n                                        <Avatar style={{ marginLeft: 8 }} icon={<UserOutlined />} />\n                                    </Fragment>\n                                }>\n                                    <Menu.Item onClick={this.props.logOut} key=\"user:1\">Cerrar sesión</Menu.Item>\n                                </SubMenu>\n                            </Menu>\n                        </Col>\n                    </Row>\n                </Header>\n            </>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownState){\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(PageHeader);\n","import * as firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB3d7zkpF_Nh9LpDhOD0Fnt_p0PwFE_H98\",\r\n    authDomain: \"turbomega-9c7f7.firebaseapp.com\",\r\n    databaseURL: \"https://turbomega-9c7f7.firebaseio.com\",\r\n    projectId: \"turbomega-9c7f7\",\r\n    storageBucket: \"turbomega-9c7f7.appspot.com\",\r\n    messagingSenderId: \"918088120293\",\r\n    appId: \"1:918088120293:web:994c5417055b746c2fe10c\",\r\n    measurementId: \"G-G7S6Q94YYL\"\r\n\r\n    // apiKey: \"AIzaSyDK_pVP79jJPgXiF42T03WSZ9uoyqdwTKQ\",\r\n    // authDomain: \"tests-1871b.firebaseapp.com\",\r\n    // databaseURL: \"https://tests-1871b.firebaseio.com\",\r\n    // projectId: \"tests-1871b\",\r\n    // storageBucket: \"tests-1871b.appspot.com\",\r\n    // messagingSenderId: \"580204606804\",\r\n    // appId: \"1:580204606804:web:73ad4d0084ddf9b4a144c1\",\r\n    // measurementId: \"G-NDYK0WH8T7\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default app;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PageHeader from '../PageHeader';\r\nimport { push } from 'connected-react-router';\r\nimport app from \"../../firebaseConfig\";\r\n\r\nclass HeaderNavigation extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.goHome = this.goHome.bind(this);\r\n        this.logOut = this.logOut.bind(this);\r\n    }\r\n\r\n    goHome = () => this.props.dispatch(push('/'));\r\n\r\n    async logOut(){\r\n        await app\r\n            .auth()\r\n            .signOut()\r\n            .then( result => {\r\n                this.props.dispatch(push('/login'))\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <PageHeader\r\n                goHome={this.goHome}\r\n                logOut={this.logOut}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HeaderNavigation);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu } from \"antd\";\r\n\r\nimport {\r\n    FileTextOutlined,\r\n    DollarOutlined,\r\n    SmileOutlined,\r\n    ToolOutlined,\r\n    HomeOutlined,\r\n    FileDoneOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport default class Sidebar extends Component {\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Sider\r\n                collapsible\r\n                collapsed={this.state.collapsed}\r\n                onCollapse={this.onCollapse}\r\n                style={ { marginTop: \"65px\" } }\r\n                theme=\"light\"\r\n            >\r\n                <Menu theme=\"light\" defaultSelectedKeys={[\"home\"]} selectedKeys={[this.props.selected]} mode=\"inline\">\r\n                    <Menu.Item key=\"inicio\" icon={<HomeOutlined />} onClick={this.props.goHome}>\r\n                        Inicio\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"contratos\" icon={<FileTextOutlined />} onClick={this.props.goContracts}>\r\n                        Contratos\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"pagos\" icon={<DollarOutlined />} onClick={this.props.goPayments}>\r\n                        Pagos\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"clientes\" icon={<SmileOutlined />} onClick={this.props.goClients}>\r\n                        Clientes\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"facturas\" icon={<FileDoneOutlined />} onClick={this.props.goInvoices}>\r\n                        Facturación\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"mantenimientos\" icon={<ToolOutlined />} onClick={this.props.goMaintenances}>\r\n                        Mantenimientos\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Sidebar from '../Sidebar';\r\nimport { push } from 'connected-react-router';\r\n\r\nclass SidebarNavigation extends Component\r\n{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.goHome = this.goHome.bind(this);\r\n        this.goNewPayment = this.goNewPayment.bind(this);\r\n        this.goClients = this.goClients.bind(this);\r\n        this.goContracts = this.goContracts.bind(this);\r\n        this.goPayments = this.goPayments.bind(this);\r\n        this.goInvoices = this.goInvoices.bind(this);\r\n        this.goMaintenances = this.goMaintenances.bind(this);\r\n    }\r\n\r\n    goHome = () => this.props.dispatch(push('/'));\r\n    goNewPayment = () => this.props.dispatch(push('/new-payment'));\r\n    goClients = () => this.props.dispatch(push('/clientes'));\r\n    goContracts = () => this.props.dispatch(push('/contratos'));\r\n    goPayments = () => this.props.dispatch(push('/pagos'));\r\n    goInvoices = () => this.props.dispatch(push('/facturas'));\r\n    goMaintenances = () => this.props.dispatch(push('/mantenimientos'));\r\n\r\n    render() {\r\n        return (\r\n            <Sidebar\r\n                goHome={this.goHome}\r\n                goNewPayment={this.goNewPayment}\r\n                goClients={this.goClients}\r\n                goContracts={this.goContracts}\r\n                goPayments={this.goPayments}\r\n                goInvoices={this.goInvoices}\r\n                goMaintenances={this.goMaintenances}\r\n                selected={this.props.selected}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SidebarNavigation);\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./styles/custom.css\";\r\nimport \"./styles/line-awesome.min.css\";\r\nimport { Layout } from \"antd\";\r\n\r\n\r\nimport HeaderNavigation from './components/navigation/HeaderNavigation';\r\nimport SidebarNavigation from \"./components/navigation/SidebarNavigation\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass App extends Component\r\n{\r\n    render(){\r\n        return (\r\n            <>\r\n                <Layout style={{ minHeight: \"100vh\" }}>\r\n                    <HeaderNavigation />\r\n                    <Layout className=\"site-layout\">\r\n                        <SidebarNavigation selected={this.props.location.pathname.substr(1) || 'inicio'} />\r\n                        <Content style={{ margin: \"75px 16px\" }}>\r\n                            { this.props.children }\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export function login(user) {\r\n    return { type: 'LOG_IN', user };\r\n}\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'; /** Sirve para transferir state de redux a componentes como si fueran props */\nimport app from \"../firebaseConfig\";\nimport * as actions from '../actions/userActions';\n\nimport { message, Form, Input, Button, Checkbox, Row, Col, Card, Layout, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { push } from 'connected-react-router';\n\nconst { Title } = Typography;\n\nclass Login extends Component\n{\n    // constructor(props){\n    //     super(props);\n\n    //     console.log(app);\n    //     console.log(props.user);\n    // }\n\n    signIn = async (values) => {\n        const { usuario, clave } = values;\n        await app\n            .auth()\n            .signInWithEmailAndPassword(usuario, clave)\n            .then(result => {\n                this.props.dispatch(actions.login(result.user)); // Asignar el usuario en el state\n                this.props.dispatch(push('/'));\n            })\n            .catch(error => {\n                message.error(`Los datos ingresados son inválidos`);\n                console.log(error.message);\n            });\n    }\n\n    render(){\n        return (\n            <>\n                <Layout className=\"layout\">\n                    <Row justify=\"space-around\" align=\"middle\">\n                        <Col xs={20} sm={10} md={10} lg={6} xl={5} style={ { marginTop: \"25vh\" } }>\n                            <Row>\n                                <Col span={24}>\n                                    <Title style={ { textAlign: \"center\" } }>Login</Title>\n                                </Col>\n                            </Row>\n                            <Card>\n                                <Form\n                                    name=\"normal_login\"\n                                    className=\"login-form\"\n                                    initialValues={{\n                                        remember: true,\n                                    }}\n                                    onFinish={this.signIn}\n                                    >\n                                    <Form.Item\n                                        name=\"usuario\"\n                                        rules={[\n                                        {\n                                            required: true,\n                                            message: '¡Introduzca un nombre de usuario!',\n                                        },\n                                        ]}\n                                    >\n                                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Nombre de usuario\" />\n                                    </Form.Item>\n                                    <Form.Item\n                                        name=\"clave\"\n                                        rules={[\n                                        {\n                                            required: true,\n                                            message: '¡Introduzca una contraseña!',\n                                        },\n                                        ]}\n                                    >\n                                        <Input\n                                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                        type=\"password\"\n                                        placeholder=\"Contraseña\"\n                                        />\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                                            <Checkbox>No cerrar sesión</Checkbox>\n                                        </Form.Item>\n                                    </Form.Item>\n\n                                    <Form.Item>\n                                        <Button type=\"primary\" block htmlType=\"submit\" className=\"login-form-button\">\n                                            Acceder\n                                        </Button>\n                                    </Form.Item>\n                                </Form>\n                            </Card>\n                        </Col>\n                    </Row>\n                </Layout>\n            </>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state, ownProps){\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React, { Component, Fragment } from 'react';\r\n\r\nimport { Card, Row, Col, Space } from 'antd';\r\nimport {\r\n    FileTextOutlined,\r\n    DollarOutlined,\r\n    SmileOutlined,\r\n    ToolOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst { Meta } = Card;\r\n\r\nclass DashboardOptions extends Component\r\n{\r\n    render(){\r\n        return (\r\n            <Row gutter={24}>\r\n                <Col lg={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        bodyStyle={{\r\n                            padding: '45px 40px',\r\n                        }}\r\n                        style={ { cursor: 'pointer' } }\r\n                        onClick={this.props.goContracts}\r\n                    >\r\n                        <Space>\r\n                            <FileTextOutlined style={ { fontSize: \"64px\" } } />\r\n                            <Meta title={\r\n                                <Fragment>\r\n                                    <span style={ { fontSize: \"20px\" } }> Contratos </span>\r\n                                </Fragment>\r\n                            }\r\n                            description=\"Lista de contratos\" />\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        bodyStyle={{\r\n                            padding: '45px 40px',\r\n                        }}\r\n                        style={ { cursor: 'pointer' } }\r\n                        onClick={this.props.goPayments}\r\n                    >\r\n                        <Space>\r\n                            <DollarOutlined  style={ { fontSize: \"64px\" } } />\r\n                            <Meta title={\r\n                                <Fragment>\r\n                                    <span style={ { fontSize: \"20px\" } }> Pagos </span>\r\n                                </Fragment>\r\n                            }\r\n                            description=\"Pagos de clientes\" />\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        bodyStyle={{\r\n                            padding: '45px 40px',\r\n                        }}\r\n                        style={ { cursor: 'pointer' } }\r\n                        onClick={this.props.goClients}\r\n                    >\r\n                        <Space>\r\n                            <SmileOutlined  style={ { fontSize: \"64px\" } } />\r\n                            <Meta title={\r\n                                <Fragment>\r\n                                    <span style={ { fontSize: \"20px\" } }> Clientes </span>\r\n                                </Fragment>\r\n                            }\r\n                            description=\"Lista de clientes\" />\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={6}>\r\n                    <Card\r\n                        bordered={false}\r\n                        bodyStyle={{\r\n                            padding: '45px 40px',\r\n                        }}\r\n                        style={ { cursor: 'pointer' } }\r\n                        onClick={this.props.goMaintenances}\r\n                    >\r\n                        <Space>\r\n                            <ToolOutlined  style={ { fontSize: \"64px\" } } />\r\n                            <Meta title={\r\n                                <Fragment>\r\n                                    <span style={ { fontSize: \"20px\" } }> Mantenimientos </span>\r\n                                </Fragment>\r\n                            }\r\n                            description=\"Ver mantenimientos\" />\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashboardOptions;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\nimport DashboardOptions from '../dashboard/DashboardOptions';\r\n\r\n\r\nclass DashboardNavigation extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.goClients = this.goClients.bind(this);\r\n        this.goContracts = this.goContracts.bind(this);\r\n        this.goPayments = this.goPayments.bind(this);\r\n        this.goMaintenances = this.goMaintenances.bind(this);\r\n    }\r\n\r\n    goClients = () => this.props.dispatch(push('/clientes'));\r\n    goContracts = () => this.props.dispatch(push('/contratos'));\r\n    goPayments = () => this.props.dispatch(push('/pagos'));\r\n    goMaintenances = () => this.props.dispatch(push('/mantenimientos'));\r\n\r\n    render(){\r\n        return (\r\n            <DashboardOptions\r\n                goClients={this.goClients}\r\n                goContracts={this.goContracts}\r\n                goPayments={this.goPayments}\r\n                goMaintenances={this.goMaintenances}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps){\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardNavigation);\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nclass Tabla extends React.Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            pagination: { position: 'bottom' },\r\n            columns: this.props.columnas,\r\n            data: this.props.datos,\r\n\r\n            bordered: false,\r\n            loading: this.props.loading,\r\n            size: 'default',\r\n            title: () => this.props.titulo,\r\n            showHeader: true,\r\n            top: 'none',\r\n            bottom: 'bottonRight'\r\n        }\r\n    }\r\n\r\n    // Permite que la información se actualice cuando cambia en el componente padre\r\n    static getDerivedStateFromProps(props, state) {\r\n        let update = {};\r\n\r\n        if (props.loading !== state.loading) {\r\n            update.loading = props.loading;\r\n        }\r\n\r\n        if (props.data !== state.data) {\r\n            update.data = props.data\r\n        }\r\n\r\n        return update;\r\n    }\r\n\r\n    render() {\r\n        const { ...state } = this.state;\r\n\r\n        const tableColumns = state.columns.map(item => ({ ...item }));\r\n\r\n        return (\r\n            <Table\r\n                { ...this.state }\r\n                pagination={{ size: 'small', defaultPageSize: 20, position: ['none', 'topRight'] }}\r\n                columns={ tableColumns }\r\n                dataSource={ state.data }\r\n                size=\"small\"\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Tabla;\r\n","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, Image, Font } from '@react-pdf/renderer';\n\nFont.register({ family: 'Courier New', src: `${process.env.PUBLIC_URL}/cour.ttf` });\nFont.register({ family: 'Courier New Bold', src: `${process.env.PUBLIC_URL}/courbd.ttf` });\n\nconst months = [\n    'enero',\n    'febrero',\n    'marzo',\n    'abril',\n    'mayo',\n    'junio',\n    'julio',\n    'agosto',\n    'septiembre',\n    'octubre',\n    'noviembre',\n    'diciembre'\n]\n\nconst verCodigoCuota = code => {\n    return `${code.substr(0, 4)} ${code.substr(4, 4)} ${code.substr(8, 4)} ${code.substr(12, 4)} ${code.substr(16, 4)}`;\n}\n\nconst verFecha = fecha => {\n    fecha = fecha.toDate();\n    return `${fecha.getDate()}-${months[fecha.getMonth()]}-${fecha.getFullYear()}`;\n}\n\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\n\nconst formatoDinero = num => new Intl.NumberFormat(\"es-SV\", {style: \"currency\", currency: \"USD\"}).format(num);\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n        marginTop: 22,\n        marginLeft: 2,\n        right: -2,\n    },\n    firstBaseContainer: {\n        borderWidth: 0.4,\n        borderColor: '#000',\n        marginTop: 23,\n        paddingTop: 5,\n        paddingBottom: 10,\n    },\n    baseContainer: {\n        borderWidth: 0.4,\n        borderColor: '#000',\n        marginTop: -1,\n        paddingTop: 5,\n        paddingBottom: 10,\n    },\n    absoluteVertical: {\n        position: 'absolute',\n        marginTop: -12,\n        marginLeft: -5,\n        height: 230,\n        borderWidth: 0.3,\n        borderStyle: 'dashed',\n        borderColor: '#000'\n    },\n    entryContainer: {\n        marginTop: 5,\n        marginLeft: 108,\n        marginRight: 7,\n        borderWidth: 1,\n        borderColor: '#000',\n        borderRadius: 4,\n        padding: 5,\n        paddingRight: 0\n    },\n    cardContainer: {\n        flexDirection: 'row',\n        marginTop: 1,\n    },\n    leftColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 320,\n    },\n    rightColumn: {\n        flexDirection: 'column',\n        width: 157,\n        marginTop: -6,\n        padding: 5,\n        paddingTop: 8,\n        borderLeft: 1,\n        borderBottom: 1,\n        borderColor: '#000'\n    },\n    flowFlex: {\n        flexDirection: 'row',\n    },\n    barcode: {\n        height: 45,\n        width: 200,\n        marginLeft: 5,\n        marginTop: 10\n    },\n    barcodeText: {\n        fontSize: 10,\n        marginLeft: 35,\n        width: 140,\n        marginTop: 58,\n        position: 'absolute'\n    },\n    title: {\n        fontSize: 10,\n        textDecoration: 'none',\n        lineHeight: 1.2,\n        fontWeight: 'bold',\n        marginTop: 5,\n        width: 190,\n    },\n    subtitle: {\n        fontSize: 8,\n        fontWeight: 'bold',\n        width: 190,\n        textAlign: 'center'\n    },\n    textNumeroCuota: {\n        fontSize: 11,\n        color: 'black',\n        lineHeight: 1.2,\n        fontWeight: 'bold',\n        width: 100,\n        textAlign: 'right',\n    },\n    numeroCuota: {\n        fontSize: 11.5,\n        fontFamily: 'Courier New Bold',\n        color: 'black',\n        lineHeight: 1.2,\n        textAlign: 'center',\n        width: 30,\n    },\n    datoPago: {\n        fontSize: 11,\n        color: 'black',\n        lineHeight: 1.6,\n        textDecoration: 'none',\n        width: 72,\n    },\n    valorPago: {\n        fontSize: 10,\n        color: 'black',\n        textDecoration: 'none',\n        width: 68,\n        height: 14,\n        border: 1,\n        paddingLeft: 10,\n        borderColor: '#000'\n    },\n    fechaVencimiento: {\n        fontSize: 9,\n        color: 'red',\n        textDecoration: 'none',\n        width: 95,\n    },\n    customerContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    field: {\n        fontSize: 11,\n        marginTop: 0,\n        color: 'black',\n        textDecoration: 'none',\n        width: 45,\n        textAlign: 'left',\n    },\n    duiField: {\n        fontSize: 11,\n        marginTop: 7,\n        color: 'black',\n        lineHeight: 1.3,\n        textDecoration: 'none',\n        width: 25,\n        textAlign: 'left',\n    },\n    value: {\n        fontFamily: 'Courier New',\n        fontSize: 11,\n        padding: 2,\n        width: 230,\n        height: 20,\n        paddingLeft: 5,\n        border: 1,\n        borderColor: '#000'\n    },\n    duiValue: {\n        fontFamily: 'Courier New',\n        fontSize: 11,\n        padding: 2,\n        width: 110,\n        height: 20,\n        paddingLeft: 5,\n        border: 1,\n        borderColor: '#000',\n        marginTop: 5\n    },\n    leftDataColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 240,\n    },\n    rightDataColumn: {\n        border: 1,\n        height: 140,\n        width: 235,\n    }\n});\n\nconst Entry = props => {\n    const { cuota, cliente, dui, tipo } = props;\n\n    return (\n        <View break={cuota.next} style={cuota.next ? styles.firstBaseContainer : styles.baseContainer}>\n            <View style={styles.entryContainer}>\n                <View style={styles.absoluteVertical} />\n                <View style={styles.cardContainer}>\n                    <View style={styles.leftColumn}>\n                        <Text style={{ width: 90, height: 40 }}>Logo</Text>\n                        {/* <Image\n                            src={process.env.PUBLIC_URL + '/turbo-mega-reporte.png'}\n                            style={{ width: 90, height: 40 }}\n                        /> */}\n                        <View style={{ paddingLeft: 5 }}>\n                            <Text style={styles.title}>Pago de Servicio de Internet Residencial</Text>\n                            <View style={styles.flowFlex}>\n                                <Text style={styles.textNumeroCuota}>Cuota N°:</Text>\n                                <Text style={styles.numeroCuota}>{zeroPad(cuota.id, 3)}</Text>\n                            </View>\n                            <Text style={styles.subtitle}>{ tipo.toUpperCase() }</Text>\n                        </View>\n                    </View>\n                    <View style={styles.rightColumn}>\n                        <View style={styles.flowFlex}>\n                            <Text style={styles.datoPago}>Vencimiento: </Text>\n                            <Text style={styles.fechaVencimiento}>{verFecha(cuota.fecha_pago)}</Text>\n                        </View>\n                        <View style={styles.flowFlex}>\n                            <Text style={styles.datoPago}>Pago Puntual: </Text>\n                            <Text style={styles.valorPago}>{formatoDinero(cuota.cantidad)} </Text>\n                        </View>\n                        <View style={styles.flowFlex}>\n                            <Text style={styles.datoPago}>Pago Tardío: </Text>\n                            <Text style={styles.valorPago}>{formatoDinero(cuota.cantidad + 3)} </Text>\n                        </View>\n                    </View>\n                </View>\n                <View style={styles.cardContainer}>\n                    <View style={styles.leftDataColumn}>\n                        <View>\n                            <View style={styles.customerContainer}>\n                                <Text style={styles.field}>Cliente: </Text>\n                            </View>\n                            <View style={styles.customerContainer}>\n                                <Text style={styles.value}>{cliente}</Text>\n                            </View>\n                            <View style={styles.customerContainer}>\n                                <Text style={styles.duiField}>DUI: </Text>\n                                <Text style={styles.duiValue}>{dui}</Text>\n                            </View>\n                            <View style={styles.customerContainer}>\n                                <Image\n                                    style={styles.barcode}\n                                    src={`https://bwipjs-api.metafloor.com/?bcid=code128&text=${cuota.codigo}&scale=2`}\n                                />\n                                <Text style={styles.barcodeText}>{verCodigoCuota(cuota.codigo)}</Text>\n                            </View>\n                            <View style={styles.customerContainer}>\n                                <Text style={{ fontSize: 8.2, marginTop: 20 }}>\n                                    Evita recargos haciendo tus pagos dentro de la fecha establecida\n                                </Text>\n                            </View>\n                        </View>\n                    </View>\n                    <View>\n                        <View style={styles.rightDataColumn} />\n                    </View>\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst ordenarCuotas = cuotas => {\n    let result = []\n    let chunks = []\n    let next = false;\n    let cntPages = Math.ceil(cuotas.length / 3);\n\n    for (let i = 0; i < cntPages * 3; i += cntPages) {\n        chunks.push(cuotas.slice(i, i + cntPages))\n    }\n\n    for (let i = 0; i < cntPages; i++) {\n        for (let j = 0; j < 3; j++) {\n            if (chunks[j][i]) {\n                result.push({\n                    ...chunks[j][i],\n                    next\n                })\n            }\n            next = false;\n        }\n        next = true;\n    }\n\n    return result;\n}\n\nconst Talonario = props => {\n    let { contrato, cuotas, tipo } = props;\n    let cuotasOrdenadas = [];\n\n    cuotasOrdenadas = ordenarCuotas(cuotas);\n\n    return (\n        <Document>\n            <Page size=\"LETTER\" style={{ flexDirection: 'row' }} wrap>\n                <View style={styles.mainContainer}>\n                    {\n                        cuotasOrdenadas.map((cuota) =>\n                            <Entry\n                                key={cuota.id}\n                                cuota={cuota}\n                                cliente={contrato.cliente}\n                                dui={contrato.dui_cliente}\n                                tipo={tipo}\n                            />\n                        )\n                    }\n                </View>\n            </Page>\n        </Document>\n    );\n}\n\nexport default Talonario;\n","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet, Image, Font } from '@react-pdf/renderer';\n\nconst NumerosALetras = require('../../NumerosALetras');\n\nFont.register({ family: 'Calibri Light', src: `${process.env.PUBLIC_URL}/calibril.ttf` });\nFont.register({ family: 'Calibri Bold', src: `${process.env.PUBLIC_URL}/calibrib.ttf` });\n\nconst formatoDinero = num => new Intl.NumberFormat(\"es-SV\", {style: \"currency\", currency: \"USD\"}).format(num);\n\nconst opcFecha = { year: \"numeric\", month: \"long\" };\n\nconst verFecha = (fecha) => fecha.toDate().toLocaleString(\"es-SV\", opcFecha);\n\nconst styles = StyleSheet.create({\n    body: {\n        paddingTop: 5,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n        fontFamily: 'Calibri Light'\n    },\n    header: {\n        marginHorizontal: 10,\n        marginBottom: 20,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    headerImage: {\n        width: 100,\n        height: 45,\n        opacity: '0.6',\n    },\n    headerText: {\n        fontSize: 9,\n        marginLeft: 'auto',\n        paddingVertical: 15,\n        marginRight: 0,\n        opacity: '0.6',\n    },\n    title: {\n        marginVertical: 5,\n        fontSize: 14,\n        fontFamily: 'Calibri Bold',\n        textAlign: 'center',\n        textDecoration: 'underline'\n    },\n    textContainer: {\n        marginTop: 15,\n        marginHorizontal: 48,\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n    },\n    text: {\n        fontSize: 11,\n        textAlign: 'justify',\n    },\n    textValue: {\n        fontFamily: 'Calibri Bold',\n        textDecoration: 'underline',\n    },\n    subtitle: {\n        width: '100%',\n        fontSize: 11,\n        marginVertical: 14,\n        fontFamily: 'Calibri Bold',\n        textDecoration: 'underline',\n    },\n    listContainer: {\n        marginVertical: 8,\n        marginLeft: 20,\n        flexDirection: 'row'\n    },\n    sublistContainer: {\n        marginVertical: 6,\n        marginLeft: 40,\n        flexDirection: 'row'\n    },\n    orderedListContainer: {\n        marginVertical: 5,\n        marginLeft: 55,\n        flexDirection: 'row'\n    },\n    otherListContainer: {\n        marginVertical: 5,\n        marginLeft: 75,\n        flexDirection: 'row'\n    },\n    itemDecoration: {\n        fontSize: 11,\n        width: 18,\n        // fontFamily: 'Calibri Bold'\n    },\n    listItem: {\n        width: '100%',\n        fontSize: 11,\n        fontFamily: 'Calibri Bold',\n    },\n    sublistItem: {\n        fontSize: 11,\n    },\n    orderedListItem: {\n        fontSize: 11\n    },\n    signContainer: {\n        marginTop: 100,\n        marginHorizontal: 45,\n        flexDirection: 'row'\n    },\n    signItem: {\n        fontFamily: 'Calibri Light',\n        fontSize: 10,\n        width: 250,\n        marginRight: 10,\n        flexDirection: 'col'\n    }\n});\n\nconst Contrato = props => {\n    let { contrato, cliente } = props;\n\n    return (\n        <Document>\n            <Page size=\"LETTER\" style={styles.body} wrap>\n                <View style={styles.header} fixed>\n                    <Text>\n                        Logo de negocio\n                    </Text>\n                    {/* <Image\n                        src={process.env.PUBLIC_URL + '/turbo-mega-reporte.png'}\n                        style={styles.headerImage}\n                    /> */}\n                    <Text style={styles.headerText}>\n                        Contrato de Servicios de Internet Inalámbrico\n                    </Text>\n                </View>\n                <Text style={styles.title}>\n                    CONTRATO DE PRESTACIÓN DE SERVICIOS DE INTERNET INALÁMBRICO\n                </Text>\n                <View style={styles.textContainer}>\n                    <Text style={styles.text}>\n                        Se hace constar por el presente Contrato,\n                        la prestación de servicios de conexión a internet\n                        via inalámbrica que suscriben por una parte a:&nbsp;\n                        <Text style={styles.textValue}>[Nombre]</Text>\n                        , identificado con DUI: N°&nbsp;\n                        <Text style={styles.textValue}>[DUI]</Text>\n                        , y N° DE REGISTRO TRIBUTARIO:&nbsp;\n                        <Text style={styles.textValue}>[NIT]</Text>\n                        , inscrito en el Registro de Contribuyentes, con domicilio en&nbsp;\n                        <Text style={styles.textValue}>[Dirección]</Text>\n                        , a quien en adelante se llamará&nbsp;\n                        <Text style={styles.textValue}>EL PROVEEDOR</Text>\n                        , por la otra parte,&nbsp;\n                        <Text style={styles.textValue}>{contrato.cliente}</Text>\n                        &nbsp;con N° de DUI:&nbsp;\n                        <Text style={styles.textValue}>{contrato.dui_cliente}</Text>\n                        , y con número de identificación tributaria (NIT):&nbsp;\n                        <Text style={styles.textValue}>{cliente.nit}</Text>\n                        , con domicilio en&nbsp;\n                        <Text style={styles.textValue}>{cliente.direccion}</Text>\n                        , a quien en adelante se llamará&nbsp;\n                        <Text style={styles.textValue}>EL CLIENTE</Text>&nbsp;\n                        en los términos y condiciones siguientes:\n                    </Text>\n                    <Text style={styles.subtitle}>\n                        PRIMERO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                            PARTES INVOLUCRADAS\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            •\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            EL PROVEEDOR, es un comerciante especializado en brindar servicios de <Text style={{ textDecoration: 'underline' }}>INTERNET INALAMBRICO</Text>\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            •\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            EL CLIENTE es un consumidor cuyo objeto es el uso personal del servicio\n                        </Text>\n                    </View>\n                    <Text style={styles.subtitle}>\n                        SEGUNDO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                            TIPO DE SERVICIO\n                        </Text>\n                    </View>\n                    <Text style={styles.text}>\n                        El objeto del presente contrato es pactar entre el&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>EL PROVEEDOR</Text>\n                        &nbsp;y&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>&nbsp;\n                        la contratación del servicio remunerado específico siguiente:\n                    </Text>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            •\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tServicios de conexión de internet a traves de red inalambrica, utilizando equipo de última tecnología.\n                        </Text>\n                    </View>\n                    <Text style={styles.subtitle}>\n                        TERCERO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                        \tVIGENCIA Y TIPO DE PRESTACIÓN\n                        </Text>\n                    </View>\n                    <Text style={styles.text}>\n                        El presente contrato tendrá vigencia desde&nbsp;\n                        <Text style={styles.textValue}>{verFecha(contrato.fecha_inicio)}</Text>\n                        &nbsp;hasta&nbsp;\n                        <Text style={styles.textValue}>{verFecha(contrato.fecha_fin)}</Text>\n                        , brindando el proveedor una velocidad de conexión inalámbrica de&nbsp;\n                        <Text style={styles.textValue}>\n                            {NumerosALetras.default(contrato.velocidad, false)}\n                            &nbsp;Megabits ({contrato.velocidad}) Mbps.\n                        </Text>\n                    </Text>\n                    <Text style={styles.subtitle}>\n                        CUARTO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                        \tCUOTAS\n                        </Text>\n                    </View>\n                    <Text style={styles.text}>\n                        La prestación pactada de común acuerdo que&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                        &nbsp;se compromete a pagar durante Diesiocho cuotas al&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>PROVEEDOR</Text>\n                        , es de&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>{NumerosALetras.default(contrato.precio_cuota)} américanos ({formatoDinero(contrato.precio_cuota)})</Text>\n                        , en concepto de pago por los servicios de conexión a internet inalámbrico.\n                    </Text>\n                    <Text style={styles.subtitle}>\n                        QUINTO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                        \tOBLIGACIONES\n                        </Text>\n                    </View>\n                    <Text style={styles.text}>\n                        Sin perjuicio de otras obligaciones expresamente estipuladas y/o derivadas del presente contrato, las partes tienen las siguientes obligaciones principales:\n                    </Text>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            •\n                        </Text>\n                        <Text style={styles.listItem}>\n                            PROVEEDOR:\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            1.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            Se compromete a brindar el equipo tecnológico necesario para la prestación del servicio de conexión inalambrica a internet.\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            2.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            Brindar el servicio de internet mensualmente para un numero de equipos ilimitados conectados simultaneamente (Telefonos, tablet, laptop y/o computadoras de escritorio) de uso personal\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            3.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            Se compromete a prestar el servicio de soporte en forma diligente, para lo cual podrá valerse de personal calificado.\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                4.\n                            </Text>\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                En caso de presentar fallas en el servicio, habrá un lapso de 3 dias hábiles para su reparación después de haber hecho el reporte de falla.\n                            </Text>\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                5.\n                            </Text>\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                En caso de fallas por desastres Naturales en los lugares de repetición la fecha de reparación sera indifinidad.\n                            </Text>\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            •\n                        </Text>\n                        <Text style={styles.listItem}>\n                            CLIENTE:\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            1.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                        \tSe compromete a cancelar el precio mensual contemplado en el presente contrato, en la ubicación asignada para ello, así como las fechas destinadas.\n                        </Text>\n                    </View>\n                    <View style={styles.otherListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            a.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            El servicio se cancelará mensualmente durante los {contrato.cant_cuotas} meses de vigencia del contrato entre los dias  1 y 3 de cada mes, en  la Agencia de: BANCO PROMERICA, sucursal Zacatecoluca, ubicado una cuadra abajo de La Curacao\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            2.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                        \tCumplir con las clausulas que lo comprometen como USUARIO de los servicios de internet prestados por EL PROVEEDOR que estan suscritas en este contrato.\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            3.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            El Cliente esta en la obligacion de desconectar los equipos de la energia, cuando hayan tormentas electricas, esto debido a que los equipos son sencibles a descargas electricas (Rayos) para evitar que estos se quemen, de no acatar este punto y el equipo se le dañe sera total responsabilidad del CLIENTE reponer el equipo para poder darle continuidad al contrato.\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            4.\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                        \tCuidar de los equipos instalados en su residencia o lugar de la prestación del servicio de conexion a internet, ya que son <Text style={styles.textValue}>PROPIEDAD DE EL PROVEEDOR.</Text>\n                        </Text>\n                    </View>\n                    <View style={styles.orderedListContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                5.\n                            </Text>\n                        </Text>\n                        <Text style={styles.orderedListItem}>\n                            <Text style={styles.textValue}>\n                        \t    Por ningun motivo el CLIENTE, puede mover de lugar y/o trasladar los equipos a otra residencia, la encargada de traslados es unica y exclusivamente la EMPRESA.\n                            </Text>\n                        </Text>\n                    </View>\n                    <Text style={styles.subtitle}>\n                        SEXTO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                            PENALIDADES\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            a)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            Queda establecido que si por cualquier motivo,&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            &nbsp;decidiera&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>romper ó cancelar</Text>\n                            &nbsp;el presente contrato, el importe equivalente a cancelar sera del&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>50% del tiempo restante estipulado en el contrato.</Text>\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            b)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tEn caso que&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            &nbsp;no cancelara en las fechas antes estipuladas, pagará un recargo o mora de $3.00 dolares, por cada cuota retrazada.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                c)\n                            </Text>\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                En caso de que EL CLIENTE se retrazara en el pago mensual El PROVEEDOR realizará la suspensión de los servicios de internet despues de cinco dias de espera del pago mensual acordado por parte del CLIENTE, contados a partir del dia 3 de cada mes especificamente a partir del dia 8 y podrá reestablecerlo, hasta que  EL CLIENTE cumpla con el pago mensual + la mora correspondiente.\n                            </Text>\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                d)\n                            </Text>\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            <Text style={styles.textValue}>\n                                En el caso de el periodo en que el cliente esté desconectado de los servicios de internet por causa de incumplimiento de pago, no será responsabilidad del PROVEEDOR, por lo cual, EL CLIENTE pagará normalmente los periodos posteriores, aun si el servicio esté inactivo por causa de incumplimiento de pago, este seguirá contando de forma normal las siguientes cuotas.\n                            </Text>\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            e)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tEn caso de perdida o robo del equipo instalado, sera responsabilidad de&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            &nbsp;reponerlo,&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>cancelando $30.00 por el Router Wifi y $ 125.00 por la antena receptora</Text>\n                            , teniendo la opción de cancelar dicha sumatoria en un solo pago o en cuotas cargadas de forma equitativa entre el total de meses restantes al contrato.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            f)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tEn caso que&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            &nbsp;decidiera cambiar de lugar el punto de conexión,\n                            este cancelará un total de $15.00 dolares americanos en concepto de traslado\n                            siempre y cuando el&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>PROVEEDOR</Text>\n                            &nbsp;brinde cobertura en la nueva zona, en caso que el proveedor no brinde cobretra el contrato sera cancelado automaticamente.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>\n                                g)\n                            </Text>\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            <Text style={styles.textValue}>\n                                En caso que el cliente mueva o traslade los equipos a otra vivienda,\n                                la empresa impondra una multa de $75.00 por matipulacion\n                                de dichos equipos sin previo aviso y podríaa ser suspendido definitivamente en ambas viviendas.\n                            </Text>\n                        </Text>\n                    </View>\n                    <Text style={styles.subtitle}>\n                        SÉPTIMO\n                    </Text>\n                    <View style={styles.listContainer}>\n                        <Text style={styles.itemDecoration}>\n                            »\n                        </Text>\n                        <Text style={styles.listItem}>\n                        \tTERMINACIÓN DEL CONTRATO\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            a)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tAl finalizar las fechas estipuladas de duración del presente contrato, quedará a disposición del cliente, cancelar el contrato o continuar con los servicios y firmar una nueva contratación de los mismos con el PROVEEDOR para un nuevo periodo.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            b)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                        \tTodo el equipo instalado en la residencia de&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            &nbsp;para la conexión a internet inalámbrica, es propiedad de&nbsp;\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL PROVEEDOR</Text>\n                            , por lo tanto en caso de cancelación o finalización de contrato, EL PROVEEDOR esta en todo el derecho de retirar el equipo que haya sido instalado para la prestación del servicio y el CLIENTE en la obligación de entregarlo.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n                            c)\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            <Text style={{ fontFamily: 'Calibri Bold' }}>EL CLIENTE</Text>\n                            , no podrá transferir de forma total o parcial las obligaciones que asume en este contrato, y tendrá responsabilidad directa y exclusiva por el cumplimiento del mismo.\n                        </Text>\n                    </View>\n                    <Text style={styles.subtitle}>\n                        OCTAVO\n                    </Text>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            Para los efectos de cualquier comunicación que las partes deseen dirigirse, señalan como sus domicilios los consignados en la parte introductoria del presente documento, obligándose a notificar la una a la otra, cualquier variación de los mismos, con una anticipación de por lo menos quince (15) días hábiles.\n                        </Text>\n                    </View>\n                    <View style={styles.sublistContainer}>\n                        <Text style={styles.itemDecoration}>\n\n                        </Text>\n                        <Text style={styles.sublistItem}>\n                            Todo litigio o controversia, derivados o relacionados con este contrato, será resuelto mediante tribunales, de conformidad con los Reglamentos de los mismos, a cuyas normas, administración y decisión se someten las partes en forma incondicional, declarando conocerlas y aceptarlas en su integridad.\n                        </Text>\n                    </View>\n                    <View style={{ marginVertical: 10, width: '100%' }}></View>\n                    <Text style={styles.text}>\n                        Ambas partes declaran su conformidad con las cláusulas que anteceden, suscribiendo el presente documento en\n                    </Text>\n                    <View style={{ marginVertical: 15, width: '100%' }}></View>\n                    <Text style={styles.text}>\n                        Zacatecoluca, a los&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>\n                            {(contrato.fecha_ingreso.toDate().getDate())}\n                        </Text>\n                        &nbsp;días del mes&nbsp;\n                        <Text style={{ fontFamily: 'Calibri Bold' }}>\n                            {verFecha(contrato.fecha_ingreso)}.\n                        </Text>\n                    </Text>\n                </View>\n                <View style={styles.signContainer}>\n                    <View style={styles.signItem}>\n                        <Text>F.___________________________________________</Text>\n                        <Text>\n                            Proveedor: <Text style={styles.textValue}>[Nombre]</Text>\n                        </Text>\n                        <Text>\n                            DUI: <Text style={styles.textValue}>[DUI]</Text>\n                        </Text>\n                    </View>\n                    <View style={styles.signItem}>\n                        <Text>F.___________________________________________</Text>\n                        <Text>\n                            Cliente: <Text style={styles.textValue}>{contrato.cliente}</Text>\n                        </Text>\n                        <Text>\n                            DUI: <Text style={styles.textValue}>{cliente.dui}</Text>\n                        </Text>\n                    </View>\n                </View>\n            </Page>\n        </Document>\n    );\n}\n\nexport default Contrato;\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    message,\r\n    Modal,\r\n    List,\r\n    Card,\r\n    Row,\r\n    Col,\r\n    Spin,\r\n    Tooltip,\r\n    Space,\r\n} from \"antd\";\r\nimport { CloudDownloadOutlined } from \"@ant-design/icons\";\r\nimport Talonario from \"../reportes/Talonario\";\r\nimport Contrato from \"../reportes/Contrato\";\r\nimport app from \"../../firebaseConfig\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\n\r\nconst capitalize = (s) => {\r\n    if (typeof s !== \"string\") return s;\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst verUsuario = (usr) => capitalize(usr.split('@')[0]);\r\n\r\nconst colorEstado = (estado) => {\r\n    let ret = { color: '#000' };\r\n    switch (estado) {\r\n        case 'activo':\r\n            ret.color = '#15d733';\r\n            break;\r\n        case 'inactivo':\r\n            ret.color = '#f67a2c';\r\n            break;\r\n        case 'finalizado':\r\n            ret.color = '#3388f5';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nconst formatoDinero = (num) =>\r\n    new Intl.NumberFormat(\"es-SV\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    }).format(num);\r\n\r\nconst verFecha = (fecha) => {\r\n    return capitalize(\r\n        new Date(fecha.seconds * 1000).toLocaleDateString(\"es-SV\", {\r\n            year: \"numeric\",\r\n            month: \"short\",\r\n        })\r\n    );\r\n};\r\n\r\nconst obtenerContrato = async (ref) => {\r\n    let auxRecord = null;\r\n    await ref.get().then((doc) => {\r\n        if (doc.exists) {\r\n            auxRecord = doc.data();\r\n        }\r\n    });\r\n    return auxRecord;\r\n};\r\n\r\nconst verCodigoCuota = code => {\r\n    return `${code.substr(0, 4)} ${code.substr(4, 4)} ${code.substr(8, 4)} ${code.substr(12, 4)} ${code.substr(16, 4)}`;\r\n}\r\n\r\nconst obtenerCuotas = async (ref) => {\r\n    let auxCuotas = [];\r\n\r\n    await ref.get().then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n            auxCuotas.push({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            });\r\n        });\r\n    });\r\n    return auxCuotas;\r\n};\r\n\r\nconst ModalDetalle = (props) => {\r\n    const { codigoContrato } = props;\r\n    const [loadingRecord, setLoadingRecord] = useState(true);\r\n    const [loadingCuotas, setLoadingCuotas] = useState(true);\r\n    const [record, setRecord] = useState({});\r\n    const [cuotas, setCuotas] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLoadingCuotas(true);\r\n        setLoadingRecord(true);\r\n\r\n        let ref = app.firestore().collection(\"contratos\").doc(codigoContrato);\r\n\r\n        obtenerContrato(ref)\r\n            .then((res) => setRecord(res))\r\n            .finally(() => setLoadingRecord(false));\r\n\r\n        obtenerCuotas(ref.collection(\"cuotas\"))\r\n            .then((res) => setCuotas(res))\r\n            .finally(() => setLoadingCuotas(false));\r\n    }, [codigoContrato]);\r\n\r\n    const download = (tipo) => {\r\n        pdf(Talonario({ contrato: record, cuotas: cuotas, tipo: tipo }))\r\n            .toBlob()\r\n            .then((file) => {\r\n                var csvURL = window.URL.createObjectURL(file);\r\n                let tempLink = document.createElement(\"a\");\r\n                tempLink.href = csvURL;\r\n                tempLink.setAttribute(\r\n                    \"download\",\r\n                    `Talonario ${record.codigo} (${tipo}).pdf`\r\n                );\r\n                tempLink.click();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const descargarDocumento = async (record) => {\r\n        let cliente = null;\r\n        await record.ref_cliente\r\n            .get()\r\n            .then((doc) => (cliente = doc.data()))\r\n            .catch((error) => {\r\n                message.error(\r\n                    \"¡Ocurrió un error al obtener la información del cliente!\"\r\n                );\r\n            });\r\n\r\n        if (!cliente) return;\r\n\r\n        pdf(Contrato({ contrato: record, cliente: cliente }))\r\n            .toBlob()\r\n            .then((file) => {\r\n                var csvURL = window.URL.createObjectURL(file);\r\n                let tempLink = document.createElement(\"a\");\r\n                tempLink.href = csvURL;\r\n                tempLink.setAttribute(\r\n                    \"download\",\r\n                    `Contrato ${record.codigo}.pdf`\r\n                );\r\n                tempLink.click();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            key=\"detail-modal\"\r\n            visible={props.visible}\r\n            onCancel={props.handleCancel}\r\n            width={800}\r\n            title={\r\n                <div>\r\n                    Detalle de Contrato&nbsp;\r\n                    {\r\n                        !loadingRecord &&\r\n                        <span style={colorEstado(record.estado)}>\r\n                            ({record.estado})\r\n                        </span>\r\n                    }\r\n                </div>\r\n            }\r\n            footer={<></>}\r\n        >\r\n            <Row>\r\n                <Col flex={7}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                <strong> {codigoContrato} </strong>\r\n                                <Tooltip title=\"Descargar documento\">\r\n                                    <strong>\r\n                                        <CloudDownloadOutlined\r\n                                            key=\"download\"\r\n                                            onClick={() =>\r\n                                                descargarDocumento(record)\r\n                                            }\r\n                                            style={{ color: \"#389e0d\" }}\r\n                                        />\r\n                                    </strong>\r\n                                </Tooltip>\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 325 }}\r\n                    >\r\n                        {!loadingRecord && (\r\n                            <div>\r\n                                Cliente: <strong>{record.cliente}</strong>\r\n                                <br />\r\n                                Dui cliente:{\" \"}\r\n                                <strong>{record.dui_cliente}</strong> <br />\r\n                                IP:{\" \"}\r\n                                <strong>\r\n                                    192.168.{record.red}.{record.ip}\r\n                                </strong>\r\n                                <br />\r\n                                Precio de cuota:{\" \"}\r\n                                <strong>\r\n                                    {formatoDinero(record.precio_cuota)}\r\n                                </strong>\r\n                                <br />\r\n                                Cant. Cuotas:{\" \"}\r\n                                <strong>{record.cant_cuotas}</strong>\r\n                                <br />\r\n                                Fecha de inicio:{\" \"}\r\n                                <strong>{verFecha(record.fecha_inicio)}</strong>\r\n                                <br />\r\n                                Fecha de fin:{\" \"}\r\n                                <strong>{verFecha(record.fecha_fin)}</strong>\r\n                                <br />\r\n                                Registrado por:{\" \"}\r\n                                <strong>{verUsuario(record.usuario)}</strong>\r\n                            </div>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n                <Col flex={16} offset={1}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                <strong>Cuotas</strong>\r\n                                {!loadingCuotas && (\r\n                                    <Space>\r\n                                        <Tooltip title=\"Descargar original\">\r\n                                            <CloudDownloadOutlined\r\n                                                key=\"downloadOriginal\"\r\n                                                onClick={() =>\r\n                                                    download(\"original\")\r\n                                                }\r\n                                                style={{ color: \"#389e0d\" }}\r\n                                            />\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Descargar copia\">\r\n                                            <CloudDownloadOutlined\r\n                                                key=\"downloadCopia\"\r\n                                                onClick={() =>\r\n                                                    download(\"copia - cliente\")\r\n                                                }\r\n                                                style={{ color: \"#e1a61b\" }}\r\n                                            />\r\n                                        </Tooltip>\r\n                                    </Space>\r\n                                )}\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 325, overflowY: \"scroll\" }}\r\n                    >\r\n                        <List\r\n                            dataSource={cuotas}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.codigo}>\r\n                                    <List.Item.Meta\r\n                                        title={\r\n                                            <strong>\r\n                                                {item.id} -{\" \"}\r\n                                                {verFecha(item.fecha_pago)}\r\n                                            </strong>\r\n                                        }\r\n                                        description={verCodigoCuota(item.codigo)}\r\n                                    />\r\n                                    <div>\r\n                                        {item.cancelado ? (\r\n                                            <span style={{ color: \"#389e0d\" }}>\r\n                                                Cancelado\r\n                                            </span>\r\n                                        ) : (\r\n                                            <span style={{ color: \"#f5222d\" }}>\r\n                                                Pendiente\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </List.Item>\r\n                            )}\r\n                        ></List>\r\n                        {loadingCuotas && (\r\n                            <div className=\"loading-container\">\r\n                                <Spin />\r\n                            </div>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                (!loadingRecord && record.estado === 'inactivo') &&\r\n                <div>\r\n                    <Row justify=\"center\" style={{ marginTop: 10 }}>\r\n                        <Col flex={24} style={{ textAlign: 'center' }}>\r\n                            <strong>Motivo de inactividad:</strong>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row justify=\"center\">\r\n                        <Col flex={24} style={{ textAlign: 'center' }}>\r\n                            {record.motivo_inactivo}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            }\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDetalle;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Tooltip, Modal, List, Card, Row, Col, Spin, Space } from 'antd';\r\nimport app from '../../firebaseConfig';\r\n\r\nconst capitalize = s => {\r\n    if (typeof s !== 'string') return s\r\n    return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\nconst verFecha = fecha => {\r\n    return capitalize(new Date(fecha.seconds * 1000).toLocaleDateString(\"es-SV\", { year: 'numeric', month: 'short' }))\r\n}\r\n\r\nconst obtenerCliente = async ref => {\r\n    let auxRecord = null;\r\n    await ref\r\n    .get()\r\n    .then(doc => {\r\n        if (doc.exists) {\r\n            auxRecord = doc.data();\r\n        }\r\n    })\r\n    return auxRecord;\r\n}\r\n\r\nconst obtenerContratos = async ref => {\r\n    let auxContratos = [];\r\n    await ref\r\n    .get()\r\n    .then(snapshot => {\r\n        snapshot.forEach(doc => {\r\n            auxContratos.push({\r\n                id: doc.id,\r\n                ...doc.data() // Well\r\n            });\r\n        })\r\n    })\r\n    return auxContratos;\r\n}\r\n\r\nconst ModalDetalle = props => {\r\n\r\n    const { codigoCliente } = props;\r\n    const [loadingCliente, setLoadingCliente] = useState(true);\r\n    const [loadingContratos, setLoadingContratos] = useState(true);\r\n    const [cliente, setCliente] = useState({});\r\n    const [contratos, setContratos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setLoadingContratos(true);\r\n        setLoadingCliente(true)\r\n\r\n        let refCliente = app.firestore().collection('clientes').doc(codigoCliente);\r\n        let refContratos = app.firestore().collection('contratos').where('ref_cliente', '==', refCliente);\r\n\r\n        obtenerCliente(refCliente)\r\n        .then(res => setCliente(res))\r\n        .finally(() => setLoadingCliente(false));\r\n\r\n        obtenerContratos(refContratos)\r\n        .then(res => setContratos(res))\r\n        .finally(() => setLoadingContratos(false));\r\n    }, [codigoCliente]);\r\n\r\n    return (\r\n        <Modal\r\n            key=\"detail-modal\"\r\n            visible={props.visible}\r\n            onCancel={props.handleCancel}\r\n            width={800}\r\n            title={\r\n                <div>\r\n                    Detalle de Cliente\r\n                </div>\r\n            }\r\n            footer={\r\n                <>\r\n                </>\r\n            }\r\n        >\r\n            <Row>\r\n                <Col flex={7} style={{ maxWidth: 395 }}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                <strong> Cliente </strong>\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 250 }}\r\n                    >\r\n                        {\r\n                            !loadingCliente &&\r\n                            <div>\r\n                                Nombre: <strong>{`${cliente.nombre} ${cliente.apellido}`}</strong><br />\r\n                                DUI: <strong>{cliente.dui}</strong><br />\r\n                                NIT: <strong>{cliente.nit}</strong><br />\r\n                                Teléfono: <strong>{cliente.telefono}</strong><br />\r\n                                Dirección: <strong>{cliente.direccion}</strong><br />\r\n                            </div>\r\n                        }\r\n                    </Card>\r\n                </Col>\r\n                <Col flex={16} offset={1}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                <strong>Contratos</strong>\r\n                                <Tooltip title=\"Registrar contrato\">\r\n                                    <a href=\"#/contratos\" target=\"_blank\" style={{ fontSize: 12, margin: \"0 8px\" }}>\r\n                                        Nuevo\r\n                                    </a>\r\n                                </Tooltip>\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 250, overflowY: 'auto' }}\r\n                    >\r\n\r\n                        <List\r\n                            dataSource={contratos}\r\n                            renderItem={item => (\r\n                            <List.Item key={item.id}>\r\n                                <List.Item.Meta\r\n                                    title={<strong>{item.codigo}</strong>}\r\n                                    description={`${verFecha(item.fecha_inicio)} - ${verFecha(item.fecha_fin)}` }\r\n                                />\r\n                                <div>\r\n                                    { item.estado }\r\n                                </div>\r\n                            </List.Item>\r\n                            )}\r\n                        >\r\n                        </List>\r\n                        {loadingContratos && (\r\n                            <div className=\"loading-container\">\r\n                                <Spin />\r\n                            </div>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalDetalle;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    message,\r\n    Modal,\r\n    Form,\r\n    Button\r\n} from \"antd\";\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nimport app from \"../../firebaseConfig\";\r\n\r\nconst obtenerContrato = async (ref) => {\r\n    let auxRecord = null;\r\n    await ref.get().then((doc) => {\r\n        if (doc.exists) {\r\n            auxRecord = doc.data();\r\n        }\r\n    });\r\n    return auxRecord;\r\n};\r\n\r\nconst ModalDesactivar = (props) => {\r\n    const [form] = Form.useForm();\r\n    const { codigoContrato } = props;\r\n    const [loadingRecord, setLoadingRecord] = useState(true);\r\n    const [record, setRecord] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const ref = app.firestore();\r\n\r\n    useEffect(() => {\r\n        setLoadingRecord(true);\r\n\r\n        let refContrato = ref.collection(\"contratos\").doc(codigoContrato);\r\n\r\n        obtenerContrato(refContrato)\r\n            .then((res) => setRecord(res))\r\n            .finally(() => setLoadingRecord(false));\r\n        // eslint-disable-next-line\r\n    }, [codigoContrato]);\r\n\r\n    const handleOk = () => {\r\n        setLoading(true);\r\n        form\r\n        .validateFields()\r\n        .then(val => {\r\n            ref.collection('contratos')\r\n            .doc(record.codigo)\r\n            .update({\r\n                estado: 'inactivo',\r\n                motivo_inactivo: val.motivo\r\n            })\r\n            .then(() => {\r\n                message.success(`¡Se inhabilitó el contrato correctamente!`);\r\n                props.handleCancel();\r\n            })\r\n        })\r\n        .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n        })\r\n        .finally(() => {\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            key=\"detail-modal\"\r\n            visible={props.visible}\r\n            onCancel={props.handleCancel}\r\n            title={<div>Dar de baja a contrato <strong>{codigoContrato}</strong></div>}\r\n            bodyStyle={{ paddingBottom: 0 }}\r\n            footer={\r\n                <div key=\"footer-options\">\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                        Aceptar\r\n                    </Button>\r\n                </div>\r\n            }\r\n        >\r\n            {!loadingRecord && (\r\n                <Form form={form}>\r\n                    <Form.Item\r\n                        name=\"motivo\"\r\n                        label=\"Motivo\"\r\n                        requiredMark=\"optional\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Debe introducir el motivo'\r\n                            }\r\n                        ]}\r\n                        // style={{ width: 300 }}\r\n                    >\r\n                        <TextArea placeholder=\"Motivo para dar de baja al contrato\"></TextArea>\r\n                    </Form.Item>\r\n                </Form>\r\n            )}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDesactivar;\r\n","import React, { Component } from \"react\";\nimport {\n    message,\n    Modal,\n    Tooltip,\n    Badge,\n    Space,\n    PageHeader,\n    Input,\n    Button,\n} from \"antd\";\nimport {\n    ExclamationCircleOutlined,\n    StopOutlined,\n    CloudDownloadOutlined,\n} from \"@ant-design/icons\";\nimport app from \"../../firebaseConfig\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport Tabla from \"../Tabla\";\nimport ModalDetalle from \"./ModalDetalle\";\nimport ModalDetalleCliente from \"../clientes/ModalDetalle\";\nimport ModalDesactivar from \"./ModalDesactivar\";\nimport Contrato from \"../reportes/Contrato\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport firebase from 'firebase';\nimport moment from 'moment';\n\nconst { confirm } = Modal;\nconst { Search } = Input;\n\nconst opcFecha = { year: 'numeric', month: 'short' };\nconst opcFechaC = { year: 'numeric', month: 'numeric', day: 'numeric' };\n\nconst cFecha = (fecha) => {\n    if (fecha) return fecha.toDate();\n    else return new Date();\n}\n\nconst formatoDinero = (num) => new Intl.NumberFormat(\"es-SV\", {style: \"currency\", currency: \"USD\",}).format(num);\n\nconst capitalize = (s) => {\n    if (typeof s !== \"string\") return s;\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nconst verFecha = (fecha, c = false) => {\n    let opc = c ? opcFechaC : opcFecha;\n\n    return capitalize(fecha.toDate().toLocaleDateString(\"es-SV\", opc));\n};\n\n// const colorEstado = (estado) => {\n//     let ret = { color: '#000' };\n//     switch (estado) {\n//         case 'activo':\n//             ret.color = '#15d733';\n//             break;\n//         case 'inactivo':\n//             ret.color = '#f67a2c';\n//             break;\n//         case 'finalizado':\n//             ret.color = '#3388f5';\n//             break;\n//         default:\n//             break;\n//     }\n\n//     return ret;\n// }\n\nclass Contratos extends Component {\n    constructor(props) {\n        super(props);\n\n        this.mainRef = app.firestore();\n        this.refContratos = this.mainRef.collection(\"contratos\");\n        this.refClientes = this.mainRef.collection(\"clientes\");\n        this.refRedes = this.mainRef.collection(\"redes\");\n        this.refPagos = this.mainRef.collection(\"pagos\");\n        this.refMantenimientos = this.mainRef.collection(\"mantenimientos\");\n\n        this.unsubscribe = null;\n        this.state = {\n            loading: true,\n            registro: null,\n            contratos: [],\n            clientes: [],\n            redes: [],\n            modalDetalle: false,\n            modalDetalleCliente: false,\n            modalDesactivar: false,\n            codigoCliente: null,\n        };\n    }\n\n    obtenerContratos = (querySnapshot) => {\n        const contratos = [];\n        const { busqueda } = this.state;\n\n        querySnapshot.forEach(async (doc) => {\n            let {\n                cliente,\n                dui_cliente,\n                estado,\n                codigo,\n                fecha_inicio,\n                fecha_fin,\n                velocidad,\n                cant_cuotas,\n                precio_cuota,\n                red,\n                ip,\n                ref_cliente,\n                fecha_ingreso,\n                ultima_cuota_pagada,\n                ultimo_mes_pagado,\n                fecha_ultimo_mes_pagado\n            } = doc.data();\n\n            fecha_inicio = verFecha(fecha_inicio);\n            fecha_fin = verFecha(fecha_fin);\n\n            if (\n                busqueda &&\n                cliente.toLowerCase().indexOf(busqueda) === -1 &&\n                codigo.toLowerCase().indexOf(busqueda) === -1 &&\n                fecha_inicio.toLowerCase().indexOf(busqueda) === -1 &&\n                fecha_fin.toLowerCase().indexOf(busqueda) === -1 &&\n                ultima_cuota_pagada.toLowerCase().indexOf(busqueda) === -1 &&\n                verFecha(ultimo_mes_pagado).toLowerCase().indexOf(busqueda) === -1 &&\n                verFecha(fecha_ultimo_mes_pagado, true).toLowerCase().indexOf(busqueda) === -1\n            )\n                return;\n\n            contratos.push({\n                key: doc.id,\n                cliente,\n                dui_cliente,\n                codigo,\n                estado,\n                fecha_inicio,\n                fecha_fin,\n                velocidad,\n                cant_cuotas,\n                precio_cuota,\n                red,\n                ip,\n                ref_cliente,\n                fecha_ingreso,\n                ultima_cuota_pagada,\n                ultimo_mes_pagado,\n                fecha_ultimo_mes_pagado\n            });\n        });\n        this.setState({\n            contratos,\n            loading: false,\n        });\n    };\n\n    obtenerRedes = (querySnapshot) => {\n        const redes = [];\n\n        querySnapshot.forEach((doc) => {\n            let { numero } = doc.data();\n\n            redes.push({\n                key: doc.id,\n                numero: numero,\n            });\n        });\n\n        this.setState({\n            redes,\n        });\n    };\n\n    obtenerClientes = (querySnapshot) => {\n        const clientes = [];\n\n        querySnapshot.forEach((doc) => {\n            let { dui, nombre, apellido } = doc.data();\n\n            clientes.push({\n                key: doc.id,\n                dui,\n                nombre,\n                apellido,\n            });\n        });\n\n        this.setState({\n            clientes,\n        });\n    };\n\n    componentDidMount() {\n        this.unsubscribe = this.refContratos\n            .where('estado', '==', 'activo')\n            .where('ultimo_mes_pagado', '<', firebase.firestore.Timestamp.now())\n            .orderBy('ultimo_mes_pagado', 'desc')\n            .onSnapshot(this.obtenerContratos);\n        this.refClientes\n            .orderBy('fecha_creacion', 'desc')\n            .onSnapshot(this.obtenerClientes);\n        this.refRedes.orderBy('numero').onSnapshot(this.obtenerRedes);\n    }\n\n    componentDidUpdate(prevState, newState) {}\n\n    buscar(valor) {\n        if (valor.toLowerCase() !== this.state.busqueda) {\n            this.setState({ loading: true });\n            this.setState({ busqueda: valor.toLowerCase() });\n            this.refContratos\n                .where('ultimo_mes_pagado', '<', firebase.firestore.Timestamp.now())\n                .orderBy('ultimo_mes_pagado', 'desc')\n                .get()\n                .then((querySnapshot) => this.obtenerContratos(querySnapshot));\n        }\n    }\n\n    modalDesactivarContrato = (record) => {\n        this.setState({\n            modalDesactivar: true,\n            registro: record,\n        });\n    }\n\n    handleCancel = () => {\n        this.setState({\n            modalDetalle: false,\n            modalDetalleCliente: false,\n            modalDesactivar: false,\n        });\n    };\n\n    irA = (ruta) => {\n        this.unsubscribe();\n        this.props.dispatch(push(`contratos/${ruta}`));\n    };\n\n    verDetalle = (record) => {\n        this.setState({ registro: record });\n        this.setState({ modalDetalle: true });\n    };\n\n    verDetalleCliente = (record) => {\n        this.setState({ codigoCliente: record.ref_cliente.id });\n        this.setState({ modalDetalleCliente: true });\n    };\n\n    download = async (record) => {\n        let cliente = null;\n        await record.ref_cliente.get()\n        .then(doc => cliente = doc.data())\n        .catch(error => {\n            message.error('¡Ocurrió un error al obtener la información del cliente!')\n        })\n\n        if (!cliente) return;\n\n        pdf(Contrato({ contrato: record, cliente: cliente }))\n            .toBlob()\n            .then((file) => {\n                var csvURL = window.URL.createObjectURL(file);\n                let tempLink = document.createElement(\"a\");\n                tempLink.href = csvURL;\n                tempLink.setAttribute(\n                    \"download\",\n                    `Contrato ${record.codigo}.pdf`\n                );\n                tempLink.click();\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    columnas = this.asignarColumnas();\n\n    asignarColumnas() {\n        return [\n            {\n                title: \"Contrato\",\n                key: \"contrato\",\n                sorter: {\n                    compare: (a, b) => a.red.toString().localeCompare(b.red.toString())\n                },\n                filters: [],\n                onFilter: (value, record) => record.codigo.indexOf(value) === 0,\n                render: (record) => (\n                    <Button type=\"link\" onClick={() => this.verDetalle(record)}>\n                        <strong>{record.codigo}</strong>\n                    </Button>\n                ),\n            },\n            {\n                title: \"Cliente\",\n                key: \"cliente\",\n                sorter: {\n                    compare: (a, b) => a.cliente.localeCompare(b.cliente),\n                },\n                render: (record) => (\n                    <Button\n                        type=\"link\"\n                        onClick={() => this.verDetalleCliente(record)}\n                    >\n                        <strong>{record.cliente}</strong>\n                    </Button>\n                ),\n            },\n            {\n                title: \"Velocidad\",\n                key: \"velocidad\",\n                sorter: {\n                    compare: (a, b) => a.velocidad.toString().localeCompare(b.velocidad.toString())\n                },\n                filters: [],\n                onFilter: (value, record) => record.velocidad === value,\n                render: (record) => (\n                    <>\n                        <Badge\n                            count={`${record.velocidad} Mb`}\n                            style={{ backgroundColor: \"#52c41a\" }}\n                        />\n                    </>\n                ),\n            },\n            {\n                title: \"Precio\",\n                key: \"precio_cuota\",\n                sorter: {\n                    compare: (a, b) => a.precio_cuota.toString().localeCompare(b.precio_cuota.toString())\n                },\n                render: (record) => (\n                    <strong>\n                        <span style={{ color: \"#089D6C\", fontSize: \"1.2em\" }}>\n                            {formatoDinero(record.precio_cuota)}\n                        </span>\n                    </strong>\n                ),\n            },\n            {\n                title: \"Últ. cuota pagada\",\n                key: \"ultimo_mes_pagado\",\n                sorter: (a, b) => moment(cFecha(a.ultimo_mes_pagado)).unix() - moment(cFecha(b.ultimo_mes_pagado)).unix(),\n                render: (record) => (\n                    <strong>{verFecha(record.ultimo_mes_pagado)}</strong>\n                )\n            },\n            {\n                title: \"# últim. cuota\",\n                key: \"ultima_cuota_pagada\",\n                sorter: (a, b) => a.ultima_cuota_pagada.localeCompare(b.ultima_cuota_pagada),\n                render: (record) => (\n                    <strong>{record.ultima_cuota_pagada}</strong>\n                )\n            },\n            {\n                title: \"Fecha pago/cuota\",\n                key: \"fecha_ultimo_mes_pagado\",\n                sorter: (a, b) => moment(cFecha(a.fecha_ultimo_mes_pagado)).unix() - moment(cFecha(b.fecha_ultimo_mes_pagado)).unix(),\n                render: (record) => (\n                    record.fecha_ultimo_mes_pagado\n                    ?\n                    <strong>{verFecha(record.fecha_ultimo_mes_pagado, true)}</strong>\n                    :\n                    '-'\n                )\n            },\n            // {\n            //     title: \"Estado\",\n            //     key: \"estado\",\n            //     render: (record) => (\n            //         <strong>\n            //             <span style={colorEstado(record.estado)}>\n            //                 {record.estado}\n            //             </span>\n            //         </strong>\n            //     ),\n            // },\n            {\n                title: \"Opciones\",\n                key: \"opciones\",\n                render: (record) => (\n                    <Space size=\"middle\">\n                        <Tooltip title=\"Descargar\">\n                            <CloudDownloadOutlined\n                                key=\"download\"\n                                onClick={() => this.download(record)}\n                                style={{ color: \"#389e0d\" }}\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Dar de baja\">\n                            <StopOutlined\n                                onClick={() => this.desactivar(record)}\n                                style={{ color: \"#203acc\" }}\n                            />\n                        </Tooltip>\n                    </Space>\n                ),\n            },\n        ];\n    }\n\n    desactivar = async (record) => {\n        if (record.estado !== 'activo') {\n            message.error('¡Este contrato no se puede desactivar!');\n            return;\n        }\n\n        let me = this;\n        confirm({\n            title: \"¿Está seguro que desea dar de baja a este contrato?\",\n            icon: <ExclamationCircleOutlined />,\n            content: \"Desactivar contrato\",\n            okText: \"Sí\",\n            cancelText: \"No\",\n            onOk() {\n                me.modalDesactivarContrato(record);\n            },\n        });\n    };\n\n    render() {\n        const {\n            contratos,\n            loading,\n            registro,\n            redes,\n            codigoCliente,\n            modalDetalle,\n            modalDetalleCliente,\n            modalDesactivar\n        } = this.state;\n\n        return (\n            <div>\n                {modalDetalle && (\n                    <ModalDetalle\n                        visible={modalDetalle}\n                        codigoContrato={registro.key}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                {modalDetalleCliente && (\n                    <ModalDetalleCliente\n                        visible={modalDetalleCliente}\n                        codigoCliente={codigoCliente}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                {modalDesactivar && (\n                    <ModalDesactivar\n                        visible={modalDesactivar}\n                        codigoContrato={registro.key}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                <PageHeader\n                    className=\"site-page-header\"\n                    title=\"Contratos\"\n                    subTitle=\"Contratos con pagos pendientes\"\n                    extra={[\n                        <Search\n                            key=\"1\"\n                            placeholder=\"Buscar\"\n                            onSearch={(value) => this.buscar(value)}\n                            style={{ width: 200 }}\n                        />,\n                    ]}\n                />\n                {!this.columnas[0].filters.length && // eslint-disable-next-line\n                    redes.map((red) => {\n                        this.columnas[0].filters.push({\n                            text: `Red ${red.numero}`,\n                            value: `R${red.numero}`,\n                        });\n                    })}\n                {!this.columnas[2].filters.length &&\n                    contratos\n                        .map((contrato) => contrato.velocidad)\n                        .filter(\n                            (value, index, self) =>\n                                self.indexOf(value) === index\n                        )\n                        .sort((a, b) => a - b) // eslint-disable-next-line\n                        .map((velocidad) => {\n                            this.columnas[2].filters.push({\n                                text: `${velocidad} Mb`,\n                                value: velocidad,\n                            });\n                        })}\n                <Tabla\n                    columnas={this.columnas}\n                    data={contratos}\n                    loading={loading}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(Contratos);\n","import React, { Component } from 'react';\r\n\r\nimport { Row, Col } from 'antd';\r\nimport DashboardNavigation from '../components/navigation/DashboardNavigation';\r\nimport ContratosMora from '../components/contratos/ContratosMora';\r\n\r\nclass Dashboard extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <DashboardNavigation />\r\n                <Row style={ { marginTop: \"10px\" } } gutter={24}>\r\n                    <Col lg={24}>\r\n                        <ContratosMora atrasados={true} />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { message, Form, Input, Modal, Button } from 'antd';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport firebase from 'firebase';\r\n\r\nconst ModalDatos = (props) => {\r\n    const [form] = Form.useForm();\r\n    const { refCliente, refContrato, refPago, refMantenimiento, record } = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!record) {\r\n            form.resetFields();\r\n            return\r\n        }\r\n\r\n        const ref = refCliente.doc(record.key);\r\n        ref.get().then((doc) => {\r\n            if (doc.exists) {\r\n                const cli = doc.data();\r\n                form.setFieldsValue({\r\n                    dui: cli.dui,\r\n                    nit: cli.nit,\r\n                    nombre: cli.nombre,\r\n                    apellido: cli.apellido,\r\n                    telefono: cli.telefono,\r\n                    direccion: cli.direccion,\r\n                });\r\n            } else {\r\n                console.log(`No se puede obtener el registro`);\r\n            }\r\n        });\r\n    }, [record, form, refCliente]);\r\n\r\n    const handleOk = () => {\r\n        setLoading(true);\r\n        form\r\n        .validateFields()\r\n        .then(val => {\r\n            if (record) { // Hace falta modificaciones cuando cambia DUI de cliente, nombre y apellido\r\n                editarRegistro(val).then(() => {\r\n                    form.resetFields();\r\n                    props.handleCancel()\r\n                })\r\n                .catch(error => {\r\n                    console.log(`Hubo un error al editar el registro: ${error}`)\r\n                })\r\n            } else {\r\n                agregarRegistro(val).then(() => {\r\n                    form.resetFields();\r\n                    props.handleCancel()\r\n                })\r\n                .catch(error => {\r\n                    console.log(`Hubo un error al agregar el registro: ${error}`)\r\n                })\r\n            }\r\n        })\r\n        .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n        })\r\n        .finally(() => {\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const agregarRegistro = async (val) => {\r\n        refCliente.add({\r\n            activo: true,\r\n            nombre: val.nombre,\r\n            apellido: val.apellido,\r\n            dui: val.dui,\r\n            nit: val.nit,\r\n            telefono: val.telefono,\r\n            direccion: val.direccion,\r\n            eliminado: false,\r\n            fecha_creacion: firebase.firestore.Timestamp.now(),\r\n        })\r\n        .then((docRef) => {\r\n            message.success('¡Registro insertado correctamente!');\r\n        })\r\n        .catch((error) => {\r\n            message.error('Error al insertar el registro');\r\n            console.error(`No se pudo agregar el registro: ${error}}`);\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const editarRegistro = async (val) => {\r\n        const ref = refCliente.doc(record.key);\r\n\r\n        ref.update({\r\n            nombre: val.nombre,\r\n            apellido: val.apellido,\r\n            dui: val.dui,\r\n            nit: val.nit,\r\n            telefono: val.telefono,\r\n            direccion: val.direccion\r\n        }).then(() => {\r\n            // Actualizar los nombres en contratos del cliente\r\n            refContrato.where('ref_cliente', '==', ref)\r\n            .get()\r\n            .then(qs => {\r\n                qs.forEach(doc => {\r\n                    doc.ref.update({\r\n                        cliente: `${val.nombre} ${val.apellido}`\r\n                    })\r\n                });\r\n            })\r\n\r\n            // Actualizar los nombres en pagos del cliente\r\n            refPago.where('ref_cliente', '==', ref)\r\n            .get()\r\n            .then(qs => {\r\n                qs.forEach(doc => {\r\n                    doc.ref.update({\r\n                        nombre_cliente: `${val.nombre} ${val.apellido}`\r\n                    })\r\n                });\r\n            })\r\n\r\n            refMantenimiento.where('ref_cliente', '==', ref)\r\n            .get()\r\n            .then(qs => {\r\n                qs.forEach(doc => {\r\n                    doc.ref.update({\r\n                        nombre_cliente: `${val.nombre} ${val.apellido}`\r\n                    })\r\n                });\r\n            })\r\n            message.success('¡Registro actualizado correctamente!');\r\n        })\r\n        .catch((error) => {\r\n            message.error('Error al editar el registro');\r\n            console.error(`No se pudo editar el registro: ${error}`);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            key=\"data-modal\"\r\n            visible={props.visible}\r\n            title={props.title}\r\n            onOk={handleOk}\r\n            onCancel={props.handleCancel}\r\n            footer={[\r\n                <div key=\"footer-options\">\r\n                    <Button key=\"back\" onClick={props.handleCancel}>\r\n                        Regresar\r\n                    </Button>\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                        Guardar\r\n                    </Button>\r\n                </div>\r\n            ]}\r\n            width={480}\r\n        >\r\n            <Form form={form}>\r\n                <Form.Item\r\n                    name=\"nombre\"\r\n                    label=\"Nombres\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introducir el nombre del cliente'\r\n                        }\r\n                    ]}\r\n                    style={{ width: 300 }}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"apellido\"\r\n                    label=\"Apellidos\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introducir el apellido del cliente'\r\n                        }\r\n                    ]}\r\n                    style={{ width: 300 }}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"dui\"\r\n                    label=\"No. DUI\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Número de DUI requerido'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input style={{ width: 150 }} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"nit\"\r\n                    label=\"No. NIT\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Número de NIT requerido'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input style={{ width: 150 }} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"telefono\"\r\n                    label=\"Teléfono\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Número de teléfono requerido'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input style={{ width: 150 }} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"direccion\"\r\n                    label=\"Dirección\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introduzca la dirección del cliente'\r\n                        }\r\n                    ]}\r\n                    style={{ width: 400 }}\r\n                >\r\n                    <TextArea></TextArea>\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalDatos;\r\n","import React, { Component } from \"react\";\r\nimport Tabla from \"../Tabla\";\r\nimport { message, Modal, Tooltip, Space, Button, Input, Row, Col } from \"antd\";\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ModalDatos from \"./ModalDatos\";\r\nimport ModalDetalle from \"./ModalDetalle\";\r\nimport app from \"../../firebaseConfig\";\r\n\r\nconst { Search } = Input;\r\nconst { confirm } = Modal;\r\n\r\nclass Clientes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.mainRef = app.firestore();\r\n        this.refCliente = this.mainRef.collection(\"clientes\");\r\n        this.refContrato = this.mainRef.collection(\"contratos\");\r\n        this.refPago = this.mainRef.collection(\"pagos\");\r\n        this.refMantenimiento = this.mainRef.collection(\"mantenimientos\");\r\n\r\n        this.state = {\r\n            busqueda: \"\",\r\n            loading: true,\r\n            clientes: [],\r\n            visible: false,\r\n            visibleDelete: false,\r\n            registro: null,\r\n            modalDetalle: false,\r\n        };\r\n    }\r\n\r\n    obtenerClientes = (querySnapshot) => {\r\n        const clientes = [];\r\n        const { busqueda } = this.state;\r\n        this.setState({ loading: true });\r\n\r\n        querySnapshot.forEach((doc) => {\r\n            const {\r\n                dui,\r\n                nit,\r\n                nombre,\r\n                apellido,\r\n                direccion,\r\n                telefono,\r\n            } = doc.data();\r\n\r\n            if (\r\n                busqueda &&\r\n                nombre.toLowerCase().indexOf(busqueda) === -1 &&\r\n                apellido.toLowerCase().indexOf(busqueda) === -1 &&\r\n                direccion.toLowerCase().indexOf(busqueda) === -1 &&\r\n                telefono.toLowerCase().indexOf(busqueda) === -1 &&\r\n                nit.indexOf(busqueda) === -1 &&\r\n                dui.indexOf(busqueda) === -1\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            clientes.push({\r\n                key: doc.id,\r\n                ref: doc.ref,\r\n                nombre: `${nombre} ${apellido}`,\r\n                dui,\r\n                nit,\r\n                direccion,\r\n                telefono,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            clientes,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refCliente\r\n            .orderBy(\"fecha_creacion\", \"desc\")\r\n            .onSnapshot(this.obtenerClientes);\r\n    }\r\n\r\n    buscar(valor) {\r\n        if (valor !== this.state.busqueda) {\r\n            this.setState({ busqueda: valor });\r\n            this.refCliente\r\n                .orderBy(\"fecha_creacion\", \"desc\")\r\n                .get()\r\n                .then((querySnapshot) => this.obtenerClientes(querySnapshot));\r\n        }\r\n    }\r\n\r\n    columnas = this.asignarColumnas();\r\n\r\n    asignarColumnas() {\r\n        return [\r\n            {\r\n                title: \"DUI\",\r\n                key: \"dui\",\r\n                sorter: (a, b) => a.dui.localeCompare(b.dui),\r\n                render: (record) => (\r\n                    <Button type=\"link\" onClick={() => this.verDetalle(record)}>\r\n                        <strong>{record.dui}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"NIT\",\r\n                key: \"nit\",\r\n                sorter: (a, b) => a.nit.localeCompare(b.nit),\r\n                render: (record) => <strong>{record.nit}</strong>,\r\n            },\r\n            {\r\n                title: \"Nombre\",\r\n                key: \"nombre\",\r\n                sorter: (a, b) => a.nombre.localeCompare(b.nombre),\r\n                render: (record) => <span>{record.nombre}</span>,\r\n            },\r\n            {\r\n                title: \"Teléfono\",\r\n                key: \"telefono\",\r\n                sorter: (a, b) => a.telefono.localeCompare(b.telefono),\r\n                render: (record) => <span>{record.telefono}</span>,\r\n            },\r\n            {\r\n                title: \"Dirección\",\r\n                key: \"direccion\",\r\n                sorter: (a, b) => a.direccion.localeCompare(b.direccion),\r\n                render: (record) => <span>{record.direccion}</span>,\r\n            },\r\n            {\r\n                title: \"Opciones\",\r\n                key: \"opciones\",\r\n                render: (record) => (\r\n                    <Space align=\"center\">\r\n                        <Tooltip title=\"Editar\">\r\n                            <EditOutlined\r\n                                onClick={() => this.modalData(record)}\r\n                                style={{ color: \"#fa8c16\" }}\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Eliminar\">\r\n                            <DeleteOutlined\r\n                                onClick={() => this.eliminar(record)}\r\n                                style={{ color: \"#f5222d\" }}\r\n                            />\r\n                        </Tooltip>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n    }\r\n\r\n    modalData = (record) => {\r\n        this.setState({\r\n            visible: true,\r\n            registro: record,\r\n        });\r\n    };\r\n\r\n    confirmEliminar = (cliente) => {\r\n        let me = this;\r\n        confirm({\r\n            title: \"¿Está seguro que desea eliminar este registro?\",\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: \"Eliminar información de cliente\",\r\n            okText: \"Sí\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                me.eliminarCliente(cliente);\r\n            },\r\n        });\r\n    };\r\n\r\n    contratosCliente = async (cliente) => {\r\n        return new Promise((resolve, reject) => {\r\n            this.refContrato\r\n                .where(\"ref_cliente\", \"==\", cliente.ref)\r\n                .limit(1)\r\n                .get()\r\n                .then((qs) => resolve(qs.size))\r\n                .catch((err) => reject(err));\r\n        });\r\n    };\r\n\r\n    eliminarCliente = (cliente) => {\r\n        this.refCliente\r\n            .doc(cliente.key)\r\n            .delete()\r\n            .then(() => message.success(\"Se eliminó el registro\"))\r\n            .catch((err) => message.error(\"Ocurrió un error\"));\r\n    };\r\n\r\n    eliminar = async (record) => {\r\n        message.loading(\"Verificando...\");\r\n        this.contratosCliente(record).then((size) => {\r\n            message.destroy();\r\n            if (size === 0) this.confirmEliminar(record);\r\n            else if (size === 1)\r\n                message.error(\r\n                    \"No se puede eliminar este cliente porque ya tiene contratos\"\r\n                );\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            registro: null,\r\n            modalDetalle: false,\r\n        });\r\n    };\r\n\r\n    verDetalle = (record) => {\r\n        this.setState({ registro: record });\r\n        this.setState({ modalDetalle: true });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            visible,\r\n            registro,\r\n            clientes,\r\n            loading,\r\n            modalDetalle,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <ModalDatos\r\n                    visible={visible}\r\n                    title={registro ? \"Editar información\" : \"Agregar cliente\"}\r\n                    handleCancel={this.handleCancel}\r\n                    record={registro}\r\n                    refCliente={this.refCliente}\r\n                    refContrato={this.refContrato}\r\n                    refPago={this.refPago}\r\n                    refMantenimiento={this.refMantenimiento}\r\n                />\r\n                <Tabla\r\n                    titulo={\r\n                        <>\r\n                            <Row justify=\"space-between\">\r\n                                <Col span={4}>\r\n                                    <strong>Lista de clientes</strong>\r\n                                </Col>\r\n                                <Col span={6} offset={4}>\r\n                                    <Space>\r\n                                        <Search\r\n                                            placeholder=\"Buscar\"\r\n                                            onSearch={(value) =>\r\n                                                this.buscar(value)\r\n                                            }\r\n                                            style={{ width: 200 }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            ghost\r\n                                            onClick={() => this.modalData()}\r\n                                        >\r\n                                            Nuevo\r\n                                        </Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                    columnas={this.columnas}\r\n                    data={clientes}\r\n                    loading={loading}\r\n                />\r\n                {modalDetalle && (\r\n                    <ModalDetalle\r\n                        visible={modalDetalle}\r\n                        codigoCliente={registro.key}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clientes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { message, Row, Col, DatePicker, Select, Form, Input, Modal, Button, Tooltip, InputNumber } from \"antd\";\r\nimport moment from 'moment';\r\nimport \"moment/locale/es\";\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nimport app from '../../firebaseConfig';\r\nimport firebase from 'firebase';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ModalDatos = (props) => {\r\n    const [form] = Form.useForm();\r\n    const { fireRef, record, clientes, user } = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [red, setRed] = useState(null);\r\n    const [ip, setIP] = useState(null);\r\n    const [stValidacionIP, setStValidacionIP] = useState(null);\r\n    const [msgValidacionIP, setMsgValidacionIP] = useState(null);\r\n    const [cantCuotas, setCantCuotas] = useState(18);\r\n    const [fechaInicio, setFechaInicio] = useState(null);\r\n    const [fechaFin, setFechaFin] = useState(null);\r\n\r\n    let ref = app.firestore();\r\n    let refContratos = ref.collection('contratos');\r\n    let refPagos = ref.collection('pagos');\r\n    let refCliente = ref.collection('clientes');\r\n    let refIP = ref.collection('ips');\r\n\r\n    useEffect(() => {\r\n        if (!record) {\r\n            form.resetFields();\r\n            return;\r\n        }\r\n\r\n        const ref = fireRef.doc(record.key);\r\n        ref.get().then(async (doc) => {\r\n            if (doc.exists) {\r\n                let doc_cliente;\r\n                let cantPagos = 0;\r\n                const contrato = doc.data();\r\n\r\n                if (contrato.estado !== 'activo') {\r\n                    message.error('No se puede editar este contrato porque no está activo');\r\n                    props.handleCancel()\r\n                    return;\r\n                }\r\n\r\n                await refPagos.where('codigo_contrato', '==', contrato.codigo)\r\n                    .get()\r\n                    .then(qs => {\r\n                        cantPagos = qs.size;\r\n                    })\r\n                    .catch(error => console.log(error));\r\n\r\n                if (cantPagos > 0) {\r\n                    message.error('No se puede editar este contrato porque ya se realizaron pagos');\r\n                    props.handleCancel();\r\n                    return;\r\n                }\r\n\r\n                setRed(contrato.red);\r\n                setIP(contrato.ip);\r\n                setFechaInicio(moment(contrato.fecha_inicio.toDate()))\r\n                setFechaFin(moment(contrato.fecha_fin.toDate()))\r\n\r\n                await contrato.ref_cliente.get()\r\n                .then(doc => {\r\n                    doc_cliente = doc;\r\n                })\r\n\r\n                form.setFieldsValue({\r\n                    id_cliente: doc_cliente.id,\r\n                    velocidad: contrato.velocidad,\r\n                    precio_cuota: contrato.precio_cuota,\r\n                    red: contrato.red,\r\n                    ip: contrato.ip,\r\n                    cuotas: contrato.cant_cuotas,\r\n                    fecha_inicio: moment(contrato.fecha_inicio.toDate())\r\n                });\r\n\r\n            } else {\r\n                console.log(`No se puede obtener el registro`);\r\n            }\r\n        });\r\n        // eslint-disable-next-line\r\n    }, [record, clientes, form, fireRef]);\r\n\r\n    const zeroPad = (num, places) => String(num).padStart(places, '0');\r\n\r\n    const statusIP = async (ref_ip, libre) => {\r\n        await refIP.doc(ref_ip)\r\n            .update({ libre })\r\n            .catch(error => {\r\n                throw error;\r\n            })\r\n    }\r\n\r\n    const handleOk = async () => {\r\n        setLoading(true);\r\n\r\n        await form.validateFields()\r\n            .then(async val => {\r\n                if (!validarIP()) {\r\n                    setLoading(false);\r\n                    return;\r\n                }\r\n\r\n                let cliente = '';\r\n                refCliente = refCliente.doc(val.id_cliente);\r\n\r\n                await refCliente\r\n                .get()\r\n                .then(doc => {\r\n                    let data = doc.data();\r\n                    cliente = {\r\n                        id: doc.id,\r\n                        dui: data.dui,\r\n                        nombre: data.nombre,\r\n                        apellido: data.apellido,\r\n                        ref: doc.ref\r\n                    };\r\n                })\r\n                .catch(error => {\r\n                    throw error;\r\n                });\r\n\r\n                let contrato = {\r\n                    estado: 'activo',\r\n                    eliminado: false,\r\n                    dui_cliente: cliente.dui,\r\n                    cliente: `${cliente.nombre} ${cliente.apellido}`,\r\n                    cant_cuotas: val.cuotas,\r\n                    precio_cuota: val.precio_cuota,\r\n                    velocidad: val.velocidad,\r\n                    ref_cliente: cliente.ref,\r\n                    ultima_cuota_pagada: null,\r\n                    ultimo_mes_pagado: null,\r\n                    fecha_ultimo_mes_pagado: null,\r\n                    usuario: user.email\r\n                }\r\n\r\n                contrato.codigo = record ? record.codigo : `R${val.red}-${zeroPad(val.ip, 3)}-${fechaInicio.format('MMYY')}-${fechaFin.format('MMYY')}`;\r\n\r\n                if (!record) {\r\n                    contrato.fecha_ingreso = firebase.firestore.Timestamp.now();\r\n                    contrato.red = val.red;\r\n                    contrato.ip = Number(val.ip);\r\n                    contrato.fecha_inicio = new Date(fechaInicio);\r\n                    contrato.fecha_fin = new Date(fechaFin);\r\n                }\r\n\r\n                if (record) {\r\n                    editarRegistro(contrato, cliente, val)\r\n                    .then(() => {\r\n                        message.success('¡Registro editado correctamente!');\r\n                        form.resetFields();\r\n                        props.handleCancel()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(`Hubo un error al editar el registro: ${error}`)\r\n                    })\r\n                } else {\r\n                    agregarRegistro(contrato)\r\n                    .then(() => {\r\n                        message.success('¡Se agregó el contrato correctamente!');\r\n                        form.resetFields();\r\n                        props.handleCancel()\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(`Hubo un error al agregar el registro: ${error}`)\r\n                    })\r\n                }\r\n            })\r\n            .catch((info) => {\r\n                console.log(info);\r\n                message.warning('¡Verifique la información ingresada!');\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const agregarRegistro = async (contrato) => {\r\n        refContratos.doc(`${contrato.codigo}`).set(contrato)\r\n        .then(() => {\r\n            let fechaPago = new Date(fechaInicio);\r\n            let _codContrato = contrato.codigo.split('-');\r\n            let _red = Number.parseInt(_codContrato[0].substr(1));\r\n\r\n            fechaPago.setMonth(fechaPago.getMonth() - 1)\r\n\r\n            for (let i = 1; i <= cantCuotas; i++) {\r\n                let cuota = {\r\n                    codigo: `${zeroPad(_red, 4)}0${_codContrato[1]}${contrato.codigo.substr(8, 4)}${contrato.codigo.substr(13, 4)}${zeroPad(i, 4)}`,\r\n                    cantidad: contrato.precio_cuota,\r\n                    fecha_pago: new Date(fechaPago.setMonth(fechaPago.getMonth() + 1)),\r\n                    cancelado: false\r\n                }\r\n\r\n                refContratos.doc(`${contrato.codigo}`).collection('cuotas').doc(`${zeroPad(i, 2)}`).set(cuota);\r\n            }\r\n        })\r\n        .then(doc => {\r\n            statusIP(`${contrato.red}-${contrato.ip}`, false);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const editarRegistro = async (contrato, cliente, val) => {\r\n        const ref = fireRef.doc(contrato.codigo);\r\n\r\n        await ref\r\n        .update({\r\n            dui_cliente: cliente.dui,\r\n            cliente: `${cliente.nombre} ${cliente.apellido}`,\r\n            precio_cuota: val.precio_cuota,\r\n            velocidad: val.velocidad,\r\n            ref_cliente: cliente.ref,\r\n        })\r\n        .then(async (docRef) => {\r\n            if (contrato.codigo !== record.codigo) await fireRef.doc(record.codigo).delete();\r\n\r\n            if (contrato.red !== record.red || contrato.ip !== record.ip) {\r\n                await statusIP(`${record.red}-${record.ip}`, true);\r\n                await statusIP(`${contrato.red}-${contrato.ip}`, false);\r\n            }\r\n            console.log(`El registro fue actualizado`)\r\n        })\r\n        .catch((error) => {\r\n            console.error(`No se pudo editar el registro: ${error}`);\r\n        });\r\n    }\r\n\r\n    const selectRedes = (\r\n        <Form.Item name=\"red\" noStyle>\r\n            <Select\r\n                style={{ width: 70 }}\r\n                placeholder=\"Red\"\r\n                onSelect={val => {\r\n                    setRed(val);\r\n                    if (ip) validarIP();\r\n                }}\r\n                disabled={record}\r\n            >\r\n                {\r\n                props.redes.map(red =>\r\n                    <Option key={red.key} value={red.numero}>{red.numero}</Option>\r\n                )\r\n                }\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    const validarIP = async () => {\r\n        setStValidacionIP('validating');\r\n        setMsgValidacionIP(null);\r\n\r\n        try {\r\n            if (!red) throw new Error('Seleccione la red')\r\n            if (!ip) throw new Error('Introduzca la direccion IP')\r\n            if (ip <= 0 || ip >= 255 || isNaN(ip)) throw new Error('La IP ingresada no es válida')\r\n\r\n            await refIP.doc(`${red}-${ip}`)\r\n            .get()\r\n            .then(function(doc) {\r\n                if (doc.exists) {\r\n                    if (doc.data().libre || (record && record.ip === ip)) {\r\n                        setStValidacionIP('success');\r\n                        setMsgValidacionIP(null);\r\n                        return true;\r\n                    } else {\r\n                        throw new Error('La IP ya está en uso')\r\n                    }\r\n                } else {\r\n                    throw new Error('La IP ingresada no es válida')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                throw error;\r\n            });\r\n        } catch (error) {\r\n            setStValidacionIP('error');\r\n            setMsgValidacionIP(error.message);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            key=\"data-modal\"\r\n            visible={props.visible}\r\n            title={(\r\n                <>\r\n                    {props.title}\r\n                    &nbsp;\r\n                    {\r\n                        record &&\r\n                        <span>\r\n                            (\r\n                            <strong>\r\n                                {record.codigo}\r\n                            </strong>\r\n                            )\r\n                        </span>\r\n                    }\r\n                </>\r\n            )}\r\n            onOk={handleOk}\r\n            onCancel={props.handleCancel}\r\n            footer={[\r\n                <div key=\"footer-options\">\r\n                    <Button key=\"back\" onClick={props.handleCancel}>\r\n                        Regresar\r\n                    </Button>\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={loading}\r\n                        onClick={handleOk}\r\n                    >\r\n                        Guardar\r\n                    </Button>\r\n                </div>,\r\n            ]}\r\n        >\r\n            <Form form={form} initialValues={{\r\n                // eslint-disable-next-line\r\n                ['cuotas']: cantCuotas\r\n            }}>\r\n                 <Row>\r\n                    <Col span={17}>\r\n                        <Form.Item\r\n                            name=\"id_cliente\"\r\n                            label=\"Cliente\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Seleccione un cliente',\r\n                                }\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Seleccione un cliente\"\r\n                                style={{ width: 245 }}\r\n                                allowClear\r\n                                showSearch\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                            >\r\n                                {\r\n                                    props.clientes.map(cliente =>\r\n                                        <Option key={cliente.key} value={cliente.key}>{ `${cliente.nombre} ${cliente.apellido}` }</Option>\r\n                                    )\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                        <Tooltip title=\"Nuevo cliente\">\r\n                            <a href=\"#/clientes\" target=\"_blank\" style={{ margin: \"0 8px\" }}>\r\n                                Registrar cliente\r\n                            </a>\r\n                        </Tooltip>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col span={10}>\r\n                        <Form.Item\r\n                            name=\"velocidad\"\r\n                            label=\"Velocidad\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Requerido',\r\n                                },\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <InputNumber\r\n                                min={1}\r\n                                max={100}\r\n                                step={1}\r\n                                placeholder=\"Velocidad\"\r\n                                formatter={value => `${value}Mb`}\r\n                                parser={value => value.replace(/(M|b)/g, '')}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={10} offset={1}>\r\n                        <Form.Item\r\n                            name=\"precio_cuota\"\r\n                            label=\"$ Cuota\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Requerido',\r\n                                },\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <InputNumber\r\n                                step={0.01}\r\n                                min={15}\r\n                                max={100}\r\n                                placeholder=\"Cuota\"\r\n                                formatter={value => `$ ${value} `.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                                parser={value => value.replace(/\\$\\s?|\\s|(,*)/g, '')}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form.Item\r\n                    name=\"ip\"\r\n                    label=\"Red/IP\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[{ required: true, message: 'Seleccione la IP' }]}\r\n                    hasFeedback\r\n                    validateStatus={stValidacionIP}\r\n                    help={msgValidacionIP}\r\n                >\r\n                    <Input disabled={record} addonBefore={selectRedes} onChange={ev => setIP(ev.target.value)} style={{ width: 200 }} placeholder=\"IP\" onBlur={validarIP} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"cuotas\"\r\n                    label=\"# Cuotas\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Requerido',\r\n                        },\r\n                    ]}\r\n                    requiredMark=\"optional\"\r\n                >\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={100}\r\n                        step={1}\r\n                        placeholder=\"Cant. cuotas\"\r\n                        onBlur={ev => {\r\n                            let cnt = ev.target.value;\r\n                            setFechaFin(null);\r\n                            setCantCuotas(cnt)\r\n\r\n                            if (!fechaInicio || !cnt) return;\r\n\r\n                            let fecha = moment(fechaInicio.get());\r\n                            setFechaFin(fecha.add(cnt - 1, 'M'));\r\n                        }}\r\n                        disabled={record}\r\n                    />\r\n                </Form.Item>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            name=\"fecha_inicio\"\r\n                            label=\"Fecha de inicio\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Fecha requerida'\r\n                                }\r\n                            ]}\r\n\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <DatePicker\r\n                                placeholder=\"Fecha de inicio\"\r\n                                picker=\"month\"\r\n                                format=\"MMMM-YYYY\"\r\n                                locale={locale}\r\n                                disabledDate={current => {\r\n                                    return current && current < moment().subtract(1, 'y')\r\n                                }}\r\n                                onChange={date => {\r\n                                    setFechaInicio(null)\r\n                                    setFechaFin(null);\r\n\r\n                                    if (!date || !cantCuotas) return;\r\n\r\n                                    date.set('date', 3);\r\n                                    setFechaInicio(date)\r\n                                    let fecha = moment(date.get());\r\n                                    setFechaFin(fecha.add(cantCuotas - 1, 'M'));\r\n                                }}\r\n                                disabled={record}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={10} offset={1}>\r\n                        {\r\n                            fechaFin && <span>Fecha fin: <strong >{fechaFin.format('MMMM-YYYY')}</strong></span>\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDatos;\r\n","import React, { Component } from \"react\";\nimport {\n    message,\n    Modal,\n    Tooltip,\n    Badge,\n    Space,\n    PageHeader,\n    Input,\n    Button,\n} from \"antd\";\nimport {\n    ExclamationCircleOutlined,\n    EditOutlined,\n    StopOutlined,\n    DeleteOutlined,\n    CloudDownloadOutlined,\n} from \"@ant-design/icons\";\nimport app from \"../../firebaseConfig\";\nimport { connect } from \"react-redux\";\nimport { push } from \"connected-react-router\";\nimport Tabla from \"../Tabla\";\nimport ModalDatos from \"./ModalDatos\";\nimport ModalDetalle from \"./ModalDetalle\";\nimport ModalDesactivar from \"./ModalDesactivar\";\nimport ModalDetalleCliente from \"../clientes/ModalDetalle\";\nimport Contrato from \"../reportes/Contrato\";\nimport { pdf } from \"@react-pdf/renderer\";\nimport moment from 'moment';\n\nconst { confirm } = Modal;\nconst { Search } = Input;\n\nconst opcFecha = { year: \"numeric\", month: \"short\" };\n\nconst capitalize = (s) => {\n    if (typeof s !== \"string\") return s;\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nconst verFecha = (fecha) => {\n    return capitalize(fecha.toDate().toLocaleDateString(\"es-SV\", opcFecha));\n};\n\nconst cFecha = (fecha) => {\n    if (fecha) return fecha.toDate();\n    else return new Date();\n}\n\nconst colorEstado = (estado) => {\n    let ret = { color: '#000' };\n    switch (estado) {\n        case 'activo':\n            ret.color = '#15d733';\n            break;\n        case 'inactivo':\n            ret.color = '#f67a2c';\n            break;\n        case 'finalizado':\n            ret.color = '#3388f5';\n            break;\n        default:\n            break;\n    }\n\n    return ret;\n}\n\nclass Contratos extends Component {\n    constructor(props) {\n        super(props);\n\n        this.refContratos = app.firestore().collection(\"contratos\");\n        this.refClientes = app.firestore().collection(\"clientes\");\n        this.refRedes = app.firestore().collection(\"redes\");\n        this.refIPs = app.firestore().collection('ips');\n        this.refPagos = app.firestore().collection(\"pagos\");\n        this.refMantenimientos = app.firestore().collection(\"mantenimientos\");\n\n        this.unsubscribe = null;\n        this.state = {\n            user: props.user.user,\n            loading: true,\n            contratos: [],\n            clientes: [],\n            redes: [],\n            visible: false,\n            registro: null,\n            modalDesactivar: false,\n            modalDetalle: false,\n            modalDetalleCliente: false,\n            codigoCliente: null,\n        };\n    }\n\n    formatoDinero = (num) =>\n        new Intl.NumberFormat(\"es-SV\", {\n            style: \"currency\",\n            currency: \"USD\",\n        }).format(num);\n\n    obtenerContratos = (querySnapshot) => {\n        const contratos = [];\n        const { busqueda } = this.state;\n\n        querySnapshot.forEach(async (doc) => {\n            let {\n                cliente,\n                dui_cliente,\n                estado,\n                codigo,\n                fecha_inicio,\n                fecha_fin,\n                velocidad,\n                cant_cuotas,\n                precio_cuota,\n                red,\n                ip,\n                ref_cliente,\n                fecha_ingreso,\n                usuario\n            } = doc.data();\n\n            if (\n                busqueda &&\n                cliente.toLowerCase().indexOf(busqueda) === -1 &&\n                codigo.toLowerCase().indexOf(busqueda) === -1 &&\n                verFecha(fecha_inicio).toLowerCase().indexOf(busqueda) === -1 &&\n                verFecha(fecha_fin).toLowerCase().indexOf(busqueda) === -1 &&\n                usuario.toLowerCase().indexOf(busqueda) === -1\n            )\n                return;\n\n            contratos.push({\n                key: doc.id,\n                cliente,\n                dui_cliente,\n                codigo,\n                estado,\n                fecha_inicio,\n                fecha_fin,\n                velocidad,\n                cant_cuotas,\n                precio_cuota,\n                red,\n                ip,\n                ref_cliente,\n                fecha_ingreso,\n                usuario\n            });\n        });\n        this.setState({\n            contratos,\n            loading: false,\n        });\n    };\n\n    obtenerRedes = (querySnapshot) => {\n        const redes = [];\n\n        querySnapshot.forEach((doc) => {\n            let { numero } = doc.data();\n\n            redes.push({\n                key: doc.id,\n                numero: numero,\n            });\n        });\n\n        this.setState({\n            redes,\n        });\n    };\n\n    obtenerClientes = (querySnapshot) => {\n        const clientes = [];\n\n        querySnapshot.forEach((doc) => {\n            let { dui, nombre, apellido } = doc.data();\n\n            clientes.push({\n                key: doc.id,\n                dui,\n                nombre,\n                apellido,\n            });\n        });\n\n        this.setState({\n            clientes,\n        });\n    };\n\n    componentDidMount() {\n        this.unsubscribe = this.refContratos\n            .orderBy(\"fecha_ingreso\", \"desc\")\n            .onSnapshot(this.obtenerContratos);\n        this.refClientes\n            .orderBy(\"fecha_creacion\", \"desc\")\n            .onSnapshot(this.obtenerClientes);\n        this.refRedes.orderBy(\"numero\").onSnapshot(this.obtenerRedes);\n    }\n\n    componentDidUpdate(prevState, newState) {}\n\n    buscar(valor) {\n        if (valor.toLowerCase() !== this.state.busqueda) {\n            this.setState({ loading: true });\n            this.setState({ busqueda: valor.toLowerCase() });\n            this.refContratos\n                .get()\n                .then((querySnapshot) => this.obtenerContratos(querySnapshot));\n        }\n    }\n\n    modalData = (record) => {\n        this.setState({\n            visible: true,\n            registro: record,\n        });\n    };\n\n    modalDesactivarContrato = (record) => {\n        this.setState({\n            modalDesactivar: true,\n            registro: record,\n        });\n    }\n\n    handleCancel = () => {\n        this.setState({\n            modalDetalle: false,\n            modalDetalleCliente: false,\n            modalDesactivar: false,\n            visible: false,\n            registro: null,\n        });\n    };\n\n    irA = (ruta) => {\n        this.unsubscribe();\n        this.props.dispatch(push(`contratos/${ruta}`));\n    };\n\n    verDetalle = (record) => {\n        this.setState({ registro: record });\n        this.setState({ modalDetalle: true });\n    };\n\n    verDetalleCliente = (record) => {\n        this.setState({ codigoCliente: record.ref_cliente.id });\n        this.setState({ modalDetalleCliente: true });\n    };\n\n    download = async (record) => {\n        let cliente = null;\n        await record.ref_cliente.get()\n        .then(doc => cliente = doc.data())\n        .catch(error => {\n            message.error('¡Ocurrió un error al obtener la información del cliente!')\n        })\n\n        if (!cliente) return;\n\n        pdf(Contrato({ contrato: record, cliente: cliente }))\n            .toBlob()\n            .then((file) => {\n                var csvURL = window.URL.createObjectURL(file);\n                let tempLink = document.createElement(\"a\");\n                tempLink.href = csvURL;\n                tempLink.setAttribute(\n                    \"download\",\n                    `Contrato ${record.codigo}.pdf`\n                );\n                tempLink.click();\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n\n    columnas = this.asignarColumnas();\n\n    asignarColumnas() {\n        return [\n            {\n                title: \"Código\",\n                key: \"codigo\",\n                sorter: {\n                    compare: (a, b) => a.red.toString().localeCompare(b.red.toString()),\n                },\n                filters: [],\n                onFilter: (value, record) => record.codigo.indexOf(value) === 0,\n                render: (record) => (\n                    <Button type=\"link\" onClick={() => this.verDetalle(record)}>\n                        <strong>{record.codigo}</strong>\n                    </Button>\n                ),\n            },\n            {\n                title: \"Cliente\",\n                key: \"cliente\",\n                sorter: (a, b) => a.cliente.localeCompare(b.cliente),\n                render: (record) => (\n                    <Button\n                        type=\"link\"\n                        onClick={() => this.verDetalleCliente(record)}\n                    >\n                        <strong>{record.cliente}</strong>\n                    </Button>\n                ),\n            },\n            {\n                title: \"Velocidad\",\n                key: \"velocidad\",\n                sorter: (a, b) => a.velocidad.toString().localeCompare(b.velocidad.toString()),\n                filters: [],\n                onFilter: (value, record) => record.velocidad === value,\n                render: (record) => (\n                    <>\n                        <Badge\n                            count={`${record.velocidad} Mb`}\n                            style={{ backgroundColor: \"#52c41a\" }}\n                        />\n                    </>\n                ),\n            },\n            {\n                title: \"Precio\",\n                key: \"precio_cuota\",\n                sorter: (a, b) => a.precio_cuota.toString().localeCompare(b.precio_cuota.toString()),\n                render: (record) => (\n                    <strong>\n                        <span style={{ color: \"#089D6C\", fontSize: \"1.2em\" }}>\n                            {this.formatoDinero(record.precio_cuota)}\n                        </span>\n                    </strong>\n                ),\n            },\n            {\n                title: \"Fecha inicio\",\n                key: \"fecha_inicio\",\n                sorter: (a, b) => moment(cFecha(a.fecha_inicio)).unix() - moment(cFecha(b.fecha_inicio)).unix(),\n                render: (record) => (\n                    <span>\n                        {verFecha(record.fecha_inicio)}\n                    </span>\n                )\n            },\n            {\n                title: \"Fecha fin\",\n                key: \"fecha_fin\",\n                sorter: (a, b) => moment(cFecha(a.fecha_fin)).unix() - moment(cFecha(b.fecha_fin)).unix(),\n                render: (record) => (\n                    <span>\n                        {verFecha(record.fecha_fin)}\n                    </span>\n                )\n            },\n            {\n                title: \"Estado\",\n                key: \"estado\",\n                filters: [\n                    {\n                        text: 'Activo',\n                        value: 'activo',\n                    },\n                    {\n                        text: 'Finalizado',\n                        value: 'finalizado',\n                    },\n                    {\n                        text: 'Inactivo',\n                        value: 'inactivo',\n                    }\n                ],\n                onFilter: (value, record) => record.estado.indexOf(value) === 0,\n                sorter: (a, b) => a.estado.toString().localeCompare(b.estado.toString()),\n                render: (record) => (\n                    <strong>\n                        <span style={colorEstado(record.estado)}>\n                            {record.estado}\n                        </span>\n                    </strong>\n                ),\n            },\n            {\n                title: \"Opciones\",\n                key: \"opciones\",\n                render: (record) => (\n                    <Space size=\"middle\">\n                        <Tooltip title=\"Descargar\">\n                            <CloudDownloadOutlined\n                                key=\"download\"\n                                onClick={() => this.download(record)}\n                                style={{ color: \"#389e0d\" }}\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Editar\">\n                            <EditOutlined\n                                onClick={() => this.modalData(record)}\n                                style={{ color: \"#fa8c16\" }}\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Dar de baja\">\n                            <StopOutlined\n                                onClick={() => this.desactivar(record)}\n                                style={{ color: \"#203acc\" }}\n                            />\n                        </Tooltip>\n                        <Tooltip title=\"Eliminar\">\n                            <DeleteOutlined\n                                onClick={() => this.eliminar(record)}\n                                style={{ color: \"#f5222d\" }}\n                            />\n                        </Tooltip>\n                    </Space>\n                ),\n            },\n        ];\n    }\n\n    confirmEliminar = (contrato) => {\n        let me = this;\n        confirm({\n            title: \"¿Está seguro que desea eliminar este registro?\",\n            icon: <ExclamationCircleOutlined />,\n            content: \"Eliminar contrato\",\n            okText: \"Sí\",\n            cancelText: \"No\",\n            onOk() {\n                me.eliminarContrato(contrato);\n            },\n        });\n    };\n\n    pagosMantenimientosContrato = async (contrato) => {\n        return new Promise((resolve, reject) => {\n            this.refPagos\n                .where(\"codigo_contrato\", \"==\", contrato.codigo)\n                .limit(1)\n                .get()\n                .then((qs) => {\n                    if (qs.size === 0) {\n                        this.refMantenimientos\n                            .where(\"codigo_contrato\", \"==\", contrato.codigo)\n                            .limit(1)\n                            .get()\n                            .then((qs) => {\n                                resolve(qs.size);\n                            });\n                    } else {\n                        resolve(qs.size);\n                    }\n                })\n                .catch((err) => reject(err));\n        });\n    };\n\n    // Se eliminan los contratos, pero no las cuotas\n    eliminarContrato = (contrato) => {\n        this.refContratos\n            .doc(contrato.key)\n            .delete()\n            .then(() => {\n\n                this.refIPs\n                .doc(`${contrato.red}-${contrato.ip}`)\n                .get()\n                .then(d_ip => {\n                    d_ip.ref.update({ libre: true })\n                })\n                message.success(\"Se eliminó el registro\")\n            })\n            .catch((err) => message.error(\"Ocurrió un error\"));\n    };\n\n    desactivar = async (record) => {\n        if (record.estado !== 'activo') {\n            message.error('¡Este contrato no se puede desactivar porque no está activo!');\n            return;\n        }\n\n        let me = this;\n        confirm({\n            title: \"¿Está seguro que desea dar de baja a este contrato?\",\n            icon: <ExclamationCircleOutlined />,\n            content: \"Desactivar contrato\",\n            okText: \"Sí\",\n            cancelText: \"No\",\n            onOk() {\n                me.modalDesactivarContrato(record);\n            },\n        });\n    };\n\n    eliminar = async (record) => {\n        message.loading(\"Verificando...\");\n        this.pagosMantenimientosContrato(record).then((size) => {\n            message.destroy();\n            if (size === 0) this.confirmEliminar(record);\n            else if (size >= 1) message.error(\"No se puede eliminar este contrato porque ya se registraron pagos o mantenimientos\");\n        });\n    };\n\n    render() {\n        const {\n            contratos,\n            loading,\n            visible,\n            registro,\n            clientes,\n            redes,\n            codigoCliente,\n            modalDetalle,\n            modalDetalleCliente,\n            modalDesactivar,\n            user\n        } = this.state;\n\n        return (\n            <div>\n                {visible && (\n                    <ModalDatos\n                        visible={visible}\n                        title={ registro ? \"Editar información\" : \"Nuevo contrato\" }\n                        user={user}\n                        clientes={clientes}\n                        redes={redes}\n                        handleCancel={this.handleCancel}\n                        record={registro}\n                        fireRef={this.refContratos}\n                    />\n                )}\n                {modalDetalle && (\n                    <ModalDetalle\n                        visible={modalDetalle}\n                        codigoContrato={registro.key}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                {modalDetalleCliente && (\n                    <ModalDetalleCliente\n                        visible={modalDetalleCliente}\n                        codigoCliente={codigoCliente}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                {modalDesactivar && (\n                    <ModalDesactivar\n                        visible={modalDesactivar}\n                        codigoContrato={registro.key}\n                        handleCancel={this.handleCancel}\n                    />\n                )}\n                <PageHeader\n                    className=\"site-page-header\"\n                    title=\"Contratos\"\n                    subTitle=\"Lista de contratos\"\n                    extra={[\n                        <Search\n                            key=\"1\"\n                            placeholder=\"Buscar\"\n                            onSearch={(value) => this.buscar(value)}\n                            style={{ width: 200 }}\n                        />,\n                        <Button\n                            key=\"2\"\n                            type=\"primary\"\n                            ghost\n                            onClick={() => this.modalData()}\n                        >\n                            Nuevo\n                        </Button>,\n                    ]}\n                />\n                {!this.columnas[0].filters.length && // eslint-disable-next-line\n                    redes.map((red) => {\n                        this.columnas[0].filters.push({\n                            text: `Red ${red.numero}`,\n                            value: `R${red.numero}`,\n                        });\n                    })}\n                {!this.columnas[2].filters.length &&\n                    contratos\n                        .map((contrato) => contrato.velocidad)\n                        .filter(\n                            (value, index, self) =>\n                                self.indexOf(value) === index\n                        )\n                        .sort((a, b) => a - b) // eslint-disable-next-line\n                        .map((velocidad) => {\n                            this.columnas[2].filters.push({\n                                text: `${velocidad} Mb`,\n                                value: velocidad,\n                            });\n                        })}\n                <Tabla\n                    columnas={this.columnas}\n                    data={contratos}\n                    loading={loading}\n                />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        user: state.user,\n    };\n}\n\nexport default connect(mapStateToProps)(Contratos);\n","import React, { useState, useEffect } from 'react';\r\nimport { DatePicker, Divider, Select, message, Form, Input, Modal, Button } from 'antd';\r\nimport moment from 'moment';\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nimport TextArea from 'antd/lib/input/TextArea';\r\nimport firebase from 'firebase';\r\n\r\nconst { Option } = Select;\r\n\r\nconst ModalDatos = (props) => {\r\n    const [form] = Form.useForm();\r\n    const { mainRef, record, redes, user } = props;\r\n\r\n    const refContrato = mainRef.collection('contratos');\r\n    const refMantenimiento = mainRef.collection('mantenimientos');\r\n\r\n    const [red, setRed] = useState(null);\r\n    const [ip, setIP] = useState(null);\r\n    const [stValidacionIP, setStValidacionIP] = useState(null);\r\n    const [msgValidacionIP, setMsgValidacionIP] = useState(null);\r\n    const [contrato, setContrato] = useState(null);\r\n    const [fecha, setFecha] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!record) {\r\n            form.resetFields();\r\n            return\r\n        }\r\n\r\n        refContrato.doc(record.codigo_contrato)\r\n        .get()\r\n        .then(doc => {\r\n            if (doc.exists) {\r\n                let d_contrato = doc.data();\r\n\r\n                setRed(d_contrato.red);\r\n                setIP(d_contrato.ip);\r\n                setContrato(d_contrato);\r\n                setFecha(new Date(record.fecha));\r\n\r\n                form.setFieldsValue({\r\n                    red: d_contrato.red,\r\n                    ip: d_contrato.ip,\r\n                    fecha: moment(record.fecha),\r\n                    direccion: record.direccion,\r\n                    motivo: record.motivo,\r\n                    descripcion: record.descripcion\r\n                });\r\n            }\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [record, form, mainRef]);\r\n\r\n    useEffect(() => {\r\n        if (ip) validarContrato();\r\n        // eslint-disable-next-line\r\n    }, [red]);\r\n\r\n    const handleOk = async () => {\r\n        setLoading(true);\r\n        await form\r\n        .validateFields()\r\n        .then(async val => {\r\n            if (!(await validarContrato())) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            if (record) { // Si se debe editar\r\n                editarRegistro(val).then(() => {\r\n                    form.resetFields();\r\n                    props.handleCancel()\r\n                })\r\n                .catch(error => {\r\n                    console.log(`Hubo un error al editar el registro: ${error}`)\r\n                })\r\n            } else {\r\n                agregarRegistro(val).then(() => {\r\n                    form.resetFields();\r\n                    props.handleCancel()\r\n                })\r\n                .catch(error => {\r\n                    console.log(`Hubo un error al agregar el registro: ${error}`)\r\n                })\r\n            }\r\n        })\r\n        .catch(info => {\r\n            console.log('Validate Failed:', info);\r\n        })\r\n        .finally(() => {\r\n            setLoading(false)\r\n        });\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    const agregarRegistro = async (val) => {\r\n        refMantenimiento.add({\r\n            eliminado: false,\r\n            fecha: fecha,\r\n            codigo_contrato: contrato.codigo,\r\n            nombre_cliente: contrato.cliente,\r\n            ref_cliente: contrato.ref_cliente,\r\n            direccion: val.direccion,\r\n            motivo: val.motivo,\r\n            descripcion: val.descripcion,\r\n            fecha_creacion: firebase.firestore.Timestamp.now(),\r\n            usuario: user.email\r\n        })\r\n        .then((docRef) => {\r\n            message.success('¡Registro insertado correctamente!');\r\n        })\r\n        .catch((error) => {\r\n            message.error('Error al insertar el registro');\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    // // eslint-disable-next-line\r\n    const editarRegistro = async (val) => {\r\n        refMantenimiento.doc(record.key)\r\n        .update({\r\n            fecha: fecha,\r\n            codigo_contrato: contrato.codigo,\r\n            nombre_cliente: contrato.cliente,\r\n            ref_cliente: contrato.ref_cliente,\r\n            direccion: val.direccion,\r\n            motivo: val.motivo,\r\n            descripcion: val.descripcion,\r\n        }).then(() => {\r\n            message.success('¡Registro actualizado correctamente!');\r\n        })\r\n        .catch((error) => {\r\n            message.error('Error al editar el registro');\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    const selectRedes = (\r\n        <Form.Item name=\"red\" noStyle>\r\n            <Select\r\n                style={{ width: 70 }}\r\n                placeholder=\"Red\"\r\n                onSelect={val => {\r\n                    setRed(val);\r\n                }}\r\n            >\r\n                {\r\n                redes.map(red =>\r\n                    <Option key={red.key} value={red.numero}>{red.numero}</Option>\r\n                )\r\n                }\r\n            </Select>\r\n        </Form.Item>\r\n    );\r\n\r\n    const validarContrato = async () => {\r\n        setStValidacionIP('validating');\r\n        setMsgValidacionIP(null);\r\n        let result = false;\r\n\r\n        try {\r\n            if (!red) throw new Error('Seleccione la red')\r\n            if (!ip) throw new Error('Introduzca la direccion IP')\r\n            if (ip <= 0 || ip >= 255 || isNaN(ip)) throw new Error('La IP ingresada no es válida')\r\n\r\n            await refContrato.where('red', '==', red).where('ip', '==', ip).where('eliminado', '==', false)\r\n            .get()\r\n            .then(qs => {\r\n                setContrato(null);\r\n                setStValidacionIP(null);\r\n\r\n                if (qs.size === 0) throw new Error('No se encontró un contrato con esos datos');\r\n\r\n                qs.forEach(doc => {\r\n                    setContrato(doc.data());\r\n                    setStValidacionIP('success');\r\n                    result = true;\r\n                    return; // Este solo detiene el foreach, no devuelve nada\r\n                })\r\n            })\r\n            .catch(error => {\r\n                throw error;\r\n            })\r\n        } catch (error) {\r\n            setStValidacionIP('error');\r\n            setMsgValidacionIP(error.message);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            key=\"data-modal\"\r\n            visible={props.visible}\r\n            title={props.title}\r\n            onOk={handleOk}\r\n            onCancel={props.handleCancel}\r\n            footer={[\r\n                <div key=\"footer-options\">\r\n                    <Button key=\"back\" onClick={props.handleCancel}>\r\n                        Regresar\r\n                    </Button>\r\n                    <Button key=\"submit\" type=\"primary\" loading={loading} onClick={handleOk}>\r\n                        Guardar\r\n                    </Button>\r\n                </div>\r\n            ]}\r\n        >\r\n            <Form form={form}>\r\n                <Form.Item\r\n                    name=\"ip\"\r\n                    label=\"Red/IP\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[{ required: true, message: 'Seleccione la IP' }]}\r\n                    hasFeedback\r\n                    validateStatus={stValidacionIP}\r\n                    help={msgValidacionIP}\r\n                >\r\n                    <Input addonBefore={selectRedes} onChange={ev => setIP(Number(ev.target.value))} style={{ width: 200 }} placeholder=\"IP\" onBlur={validarContrato} />\r\n                </Form.Item>\r\n                <Divider style={{ margin: '7px 0' }} />\r\n                <span style={{ lineHeight: 2.5 }}>\r\n                    Contrato: <strong>{contrato ? contrato.codigo : '[Ninguno]'}</strong>\r\n                </span> <br />\r\n                <span style={{ lineHeight: 2.5 }}>\r\n                    Cliente: <strong>{contrato ? contrato.cliente : '[Ninguno]'}</strong>\r\n                </span> <br />\r\n\r\n                <Form.Item\r\n                    name=\"fecha\"\r\n                    label=\"Fecha\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Fecha requerida'\r\n                        }\r\n                    ]}\r\n                    requiredMark=\"optional\"\r\n                    style={{ marginTop: 15 }}\r\n                >\r\n                    <DatePicker\r\n                        placeholder=\"Fecha\"\r\n                        format=\"DD-MMMM-YYYY\"\r\n                        locale={locale}\r\n                        disabledDate={current => {\r\n                            // eslint-disable-next-line\r\n                            return current && (current < moment().subtract(1, 'y') || current && current > moment().endOf('day'))\r\n                        }}\r\n                        onChange={date => {\r\n                            setFecha(new Date(date));\r\n                        }}\r\n                        style={{ width: 170 }}\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"direccion\"\r\n                    label=\"Dirección\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introduzca la dirección'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input placeholder=\"Dirección donde se hizo la visita\" maxLength=\"80\" style={{ width: 300 }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"motivo\"\r\n                    label=\"Motivo\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introducir el motivo del mantenimiento'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input placeholder=\"Motivo de la visita\" maxLength=\"50\" style={{ width: 300 }} />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"descripcion\"\r\n                    label=\"Detalles\"\r\n                    requiredMark=\"optional\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Introduzca los detalles de la visita'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <TextArea style={{ width: 320 }} placeholder=\"Detalles de la visita\" />\r\n                </Form.Item>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalDatos;\r\n","import React, { Component } from \"react\";\r\nimport Tabla from \"../Tabla\";\r\nimport {\r\n    message,\r\n    Tooltip,\r\n    Modal,\r\n    Space,\r\n    Button,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Popover,\r\n} from \"antd\";\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    ExclamationCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport DetalleCliente from \"../clientes/ModalDetalle\";\r\nimport DetalleContrato from \"../contratos/ModalDetalle\";\r\nimport ModalDatos from \"./ModalDatos\";\r\nimport app from \"../../firebaseConfig\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { confirm } = Modal;\r\nconst { Search } = Input;\r\n\r\nlet opcFecha = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\r\n\r\nconst cFecha = (fecha) => {\r\n    if (fecha) return fecha.toDate();\r\n    else return new Date();\r\n};\r\n\r\nclass Mantenimientos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.mainRef = app.firestore();\r\n        this.refMantenimiento = this.mainRef.collection(\"mantenimientos\");\r\n        this.refRedes = this.mainRef.collection(\"redes\");\r\n\r\n        this.state = {\r\n            user: props.user.user,\r\n            busqueda: \"\",\r\n            loading: true,\r\n            mantenimientos: [],\r\n            visible: false,\r\n            registro: null,\r\n            redes: [],\r\n            codigoContrato: \"\",\r\n            codigoCliente: \"\",\r\n            detalleContrato: false,\r\n            detalleCliente: false,\r\n        };\r\n    }\r\n\r\n    obtenerMantenimientos = (qs) => {\r\n        const mantenimientos = [];\r\n        const { busqueda } = this.state;\r\n        this.setState({ loading: true });\r\n\r\n        qs.forEach((doc) => {\r\n            const {\r\n                codigo_contrato,\r\n                nombre_cliente,\r\n                fecha,\r\n                direccion,\r\n                motivo,\r\n                descripcion,\r\n                ref_cliente,\r\n            } = doc.data();\r\n\r\n            if (\r\n                busqueda &&\r\n                codigo_contrato.toLowerCase().indexOf(busqueda) === -1 &&\r\n                nombre_cliente.toLowerCase().indexOf(busqueda) === -1 &&\r\n                direccion.toLowerCase().indexOf(busqueda) === -1 &&\r\n                motivo.toLowerCase().indexOf(busqueda) === -1 &&\r\n                descripcion.toLowerCase().indexOf(busqueda) === -1\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            mantenimientos.push({\r\n                key: doc.id, // Necesario para que se agregue automáticamente en cada registro\r\n                nombre_cliente,\r\n                codigo_contrato,\r\n                direccion,\r\n                motivo,\r\n                descripcion,\r\n                fecha,\r\n                ref_cliente,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            mantenimientos, // Establecer la lista de mantenimientos\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refMantenimiento\r\n            .orderBy(\"fecha_creacion\", \"desc\")\r\n            .onSnapshot(this.obtenerMantenimientos);\r\n        this.refRedes.orderBy(\"numero\").onSnapshot(this.obtenerRedes);\r\n    }\r\n\r\n    buscar(valor) {\r\n        if (valor !== this.state.busqueda) {\r\n            this.setState({ busqueda: valor.toLowerCase() });\r\n            this.refMantenimiento\r\n                .get()\r\n                .then((qs) => this.obtenerMantenimientos(qs));\r\n        }\r\n    }\r\n\r\n    columnas = this.asignarColumnas();\r\n\r\n    asignarColumnas() {\r\n        return [\r\n            {\r\n                title: \"Contrato\",\r\n                key: \"codigo_contrato\",\r\n                sorter: (a, b) =>\r\n                    a.codigo_contrato\r\n                        .substr(1)\r\n                        .localeCompare(b.codigo_contrato.substr(1)),\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() =>\r\n                            this.verDetalleContrato(record.codigo_contrato)\r\n                        }\r\n                    >\r\n                        <strong>{record.codigo_contrato}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Cliente\",\r\n                key: \"nombre_cliente\",\r\n                sorter: (a, b) =>\r\n                    a.nombre_cliente.localeCompare(b.nombre_cliente),\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() =>\r\n                            this.verDetalleCliente(record.ref_cliente.id)\r\n                        }\r\n                    >\r\n                        <strong>{record.nombre_cliente}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Fecha\",\r\n                key: \"fecha\",\r\n                sorter: (a, b) =>\r\n                    moment(cFecha(a.fecha)).unix() -\r\n                    moment(cFecha(b.fecha)).unix(),\r\n                render: (record) => (\r\n                    <strong>\r\n                        {cFecha(record.fecha).toLocaleString(\"es-SV\", opcFecha)}\r\n                    </strong>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Dirección\",\r\n                key: \"direccion\",\r\n                sorter: (a, b) => a.direccion.localeCompare(b.direccion),\r\n                render: (record) => <span>{record.direccion}</span>,\r\n            },\r\n            {\r\n                title: \"Motivo\",\r\n                key: \"motivo\",\r\n                sorter: (a, b) => a.motivo.localeCompare(b.motivo),\r\n                render: (record) => (\r\n                    <Popover\r\n                        content={\r\n                            <div style={{ width: 400 }}>\r\n                                {record.descripcion}\r\n                            </div>\r\n                        }\r\n                        title=\"Detalle\"\r\n                    >\r\n                        {record.motivo}\r\n                    </Popover>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Opciones\",\r\n                key: \"opciones\",\r\n                render: (record) => (\r\n                    <Space align=\"center\">\r\n                        <Tooltip title=\"Editar\">\r\n                            <EditOutlined\r\n                                onClick={() => this.modalData(record)}\r\n                                style={{ color: \"#fa8c16\" }}\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Eliminar\">\r\n                            <DeleteOutlined\r\n                                onClick={() => this.eliminar(record)}\r\n                                style={{ color: \"#f5222d\" }}\r\n                            />\r\n                        </Tooltip>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n    }\r\n\r\n    eliminar = (mantenimiento) => {\r\n        let me = this;\r\n        confirm({\r\n            title: \"¿Está seguro que desea eliminar este registro?\",\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: \"Eliminar mantenimiento\",\r\n            okText: \"Sí\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                me.eliminarMantenimiento(mantenimiento);\r\n            },\r\n        });\r\n    };\r\n\r\n    eliminarMantenimiento = (mantenimiento) => {\r\n        this.refMantenimiento\r\n            .doc(mantenimiento.key)\r\n            .delete()\r\n            .then(() => message.success(\"Se eliminó el registro\"))\r\n            .catch((err) => message.error(\"Ocurrió un error\"));\r\n    };\r\n\r\n    modalData = (record) => {\r\n        this.setState({\r\n            visible: true,\r\n            registro: record,\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            visible: false,\r\n            registro: null,\r\n            detalleContrato: false,\r\n            detalleCliente: false,\r\n        });\r\n    };\r\n\r\n    verDetalleContrato = (codigo) => {\r\n        this.setState({ codigoContrato: codigo });\r\n        this.setState({ detalleContrato: true });\r\n    };\r\n\r\n    verDetalleCliente = (codigo) => {\r\n        this.setState({ codigoCliente: codigo });\r\n        this.setState({ detalleCliente: true });\r\n    };\r\n\r\n    obtenerRedes = (qs) => {\r\n        const redes = [];\r\n\r\n        qs.forEach((doc) => {\r\n            let { numero } = doc.data();\r\n\r\n            redes.push({\r\n                key: doc.id,\r\n                numero: numero,\r\n            });\r\n        });\r\n\r\n        this.setState({ redes });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            user,\r\n            visible,\r\n            registro,\r\n            mantenimientos,\r\n            loading,\r\n            redes,\r\n            detalleContrato,\r\n            detalleCliente,\r\n            codigoContrato,\r\n            codigoCliente,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <ModalDatos\r\n                    user={user}\r\n                    visible={visible}\r\n                    title={\r\n                        registro\r\n                            ? \"Editar información\"\r\n                            : \"Agregar mantenimiento\"\r\n                    }\r\n                    handleCancel={this.handleCancel}\r\n                    record={registro}\r\n                    mainRef={this.mainRef}\r\n                    redes={redes}\r\n                />\r\n                <Tabla\r\n                    titulo={\r\n                        <>\r\n                            <Row justify=\"space-between\">\r\n                                <Col span={4}>\r\n                                    <strong>Lista de mantenimientos</strong>\r\n                                </Col>\r\n                                <Col span={6} offset={4}>\r\n                                    <Space>\r\n                                        <Search\r\n                                            placeholder=\"Buscar\"\r\n                                            onSearch={(value) =>\r\n                                                this.buscar(value)\r\n                                            }\r\n                                            style={{ width: 200 }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            ghost\r\n                                            onClick={() => this.modalData()}\r\n                                        >\r\n                                            Nuevo\r\n                                        </Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                    columnas={this.columnas}\r\n                    data={mantenimientos}\r\n                    loading={loading}\r\n                />\r\n                {detalleContrato && (\r\n                    <DetalleContrato\r\n                        visible={detalleContrato}\r\n                        codigoContrato={codigoContrato}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n                {detalleCliente && (\r\n                    <DetalleCliente\r\n                        visible={detalleCliente}\r\n                        codigoCliente={codigoCliente}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        user: state.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Mantenimientos);\r\n","import React from 'react';\r\nimport { Page, Text, View, Document, StyleSheet, Font } from '@react-pdf/renderer';\r\n\r\nFont.register({ family: 'Courier New', src: `${process.env.PUBLIC_URL}/cour.ttf` });\r\n\r\nconst opcFecha = { year: \"numeric\", month: \"long\" };\r\nconst opcFecha2 = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n\r\nconst verFecha = (fecha, todo = false) => {\r\n    let opc = todo ? opcFecha2 : opcFecha;\r\n    return fecha.toDate().toLocaleString(\"es-SV\", opc);\r\n};\r\n\r\nconst formatoDinero = num => new Intl.NumberFormat(\"es-SV\", {style: \"currency\", currency: \"USD\"}).format(num);\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        // border: 1,\r\n        // borderColor: 'red',\r\n        width: 380,\r\n        margin: 8,\r\n    },\r\n    dateContanier: {\r\n        marginTop: 115,\r\n        marginLeft: 285,\r\n    },\r\n    dataValue: {\r\n        fontFamily: 'Courier New',\r\n        fontSize: 11\r\n    },\r\n    descriptionValue: {\r\n        fontFamily: 'Courier New',\r\n        fontSize: 8.4\r\n    },\r\n    nameContainer: {\r\n        marginTop: 15,\r\n        marginLeft: 60,\r\n    },\r\n    descriptionContainer: {\r\n        // border: 1,\r\n        // borderColor: 'blue',\r\n        marginTop: 5,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    quantityColum: {\r\n        // border: 1,\r\n        // borderColor: 'purple',\r\n        marginLeft: 10,\r\n        width: 25,\r\n        // textAlign: 'center'\r\n    },\r\n    divider: {\r\n        marginTop: 75,\r\n    },\r\n    descriptionColumn: {\r\n        // border: 1,\r\n        // borderColor: 'yellow',\r\n        width: 185,\r\n        paddingRight: 5,\r\n        textOverflow: 'hidden'\r\n    },\r\n    unitPriceColumn: {\r\n        // border: 1,\r\n        // borderColor: 'blue',\r\n        width: 40,\r\n        textAlign: 'center'\r\n    },\r\n    priceValue: {\r\n        fontFamily: 'Courier New',\r\n        fontSize: 9\r\n    },\r\n    taxedSalesColumn: {\r\n        // border: 1,\r\n        // borderColor: 'brown',\r\n        marginLeft: 'auto',\r\n        marginRight: 15,\r\n        width: 50\r\n    },\r\n    finalContainer: {\r\n        // border: 1,\r\n        // borderColor: 'red',\r\n        position: 'absolute',\r\n        marginTop: 440,\r\n        marginLeft: 10,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    textTotalContainer: {\r\n        // border: 1,\r\n        // borderColor: 'green',\r\n        marginLeft: 20,\r\n        width: 180\r\n    },\r\n    totalsContainer: {\r\n        display: 'flex',\r\n        // flexDirection: 'col'\r\n    },\r\n    sumsContainer: {\r\n        // border: 1,\r\n        // borderColor: 'red',\r\n        marginLeft: 104,\r\n        width: 50,\r\n        height: 16,\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst Item = props => {\r\n    const { pago } = props;\r\n\r\n    return (\r\n        <View style={styles.descriptionContainer}>\r\n            <View style={styles.quantityColum}>\r\n                <Text style={styles.dataValue}>1</Text>\r\n            </View>\r\n            <View style={styles.descriptionColumn}>\r\n                <Text style={styles.descriptionValue}>\r\n                    Pago de servicio de internet del mes de {verFecha(pago.fecha_cuota)}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.unitPriceColumn}>\r\n                <Text style={styles.priceValue}>\r\n                    {formatoDinero(pago.cantidad)}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.taxedSalesColumn}>\r\n                <Text style={styles.dataValue}>\r\n                    {formatoDinero(pago.cantidad)}\r\n                </Text>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst Factura = props => {\r\n    let { factura } = props;\r\n\r\n    let pagosMoraEx = factura.cuotas.filter(cuota => cuota.mora_exonerada && cuota.precio_mora > 0);\r\n    let pagosMora = factura.cuotas.filter(cuota => !cuota.mora_exonerada && cuota.precio_mora > 0);\r\n    let cantPagosMora = pagosMora.length;\r\n    let cantPagosMoraEx = pagosMoraEx.length;\r\n    let datoMora = null;\r\n    let mesesMora = '';\r\n    let mesesMoraEx = '';\r\n\r\n    if (cantPagosMora > 0) {\r\n        datoMora = {\r\n            cantidad: cantPagosMora,\r\n            precioUnitario: 3,\r\n            total: cantPagosMora * 3\r\n        };\r\n\r\n        pagosMora.forEach((pago, idx) => {\r\n            mesesMora += pago.fecha_cuota.toDate().toLocaleDateString('es-SV', { month: 'long', year: 'numeric' })\r\n            if (idx + 1 < cantPagosMora) mesesMora += ', '\r\n        })\r\n\r\n    }\r\n\r\n    if (cantPagosMoraEx > 0) {\r\n        pagosMoraEx.forEach((pago, idx) => {\r\n            mesesMoraEx += pago.fecha_cuota.toDate().toLocaleDateString('es-SV', { month: 'long', year: 'numeric' })\r\n            if (idx + 1 < cantPagosMoraEx) mesesMoraEx += ', '\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Document>\r\n            <Page size={[397, 595.2]} style={{ flexDirection: 'row' }}>\r\n                <View style={styles.mainContainer}>\r\n                    <View style={styles.dateContanier}>\r\n                        <Text style={styles.dataValue}>{factura.fecha.toDate().toLocaleDateString('es-SV', { year: \"numeric\", month: \"numeric\", day: \"numeric\" })}</Text>\r\n                    </View>\r\n                    <View style={styles.nameContainer}>\r\n                        <Text style={styles.dataValue}>{factura.nombre_cliente}</Text>\r\n                    </View>\r\n                    <View style={styles.divider} />\r\n                    {\r\n                        factura.cuotas.map(cuota => (\r\n                            <Item\r\n                                key={cuota.num_cuota}\r\n                                pago={cuota}\r\n                            />\r\n                        ))\r\n                    }\r\n                    {\r\n                        cantPagosMora > 0 &&\r\n                        <View style={styles.descriptionContainer}>\r\n                            <View style={styles.quantityColum}>\r\n                                <Text style={styles.dataValue}>{cantPagosMora}</Text>\r\n                            </View>\r\n                            <View style={styles.descriptionColumn}>\r\n                                <Text style={styles.descriptionValue}>\r\n                                    { `Pago de mora de ${mesesMora}` }\r\n                                </Text>\r\n                            </View>\r\n                            <View style={styles.unitPriceColumn}>\r\n                                <Text style={styles.priceValue}>\r\n                                    {formatoDinero(datoMora.precioUnitario)}\r\n                                </Text>\r\n                            </View>\r\n                            <View style={styles.taxedSalesColumn}>\r\n                                <Text style={styles.dataValue}>\r\n                                    {formatoDinero(datoMora.total)}\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n                    }\r\n                    {\r\n                        cantPagosMoraEx > 0 &&\r\n                        <View style={styles.descriptionContainer}>\r\n                            <View style={styles.quantityColum}>\r\n                                <Text style={styles.dataValue}></Text>\r\n                            </View>\r\n                            <View style={styles.descriptionColumn}>\r\n                                <Text style={styles.descriptionValue}>\r\n                                    { `Mora exonerada de ${mesesMoraEx}` }\r\n                                </Text>\r\n                            </View>\r\n                        </View>\r\n                    }\r\n\r\n                    <View style={styles.finalContainer}>\r\n                        <View style={styles.textTotalContainer}>\r\n                            <Text style={styles.dataValue}>{factura.total_letras}</Text>\r\n                        </View>\r\n                        <View style={styles.totalsContainer}>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>{formatoDinero(factura.total)}</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>-</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>-</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>-</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>{formatoDinero(factura.total)}</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>-</Text>\r\n                            </View>\r\n                            <View style={styles.sumsContainer}>\r\n                                <Text style={styles.dataValue}>{formatoDinero(factura.total)}</Text>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </Page>\r\n        </Document>\r\n    );\r\n}\r\n\r\nexport default Factura;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Space,\r\n    Table,\r\n    message,\r\n    Row,\r\n    Col,\r\n    DatePicker,\r\n    Select,\r\n    Form,\r\n    Input,\r\n    Modal,\r\n    Button,\r\n    Tooltip,\r\n    Divider,\r\n    Popover,\r\n} from \"antd\";\r\nimport {\r\n    ExceptionOutlined,\r\n    CalendarOutlined,\r\n    CheckCircleOutlined,\r\n    StopOutlined,\r\n    BarcodeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"moment/locale/es\";\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nimport app from \"../../firebaseConfig\";\r\nimport firebase from \"firebase\";\r\n\r\nconst NumerosALetras = require(\"../../NumerosALetras\");\r\n\r\nconst { Option } = Select;\r\n\r\nconst opcFecha = { year: \"numeric\", month: \"long\" };\r\nconst opcFecha2 = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n\r\nconst formatoDinero = (num) =>\r\n    new Intl.NumberFormat(\"es-SV\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    }).format(num);\r\n\r\nconst verFecha = (fecha, todo = false) => {\r\n    let opc = todo ? opcFecha2 : opcFecha;\r\n    return fecha.toDate().toLocaleString(\"es-SV\", opc);\r\n};\r\n\r\nconst fechaMayor = (fecha, fechaComparacion) => {\r\n    let f1 = (fecha instanceof Date) ? fecha : fecha.toDate();\r\n    let f2 = fechaComparacion.toDate();\r\n\r\n    if (f1.getYear() > f2.getYear()) return true;\r\n    // Verdadero si el año es mayor\r\n    else if (f1.getYear() < f2.getYear()) return false; // Falso si el año es menor\r\n\r\n    // En caso que el año sea el mismo:\r\n    if (f1.getMonth() > f2.getMonth()) return true;\r\n    // Verdadero si el mes es mayor\r\n    else if (f1.getMonth() < f2.getMonth()) return false; // Falso su el mes es menor\r\n\r\n    // En caso que también el mes sea el mismo:\r\n    if (f1.getDate() > f2.getDate()) return true; // Verdadero si el día es mayor\r\n\r\n    return false; // Falso si es el mismo día o si es menor\r\n};\r\n\r\nconst ModalDatos = (props) => {\r\n    const [form] = Form.useForm();\r\n    const { record, clientes, user } = props;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [contrato, setContrato] = useState(null);\r\n    const [contratos, setContratos] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [mora, setMora] = useState(0);\r\n    const [sumas, setSumas] = useState(0);\r\n    const [pagos, setPagos] = useState([]);\r\n    const [cuotas, setCuotas] = useState([]); // Para guardar los números de las cuotas facturadas\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [loadingPagos, setLoadingPagos] = useState(false);\r\n    const [stValidacionContrato, setStValidacionContrato] = useState(null);\r\n    const [msgValidacionContrato, setMsgValidacionContrato] = useState(null);\r\n\r\n    let refFacturas = app.firestore().collection(\"facturas\");\r\n    let refContratos = app.firestore().collection(\"contratos\");\r\n    let refPagos = app.firestore().collection(\"pagos\");\r\n\r\n    useEffect(() => {\r\n\r\n    }, []);\r\n\r\n    const zeroPad = (num, places) => String(num).padStart(places, \"0\");\r\n\r\n    const handleOk = async () => {\r\n        setLoading(true);\r\n\r\n        await form.validateFields()\r\n            .then(async (val) => {\r\n                if (pagos.length === 0) {\r\n                    message.error(\"¡No hay ningún pago a facturar!\");\r\n                    return;\r\n                }\r\n\r\n                let factura = {\r\n                    fecha: new Date(val.fecha),\r\n                    cantidad_pagos: pagos.length,\r\n                    cuotas: cuotas,\r\n                    mora: mora,\r\n                    sumas: Math.round(sumas * 100) / 100,\r\n                    total: Math.round(total * 100) / 100,\r\n                    total_letras: NumerosALetras.default(total),\r\n                    eliminado: false,\r\n                    codigo_contrato: contrato.codigo,\r\n                    nombre_cliente: contrato.cliente,\r\n                    ref_cliente: contrato.ref_cliente,\r\n                    fecha_creacion: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    usuario: user.email\r\n                };\r\n\r\n                // Agregar factura y actualizar estado de los pagos a 'facturado'\r\n                await refFacturas.add(factura)\r\n                .then(docRef => {\r\n                    pagos.forEach(pago => {\r\n                        pago.ref.update({ facturado: true });\r\n                    })\r\n                    message.success('¡Factura agregada correctamente!')\r\n                    form.resetFields();\r\n                    props.handleCancel()\r\n                })\r\n                .catch(error => {\r\n                    message.error('Ha ocurrido un error');\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                message.warning(\"¡Verifique la información ingresada!\");\r\n            })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            })\r\n    };\r\n\r\n    const agregarPago = async (codigo) => {\r\n        let code = codigo.replace(/ /g, '');\r\n\r\n        if (/\\d{20}/.test(code)) {\r\n            let exist = false;\r\n            let anteriorCancelado = false;\r\n            let _red = Number.parseInt(code.substr(0, 4));\r\n            let _ip = code.substr(5, 3);\r\n            let codContrato = `R${_red}-${_ip}-${code.substr(8, 4)}-${code.substr(12, 4)}`;\r\n\r\n            await refPagos\r\n                .doc(code)\r\n                .get()\r\n                .then((pago) => {\r\n                    if (pago.exists) {\r\n                        message.error(\"¡Esta cuota ya fue cancelada!\");\r\n                        exist = true;\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n\r\n            if (exist) return;\r\n\r\n            refContratos\r\n                .doc(codContrato)\r\n                .get()\r\n                .then(async (d_contrato) => {\r\n                    if (d_contrato.exists) {\r\n                        let cont = d_contrato.data();\r\n                        let numCuota = Number.parseInt(code.substr(17, 4));\r\n\r\n                        if (cont.estado !== 'activo') {\r\n                            message.error('No se pueden agregar pagos a este contrato');\r\n                            return;\r\n                        }\r\n\r\n                        if (numCuota > 1) { // Para validar si la anterior ya fue pagada\r\n                            await d_contrato.ref\r\n                                .collection(\"cuotas\")\r\n                                .doc(`${zeroPad(numCuota - 1, 2)}`)\r\n                                .get()\r\n                                .then((doc) => {\r\n                                    let cuota = doc.data();\r\n                                    if (cuota.cancelado) anteriorCancelado = true;\r\n                                });\r\n\r\n                            // Si la cuota anterior a esta no ha sido cancelada, entonces no se puede agregar el pago\r\n                            if (!anteriorCancelado) {\r\n                                message.error(\"La cuota anterior no ha sido cancelada aún\");\r\n                                return;\r\n                            }\r\n\r\n                            if (numCuota === cont.cant_cuotas) { // Cambiar estado de contrato a finalizado si cancela todas las cuotas\r\n                                await d_contrato.ref\r\n                                    .update({ estado: 'finalizado' });\r\n                            }\r\n                        }\r\n\r\n                        d_contrato.ref\r\n                            .collection('cuotas')\r\n                            .doc(`${zeroPad(numCuota, 2)}`)\r\n                            .get()\r\n                            .then((d_cuota) => {\r\n                                if (d_cuota.exists) {\r\n                                    let cuota = d_cuota.data();\r\n                                    let fechaPago = new Date();\r\n\r\n                                    refPagos\r\n                                        .doc(cuota.codigo)\r\n                                        .set({\r\n                                            cantidad: cuota.cantidad,\r\n                                            codigo_contrato: cont.codigo,\r\n                                            ref_cliente: cont.ref_cliente,\r\n                                            nombre_cliente: cont.cliente,\r\n                                            numero_cuota: d_cuota.id,\r\n                                            fecha_cuota: cuota.fecha_pago,\r\n                                            fecha_pago: fechaPago,\r\n                                            mora: fechaMayor(fechaPago, cuota.fecha_pago) ? 3 : 0,\r\n                                            mora_exonerada: false,\r\n                                            facturado: false,\r\n                                            fecha_creacion: firebase.firestore.FieldValue.serverTimestamp(),\r\n                                            usuario: user.email\r\n                                        })\r\n                                        .then((doc) => {\r\n                                            d_cuota.ref\r\n                                                .update({ cancelado: true })\r\n                                                .then(async () => {\r\n                                                    setBarcode(\"\");\r\n                                                    form.setFieldsValue({ id_cliente: cont.ref_cliente.id });\r\n                                                    await cargarContratos(cont.ref_cliente.id);\r\n                                                    form.setFieldsValue({ id_contrato: cont.codigo });\r\n\r\n                                                    await d_contrato.ref\r\n                                                    .update({\r\n                                                        ultima_cuota_pagada: d_cuota.id,\r\n                                                        ultimo_mes_pagado: cuota.fecha_pago,\r\n                                                        fecha_ultimo_mes_pagado: fechaPago\r\n                                                    })\r\n                                                    cargarPagos(cont.codigo);\r\n                                                    message.success(\"Pago registrado\");\r\n                                                });\r\n                                        })\r\n                                        .catch(error => {\r\n                                            console.log(error);\r\n                                        })\r\n                                }\r\n                            });\r\n                    } else {\r\n                        message.error(\"La cuota NO existe\");\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        } else {\r\n            message.warn(\"El formato del código no es válido\");\r\n        }\r\n    };\r\n\r\n    const alternarExoneracionMora = async (record) => {\r\n        await refPagos\r\n            .doc(record.key)\r\n            .update({\r\n                mora_exonerada: !record.mora_exonerada\r\n            })\r\n            .then(() => {\r\n                if (record.mora_exonerada)\r\n                    message.success('¡Se quitó la exoneración de la mora!')\r\n                else\r\n                    message.success('¡Se exoneró la mora correctamente!')\r\n                cargarPagos(record.codigo_contrato)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                message.error('Ocurrió un error');\r\n            })\r\n    }\r\n\r\n    const eliminarPago = async (record) => {\r\n        let siguienteCancelada = false;\r\n        let numeroCuota = Number.parseInt(record.numero_cuota);\r\n        let ultimaCuotaPagada = null;\r\n        let ultimoMesPagado = null;\r\n        let fechaUltimoMesPagado = null;\r\n\r\n        await refContratos // Validar si la siguiente cuota ya fue cancelada\r\n            .doc(record.codigo_contrato)\r\n            .get()\r\n            .then(async (d_contrato) => {\r\n                if (d_contrato.exists) {\r\n\r\n                    if (d_contrato.data().estado !== 'activo') {\r\n                        message.error('No se puede eliminar este pago porque el contrato no está activo');\r\n                        return;\r\n                    }\r\n\r\n                    await d_contrato.ref\r\n                        .collection(\"cuotas\")\r\n                        .doc(zeroPad(numeroCuota + 1, 2))\r\n                        .get()\r\n                        .then((d_cuota) => {\r\n                            if (d_cuota.exists && d_cuota.data().cancelado) siguienteCancelada = true;\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Si hay un pago más reciente, se debe eliminar ese primero\r\n        if (siguienteCancelada) {\r\n            message.error(\"Primero debe eliminar los pagos más recientes\");\r\n            return;\r\n        }\r\n\r\n        await refPagos\r\n            .doc(`${record.key}`)\r\n            .delete() // Elimino el pago\r\n            .then(() => {\r\n                refContratos\r\n                    .doc(record.codigo_contrato)\r\n                    .get() // Obtengo el contrato\r\n                    .then(async (contrato) => {\r\n                        if (contrato.exists) {\r\n                            contrato.ref\r\n                                .collection(\"cuotas\")\r\n                                .doc(record.numero_cuota) // Obtengo la cuota del pago\r\n                                .get()\r\n                                .then((cuota) => {\r\n                                    if (cuota.exists) {\r\n                                        cuota.ref\r\n                                            .update({ cancelado: false }) // Actualizo el estado cancelado de la cuota\r\n                                            .then(() => {\r\n                                                cargarPagos(contrato.data().codigo);\r\n                                                message.success(\"Pago eliminado\");\r\n                                            });\r\n                                    }\r\n                                });\r\n\r\n                            if (numeroCuota > 1) { // Pendiente\r\n                                await refPagos\r\n                                    .doc(`${record.key.substr(0, 16)}${zeroPad(numeroCuota - 1, 4)}`)\r\n                                    .get()\r\n                                    .then(d_pago => {\r\n                                        let pago = d_pago.data();\r\n                                        ultimaCuotaPagada = pago.numero_cuota;\r\n                                        ultimoMesPagado = pago.fecha_cuota;\r\n                                        fechaUltimoMesPagado = pago.fecha_pago;\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error);\r\n                                    })\r\n                            }\r\n\r\n                            contrato.ref\r\n                            .update({\r\n                                ultima_cuota_pagada: ultimaCuotaPagada,\r\n                                ultimo_mes_pagado: ultimoMesPagado,\r\n                                fecha_ultimo_mes_pagado: fechaUltimoMesPagado,\r\n                            })\r\n                        } else {\r\n                            message.error(\"La cuota NO existe\");\r\n                        }\r\n                    });\r\n            });\r\n    };\r\n\r\n    const cargarContratos = async (codCliente) => {\r\n        setStValidacionContrato(\"validating\");\r\n        setMsgValidacionContrato(null);\r\n        form.setFieldsValue({\r\n            id_contrato: null,\r\n        });\r\n        setPagos([]);\r\n        setContratos([]);\r\n\r\n        if (!codCliente) return;\r\n\r\n        let auxContratos = [];\r\n        let cliente = clientes.find((cli) => cli.key === codCliente);\r\n\r\n        if (!cliente) return;\r\n\r\n        await refContratos\r\n            .where(\"ref_cliente\", \"==\", cliente.ref)\r\n            .where(\"estado\", \"==\", \"activo\")\r\n            .get()\r\n            .then((qs) => {\r\n                qs.forEach((doc) => {\r\n                    auxContratos.push({ key: doc.id, ...doc.data() });\r\n                });\r\n                setContratos(auxContratos);\r\n            });\r\n\r\n        if (auxContratos.length === 0) {\r\n            setStValidacionContrato(\"warning\");\r\n            setMsgValidacionContrato(\"No se encontraton contratos\");\r\n        } else if (auxContratos.length === 1) {\r\n            form.setFieldsValue({\r\n                id_contrato: auxContratos[0].codigo,\r\n            });\r\n            cargarPagos(auxContratos[0].codigo);\r\n            setStValidacionContrato(null);\r\n        } else {\r\n            setStValidacionContrato(null);\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const cargarPagos = async (codigoContrato) => {\r\n        let auxPagos = [];\r\n        let auxCuotas = [];\r\n        let auxSumas = 0;\r\n        let auxMora = 0;\r\n\r\n        setSumas(0);\r\n        setMora(0);\r\n        setTotal(0);\r\n        setCuotas([]);\r\n        setPagos([]);\r\n        setContrato(null);\r\n\r\n        if (!codigoContrato) return;\r\n\r\n        setLoadingPagos(true);\r\n\r\n        await refContratos\r\n            .doc(codigoContrato)\r\n            .get()\r\n            .then((doc) => {\r\n                setContrato(doc.data());\r\n            });\r\n\r\n        await refPagos\r\n            .where(\"codigo_contrato\", \"==\", codigoContrato)\r\n            .where(\"facturado\", \"==\", false)\r\n            .get()\r\n            .then((qs) => {\r\n                qs.forEach((doc) => {\r\n                    let pago = doc.data();\r\n                    pago.ref = doc.ref;\r\n                    pago.key = doc.id;\r\n\r\n                    auxCuotas.push({\r\n                        fecha_cuota: pago.fecha_cuota,\r\n                        fecha_pago: pago.fecha_pago,\r\n                        num_cuota: pago.numero_cuota,\r\n                        precio_mora: pago.mora,\r\n                        mora_exonerada: pago.mora_exonerada,\r\n                        cantidad: pago.cantidad,\r\n                    });\r\n\r\n                    auxPagos.push(pago);\r\n                    auxSumas += pago.cantidad;\r\n\r\n                    if (\r\n                        !pago.mora_exonerada &&\r\n                        pago.fecha_pago &&\r\n                        fechaMayor(pago.fecha_pago, pago.fecha_cuota)\r\n                    ) {\r\n                        auxMora += 3;\r\n                    }\r\n                });\r\n\r\n                setCuotas(auxCuotas);\r\n                setPagos(auxPagos);\r\n                setMora(auxMora);\r\n                setSumas(auxSumas);\r\n                setTotal(auxSumas + auxMora);\r\n            });\r\n\r\n        setLoadingPagos(false);\r\n    };\r\n\r\n    const SelectFecha = (props)  => {\r\n        let { record } = props;\r\n        let fecha = null;\r\n        let mora = 0;\r\n\r\n        let selecFechaPago = codigo => {\r\n\r\n            if (fecha && fechaMayor(fecha, record.fecha_cuota)) mora = 3;\r\n\r\n            refPagos.doc(codigo)\r\n            .update({\r\n                fecha_pago: fecha,\r\n                mora\r\n            })\r\n            .then(() => {\r\n                message.success('¡Fecha establecida correctamente!');\r\n                cargarPagos(record.codigo_contrato);\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Space>\r\n                <DatePicker\r\n                    locale={locale}\r\n                    format=\"DD-MMMM-YYYY\"\r\n                    size=\"small\"\r\n                    onChange={ date => { fecha = date ? new Date(date.get()) : null }}\r\n                />\r\n                <CheckCircleOutlined onClick={() => selecFechaPago(record.key)} style={{ color: '#389e0d' }} />\r\n            </Space>\r\n        );\r\n    }\r\n\r\n    const columnas = [\r\n        {\r\n            title: \"No. Cuota\",\r\n            align: 'center',\r\n            dataIndex: \"numero_cuota\",\r\n        },\r\n        {\r\n            title: \"Mes\",\r\n            dataIndex: \"fecha_cuota\",\r\n            render: (fecha_cuota) => <span>{verFecha(fecha_cuota)}</span>,\r\n        },\r\n        {\r\n            title: \"Fecha de pago\",\r\n            key: \"fecha_pago\",\r\n            render: (record) => (\r\n                <span>\r\n                    <Row justify=\"center\">\r\n                        <Col>\r\n                            {\r\n                                record.fecha_pago\r\n                                ?\r\n                                ` ${verFecha(record.fecha_pago, true)} `\r\n                                :\r\n                                ''\r\n                            }\r\n                            <Popover\r\n                                content={\r\n                                    <SelectFecha record={record} />\r\n                                }\r\n                                title=\"Seleccione\"\r\n                                trigger=\"click\"\r\n                            >\r\n                                <CalendarOutlined style={{ color: '#1c86c6' }} />\r\n                            </Popover>\r\n                        </Col>\r\n                    </Row>\r\n                </span>\r\n            )\r\n        },\r\n        {\r\n            title: \"Precio de cuota\",\r\n            dataIndex: \"cantidad\",\r\n            render: (cantidad) => <strong>{formatoDinero(cantidad)}</strong>,\r\n        },\r\n        {\r\n            title: \"Mora\",\r\n            key: \"mora\",\r\n            render: (record) => {\r\n                let style = {\r\n                    textDecoration: \"none\",\r\n                };\r\n\r\n                if (record.mora_exonerada)\r\n                    style.textDecoration = \"line-through\";\r\n\r\n                return (\r\n                    <Space size=\"small\">\r\n                        <strong style={style}>{formatoDinero(record.mora)}</strong>\r\n                        {\r\n                            record.mora > 0 &&\r\n                            <Tooltip title=\"Alternar exoneración\">\r\n                                <ExceptionOutlined\r\n                                    disabled={record.mora === 0}\r\n                                    key=\"exonerate\"\r\n                                    onClick={() => alternarExoneracionMora(record)}\r\n                                    style={{ color: '#2124ce' }}\r\n                                />\r\n                            </Tooltip>\r\n                        }\r\n                    </Space>\r\n                )\r\n            },\r\n        },\r\n        // {\r\n        //     title: \"Mora\",\r\n        //     key: \"mora\",\r\n        //     render: (record) => {\r\n        //         let valor = 0;\r\n\r\n        //         if (\r\n        //             record.fecha_pago &&\r\n        //             fechaMayor(record.fecha_pago, record.fecha_cuota)\r\n        //         )\r\n        //             valor = 3;\r\n\r\n        //         return (\r\n        //             <Space size='small'>\r\n        //                 <strong>{formatoDinero(valor)}</strong>\r\n\r\n        //             </Space>\r\n        //         )\r\n        //     },\r\n        // },\r\n        {\r\n            title: \"Cant. gravada\",\r\n            key: \"cantidad_gravada\",\r\n            render: (record) => {\r\n                let cant = record.cantidad;\r\n\r\n                if (\r\n                    record.fecha_pago &&\r\n                    fechaMayor(record.fecha_pago, record.fecha_cuota)\r\n                )\r\n                    cant += 3;\r\n\r\n                return <strong>{formatoDinero(cant)}</strong>;\r\n            },\r\n        },\r\n        {\r\n            key: 'opciones',\r\n            align: 'center',\r\n            render: (record) => (\r\n                <Space size=\"middle\">\r\n                    <Tooltip title=\"Cancelar\">\r\n                        <StopOutlined key=\"cancel\" onClick={() => eliminarPago(record)} style={{ color: '#f5222d' }} />\r\n                    </Tooltip>\r\n                </Space>\r\n            )\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <Modal\r\n            key=\"data-modal\"\r\n            visible={props.visible}\r\n            title={\r\n                <>\r\n                    {props.title}\r\n                    &nbsp;\r\n                    {record && (\r\n                        <span>\r\n                            (<strong>{record.codigo}</strong>)\r\n                        </span>\r\n                    )}\r\n                </>\r\n            }\r\n            onOk={handleOk}\r\n            onCancel={props.handleCancel}\r\n            footer={[\r\n                <div key=\"footer-options\">\r\n                    <Button key=\"back\" onClick={props.handleCancel}>\r\n                        Regresar\r\n                    </Button>\r\n                    <Button\r\n                        key=\"submit\"\r\n                        type=\"primary\"\r\n                        loading={loading}\r\n                        onClick={handleOk}\r\n                    >\r\n                        Guardar\r\n                    </Button>\r\n                </div>,\r\n            ]}\r\n            width={800}\r\n        >\r\n            <Form form={form}>\r\n                <Row>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            name=\"id_cliente\"\r\n                            label=\"Cliente\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Seleccione un cliente\",\r\n                                },\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Seleccione un cliente\"\r\n                                style={{ width: 245 }}\r\n                                allowClear\r\n                                showSearch\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children\r\n                                        .toLowerCase()\r\n                                        .indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                                onChange={(codigo) => cargarContratos(codigo)}\r\n                            >\r\n                                {clientes.map((cliente) => (\r\n                                    <Option\r\n                                        key={cliente.key}\r\n                                        value={cliente.key}\r\n                                    >{`${cliente.nombre} ${cliente.apellido}`}</Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            name=\"id_contrato\"\r\n                            label=\"Contrato\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Seleccione un contrato\",\r\n                                },\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                            hasFeedback\r\n                            validateStatus={stValidacionContrato}\r\n                            help={msgValidacionContrato}\r\n                        >\r\n                            <Select\r\n                                placeholder=\"Seleccione un contrato\"\r\n                                style={{ width: 245 }}\r\n                                allowClear\r\n                                showSearch\r\n                                optionFilterProp=\"children\"\r\n                                filterOption={(input, option) =>\r\n                                    option.children\r\n                                        .toLowerCase()\r\n                                        .indexOf(input.toLowerCase()) >= 0\r\n                                }\r\n                                onChange={(codigo) => cargarPagos(codigo)}\r\n                            >\r\n                                {contratos.map((cont) => (\r\n                                    <Option\r\n                                        key={cont.codigo}\r\n                                        value={cont.codigo}\r\n                                    >{`${cont.codigo}`}</Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={20}>\r\n                        <Form.Item\r\n                            name=\"fecha\"\r\n                            label=\"Fecha\"\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: \"Fecha requerida\",\r\n                                },\r\n                            ]}\r\n                            requiredMark=\"optional\"\r\n                        >\r\n                            <DatePicker\r\n                                placeholder=\"Fecha\"\r\n                                picker=\"date\"\r\n                                format=\"DD-MMMM-YYYY\"\r\n                                locale={locale}\r\n                                // disabledDate={current => {\r\n                                //     return current && current < moment().subtract(1, 'y')\r\n                                // }}\r\n                                onChange={(date) => {\r\n                                    // setFechaInicio(null)\r\n                                    // setFechaFin(null);\r\n                                    // if (!date || !cantCuotas) return;\r\n                                    // date.set('date', 3);\r\n                                    // setFechaInicio(date)\r\n                                    // let fecha = moment(date.get());\r\n                                    // setFechaFin(fecha.add(cantCuotas - 1, 'M'));\r\n                                }}\r\n                                style={{ width: 170 }}\r\n                            />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={9} style={{ textAlign: \"right\" }}>\r\n                        <strong>Pagos</strong>\r\n                    </Col>\r\n                    <Col span={11} offset={1}>\r\n                        <Input\r\n                            addonBefore={<BarcodeOutlined />}\r\n                            placeholder=\"Codigo de cuota\"\r\n                            style={{ width: 280 }}\r\n                            autoFocus\r\n                            maxLength={24}\r\n                            allowClear\r\n                            value={barcode}\r\n                            onChange={(ev) => setBarcode(ev.target.value)}\r\n                            onKeyUp={(ev) => {\r\n                                if (ev.keyCode === 13) {\r\n                                    agregarPago(ev.target.value);\r\n                                }\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <Table\r\n                            loading={loadingPagos}\r\n                            columns={columnas}\r\n                            dataSource={pagos}\r\n                            footer={() => (\r\n                                <Row>\r\n                                    <Col\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        span={11}\r\n                                    >\r\n                                        <strong>{pagos.length} cuotas</strong>\r\n                                    </Col>\r\n                                    <Col\r\n                                        style={{ textAlign: \"right\" }}\r\n                                        span={13}\r\n                                    >\r\n                                        <Space>\r\n                                            <strong\r\n                                                style={{ fontSize: \"1.1em\" }}\r\n                                            >\r\n                                                Mora: {formatoDinero(mora)}\r\n                                            </strong>\r\n                                            <strong\r\n                                                style={{ fontSize: \"1.1em\" }}\r\n                                            >\r\n                                                Sumas: {formatoDinero(sumas)}\r\n                                            </strong>\r\n                                        </Space>\r\n                                    </Col>\r\n                                </Row>\r\n                            )}\r\n                            size=\"small\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                    <Col span={15}>\r\n                        <strong style={{ fontSize: \"1.2em\" }}>\r\n                            Total a Pagar: {formatoDinero(total)}\r\n                        </strong>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDatos;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, List, Card, Row, Col, Tooltip, Space } from \"antd\";\r\nimport { CloudDownloadOutlined } from \"@ant-design/icons\";\r\nimport Factura from \"../reportes/Factura\";\r\nimport app from \"../../firebaseConfig\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\n\r\nconst opcFecha = { year: \"numeric\", month: \"long\" };\r\nconst opcFecha2 = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n\r\nconst capitalize = (s) => {\r\n    if (typeof s !== \"string\") return s;\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst verUsuario = (usr) => capitalize(usr.split('@')[0]);\r\n\r\nconst formatoDinero = (num) =>\r\n    new Intl.NumberFormat(\"es-SV\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    }).format(num);\r\n\r\nconst verFecha = (fecha, todo = false) => {\r\n    let opc = todo ? opcFecha2 : opcFecha;\r\n\r\n    return capitalize(\r\n        new Date(fecha.seconds * 1000).toLocaleDateString(\"es-SV\", opc)\r\n    );\r\n};\r\n\r\nconst obtenerFactura = async (ref) => {\r\n    let auxRecord = null;\r\n    await ref.get().then((doc) => {\r\n        if (doc.exists) {\r\n            auxRecord = doc.data();\r\n        }\r\n    });\r\n    return auxRecord;\r\n};\r\n\r\nconst download = (record) => {\r\n    pdf(Factura({ factura: record }))\r\n        .toBlob()\r\n        .then((file) => {\r\n            var csvURL = window.URL.createObjectURL(file);\r\n            let tempLink = document.createElement(\"a\");\r\n            tempLink.href = csvURL;\r\n            tempLink.setAttribute(\r\n                \"download\",\r\n                `Factura (${record.nombre_cliente}).pdf`\r\n            );\r\n            tempLink.click();\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nconst ModalDetalle = (props) => {\r\n    const { codigoFactura } = props;\r\n    const [record, setRecord] = useState({});\r\n    const [loadingRecord, setLoadingRecord] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoadingRecord(true);\r\n\r\n        let ref = app.firestore().collection(\"facturas\").doc(codigoFactura);\r\n\r\n        obtenerFactura(ref)\r\n            .then((res) => setRecord(res))\r\n            .finally(() => setLoadingRecord(false));\r\n    }, [codigoFactura]);\r\n\r\n    return (\r\n        <Modal\r\n            key=\"detail-modal\"\r\n            visible={props.visible}\r\n            onCancel={props.handleCancel}\r\n            width={700}\r\n            title={<div>Detalle de factura</div>}\r\n            footer={<></>}\r\n        >\r\n            <Row>\r\n                <Col flex={7}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                <strong> {record.codigo_contrato} </strong>\r\n                                <Tooltip title=\"Descargar documento\">\r\n                                    <strong>\r\n                                        <CloudDownloadOutlined\r\n                                            key=\"download\"\r\n                                            onClick={() => download(record)}\r\n                                            style={{ color: \"#389e0d\" }}\r\n                                        />\r\n                                    </strong>\r\n                                </Tooltip>\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 325 }}\r\n                    >\r\n                        {!loadingRecord && (\r\n                            <div>\r\n                                Cliente:&nbsp;\r\n                                <strong>{record.nombre_cliente}</strong>\r\n                                <br />\r\n                                Contrato:&nbsp;\r\n                                <strong>{record.codigo_contrato}</strong>\r\n                                <br />\r\n                                Fecha:&nbsp;\r\n                                <strong>{verFecha(record.fecha, true)}</strong>\r\n                                <br />\r\n                                Precio de cuota:&nbsp;\r\n                                <strong>\r\n                                    {formatoDinero(record.cuotas[0].cantidad)}\r\n                                </strong>\r\n                                <br />\r\n                                Sumas:&nbsp;\r\n                                <strong>{formatoDinero(record.sumas)}</strong>\r\n                                <br />\r\n                                Mora:&nbsp;\r\n                                <strong>{formatoDinero(record.mora)}</strong>\r\n                                <br />\r\n                                Total:&nbsp;\r\n                                <strong>{formatoDinero(record.total)}</strong>\r\n                                <br />\r\n                                Registrado por:&nbsp;\r\n                                <strong>{verUsuario(record.usuario)}</strong>\r\n                            </div>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n                <Col flex={16} offset={1}>\r\n                    <Card\r\n                        title={<strong>Cuotas ({record.cantidad_pagos})</strong>}\r\n                        bodyStyle={{ height: 325, overflowY: \"scroll\" }}\r\n                    >\r\n                        <List\r\n                            dataSource={record.cuotas}\r\n                            renderItem={(item) => (\r\n                                <List.Item key={item.num_cuota}>\r\n                                    <List.Item.Meta\r\n                                        title={\r\n                                            <strong>\r\n                                                {item.num_cuota} -\r\n                                                {verFecha(item.fecha_cuota)}\r\n                                            </strong>\r\n                                        }\r\n                                        description={\r\n                                            item.mora_exonerada\r\n                                            ?\r\n                                                <span\r\n                                                    style={{ color: \"#389e0d\" }}\r\n                                                >\r\n                                                    Mora exonerada\r\n                                                </span>\r\n                                            :\r\n                                            item.precio_mora === 0\r\n                                            ?\r\n                                                <span>\r\n                                                    Mora&nbsp;\r\n                                                    {formatoDinero(\r\n                                                        item.precio_mora\r\n                                                    )}\r\n                                                </span>\r\n                                            :\r\n                                            <span\r\n                                                style={{ color: \"#f5222d\" }}\r\n                                            >\r\n                                                Mora&nbsp;\r\n                                                {formatoDinero(\r\n                                                    item.precio_mora\r\n                                                )}\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                    <div>\r\n                                        <strong>\r\n                                            {formatoDinero(item.cantidad)}\r\n                                        </strong>\r\n                                    </div>\r\n                                </List.Item>\r\n                            )}\r\n                        ></List>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDetalle;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    message,\r\n    Modal,\r\n    Row,\r\n    Col,\r\n    Popover,\r\n    Tooltip,\r\n    Space,\r\n    PageHeader,\r\n    Input,\r\n    Button,\r\n    InputNumber,\r\n} from \"antd\";\r\nimport {\r\n    InfoCircleOutlined,\r\n    EditOutlined,\r\n    StopOutlined,\r\n    CloudDownloadOutlined,\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined\r\n} from \"@ant-design/icons\";\r\nimport app from \"../../firebaseConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { push } from \"connected-react-router\";\r\nimport Tabla from \"../Tabla\";\r\nimport Factura from \"../reportes/Factura\";\r\nimport { pdf } from \"@react-pdf/renderer\";\r\nimport DetalleCliente from \"../clientes/ModalDetalle\";\r\nimport ModalDatos from \"./ModalDatos\";\r\nimport ModalDetalle from \"./ModalDetalle\";\r\nimport DetalleContrato from \"../contratos/ModalDetalle\";\r\nimport moment from 'moment';\r\n\r\nconst { Search } = Input;\r\nconst { confirm } = Modal;\r\n\r\nlet ref = app.firestore();\r\n\r\nconst zeroPad = (num, places) => String(num).padStart(places, \"0\");\r\n\r\nconst cFecha = (fecha) => {\r\n    if (fecha) return fecha.toDate();\r\n    else return new Date();\r\n}\r\n\r\nconst SelectNumero = (props) => {\r\n    let { record } = props;\r\n    let numero = 0;\r\n\r\n    let cambiarNumero = () => {\r\n        if (numero <= 0) {\r\n            message.error(\"Debe introducir un número mayor a cero\");\r\n            return;\r\n        }\r\n\r\n        ref.collection(\"facturas\")\r\n            .doc(record.key)\r\n            .update({\r\n                numero: zeroPad(numero, 6),\r\n            })\r\n            .then(() => {\r\n                message.success(\"¡Número establecido correctamente!\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Space>\r\n            <InputNumber\r\n                size=\"small\"\r\n                min={1}\r\n                max={100000}\r\n                onChange={(val) => {\r\n                    numero = val;\r\n                }}\r\n                onPressEnter={(ev) => cambiarNumero()}\r\n            />\r\n            <CheckCircleOutlined\r\n                onClick={() => cambiarNumero()}\r\n                style={{ color: \"#389e0d\" }}\r\n            />\r\n        </Space>\r\n    );\r\n};\r\n\r\nclass Facturas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.mainRef = app.firestore();\r\n        this.refFacturas = this.mainRef.collection(\"facturas\");\r\n        this.refClientes = this.mainRef.collection(\"clientes\");\r\n        this.refRedes = this.mainRef.collection(\"redes\");\r\n        this.refPagos = this.mainRef.collection(\"pagos\");\r\n        this.opcFecha = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\r\n\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            user: props.user.user,\r\n            loading: true,\r\n            facturas: [],\r\n            redes: [],\r\n            clientes: [],\r\n            visible: false,\r\n            registro: null,\r\n            modalDetalle: false,\r\n            modalDetalleCliente: false,\r\n            modalDetalleContrato: false,\r\n            codigoContrato: null,\r\n            codigoCliente: null,\r\n        };\r\n    }\r\n\r\n    formatoDinero = (num) =>\r\n        new Intl.NumberFormat(\"es-SV\", {\r\n            style: \"currency\",\r\n            currency: \"USD\",\r\n        }).format(num);\r\n\r\n\r\n    obtenerFacturas = (qs) => {\r\n        const facturas = [];\r\n        const { busqueda } = this.state;\r\n\r\n        qs.forEach(async (doc) => {\r\n            let {\r\n                cantidad_pagos,\r\n                codigo_contrato,\r\n                numero,\r\n                fecha,\r\n                nombre_cliente,\r\n                sumas,\r\n                mora,\r\n                mora_exonerada,\r\n                total,\r\n                total_letras,\r\n                ref_cliente,\r\n                cuotas,\r\n                usuario\r\n            } = doc.data();\r\n\r\n            if (\r\n                busqueda &&\r\n                nombre_cliente.toLowerCase().indexOf(busqueda) === -1 &&\r\n                codigo_contrato.toLowerCase().indexOf(busqueda) === -1 &&\r\n                total_letras.toLowerCase().indexOf(busqueda) === -1 &&\r\n                usuario.toLowerCase().indexOf(busqueda) === -1\r\n            )\r\n                return;\r\n\r\n            facturas.push({\r\n                key: doc.id,\r\n                codigo_contrato,\r\n                nombre_cliente,\r\n                fecha,\r\n                cantidad_pagos,\r\n                total,\r\n                total_letras,\r\n                ref_cliente,\r\n                cuotas,\r\n                sumas,\r\n                mora,\r\n                mora_exonerada,\r\n                numero,\r\n                usuario\r\n            });\r\n        });\r\n        this.setState({\r\n            facturas,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    obtenerRedes = (qs) => {\r\n        const redes = [];\r\n\r\n        qs.forEach((doc) => {\r\n            let { numero } = doc.data();\r\n\r\n            redes.push({\r\n                key: doc.id,\r\n                numero: numero,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            redes,\r\n        });\r\n    };\r\n\r\n    obtenerClientes = (qs) => {\r\n        const clientes = [];\r\n\r\n        qs.forEach((doc) => {\r\n            let { dui, nombre, apellido } = doc.data();\r\n\r\n            clientes.push({\r\n                key: doc.id,\r\n                ref: doc.ref,\r\n                dui,\r\n                nombre,\r\n                apellido,\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            clientes,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.unsubscribe = this.refFacturas\r\n            .orderBy(\"fecha_creacion\", \"desc\")\r\n            .onSnapshot(this.obtenerFacturas);\r\n\r\n        this.refClientes\r\n            .orderBy(\"fecha_creacion\", \"desc\")\r\n            .onSnapshot(this.obtenerClientes);\r\n\r\n        this.refRedes.orderBy(\"numero\").onSnapshot(this.obtenerRedes);\r\n    }\r\n\r\n    buscar(valor) {\r\n        if (valor.toLowerCase() !== this.state.busqueda) {\r\n            this.setState({ loading: true });\r\n            this.setState({ busqueda: valor.toLowerCase() });\r\n            this.refFacturas.get().then((qs) => this.obtenerFacturas(qs));\r\n        }\r\n    }\r\n\r\n    modalData = (record) => {\r\n        this.setState({\r\n            visible: true,\r\n            registro: record,\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            registro: null,\r\n            modalDetalle: false,\r\n            modalDetalleCliente: false,\r\n            modalDetalleContrato: false,\r\n            codigoContrato: null,\r\n            visible: false,\r\n        });\r\n    };\r\n\r\n    capitalize = (s) => {\r\n        if (typeof s !== \"string\") return s;\r\n        return s.charAt(0).toUpperCase() + s.slice(1);\r\n    };\r\n\r\n    irA = (ruta) => {\r\n        this.unsubscribe();\r\n        this.props.dispatch(push(`facturas/${ruta}`));\r\n    };\r\n\r\n    verDetalle = (record) => {\r\n        this.setState({\r\n            registro: record,\r\n            modalDetalle: true\r\n        });\r\n    };\r\n\r\n    verDetalleContrato = (codigo) => {\r\n        this.setState({\r\n            codigoContrato: codigo,\r\n            modalDetalleContrato: true\r\n        });\r\n    };\r\n\r\n    verDetalleCliente = (record) => {\r\n        this.setState({\r\n            codigoCliente: record.ref_cliente.id,\r\n            modalDetalleCliente: true\r\n        });\r\n    };\r\n\r\n    columnas = this.asignarColumnas();\r\n\r\n    asignarColumnas() {\r\n        return [\r\n            {\r\n                title: \"Cliente\",\r\n                key: \"cliente\",\r\n                sorter: (a, b) => a.nombre_cliente.localeCompare(b.nombre_cliente),\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() => this.verDetalleCliente(record)}\r\n                    >\r\n                        <strong>{record.nombre_cliente}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Contrato\",\r\n                key: \"codigo_contrato\",\r\n                sorter: (a, b) => a.codigo_contrato.substr(1).localeCompare(b.codigo_contrato.substr(1)),\r\n                filters: [],\r\n                onFilter: (value, record) => record.codigo_contrato.indexOf(value) === 0,\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() =>\r\n                            this.verDetalleContrato(record.codigo_contrato)\r\n                        }\r\n                    >\r\n                        <strong>{record.codigo_contrato}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"No. Factura\",\r\n                key: \"numero\",\r\n                render: (record) => (\r\n                    <Row justify=\"center\">\r\n                        <Col>\r\n                            {record.numero ? record.numero : \"-\"}\r\n                            <Popover\r\n                                content={<SelectNumero record={record} />}\r\n                                title=\"Seleccione\"\r\n                                trigger=\"click\"\r\n                            >\r\n                                <EditOutlined style={{ color: \"#1c86c6\" }} />\r\n                            </Popover>\r\n                        </Col>\r\n                    </Row>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Fecha\",\r\n                dataIndex: \"fecha\",\r\n                sorter: (a, b) => moment(cFecha(a.fecha)).unix() - moment(cFecha(b.fecha)).unix(),\r\n                render: (fecha) => (\r\n                    <strong>\r\n                        {cFecha(fecha)\r\n                            .toLocaleDateString(\"es-SV\", this.opcFecha)}\r\n                    </strong>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Cant. cuotas\",\r\n                key: \"cantidad_pagos\",\r\n                sorter: (a, b) => a.cantidad_pagos.toString().localeCompare(b.cantidad_pagos.toString()),\r\n                align: \"center\",\r\n                render: (record) => <strong>{record.cantidad_pagos}</strong>,\r\n            },\r\n            {\r\n                title: \"Sumas\",\r\n                key: \"sumas\",\r\n                sorter: (a, b) => a.sumas.toString().localeCompare(b.sumas.toString()),\r\n                render: (record) => <strong>{this.formatoDinero(record.sumas)}</strong>,\r\n            },\r\n            {\r\n                title: \"Mora\",\r\n                key: \"mora\",\r\n                render: (record) => {\r\n                    let mora = record.mora_exonerada ? 0 : record.mora;\r\n\r\n                    return <strong>{this.formatoDinero(mora)}</strong>;\r\n                },\r\n            },\r\n            {\r\n                title: \"Total\",\r\n                key: \"total\",\r\n                sorter: (a, b) => a.total.toString().localeCompare(b.total.toString()),\r\n                render: (record) => (\r\n                    <strong>\r\n                        <span style={{ color: \"#089D6C\", fontSize: \"1.2em\" }}>\r\n                            {this.formatoDinero(record.total)}\r\n                        </span>\r\n                    </strong>\r\n                ),\r\n            },\r\n\r\n            {\r\n                title: \"Opciones\",\r\n                key: \"opciones\",\r\n                render: (record) => (\r\n                    <Space size=\"middle\">\r\n                        <Tooltip title=\"Detalles\">\r\n                            <InfoCircleOutlined\r\n                                key=\"info\"\r\n                                onClick={() => this.verDetalle(record)}\r\n                                style={{ color: \"#0d9e8a\" }}\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Descargar\">\r\n                            <CloudDownloadOutlined\r\n                                key=\"download\"\r\n                                onClick={() => this.download(record)}\r\n                                style={{ color: \"#389e0d\" }}\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Cancelar\">\r\n                            <StopOutlined\r\n                                key=\"cancel\"\r\n                                onClick={() => this.eliminar(record)}\r\n                                style={{ color: \"#f5222d\" }}\r\n                            />\r\n                        </Tooltip>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n    }\r\n\r\n    download = (record) => {\r\n        pdf(Factura({ factura: record }))\r\n            .toBlob()\r\n            .then((file) => {\r\n                var csvURL = window.URL.createObjectURL(file);\r\n                let tempLink = document.createElement(\"a\");\r\n                tempLink.href = csvURL;\r\n                tempLink.setAttribute(\r\n                    \"download\",\r\n                    `Factura (${record.nombre_cliente}).pdf`\r\n                );\r\n                tempLink.click();\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    eliminar = async (record) => {\r\n        let ultimaCuota = record.cuotas[record.cuotas.length - 1];\r\n        let numUltimaCuota = Number.parseInt(ultimaCuota.num_cuota);\r\n        let siguienteFacturado = false;\r\n        let _codContrato = record.codigo_contrato.split('-');\r\n        let _red = Number.parseInt(_codContrato[0].substr(1));\r\n        let codigoContrato = `${zeroPad(_red, 4)}0${_codContrato[1]}${record.codigo_contrato.substr(8, 4)}${record.codigo_contrato.substr(13, 4)}`;\r\n\r\n        await this.refPagos\r\n            .doc(`${codigoContrato}-${zeroPad(numUltimaCuota + 1, 4)}`)\r\n            .get()\r\n            .then((doc) => {\r\n                if (doc.exists && doc.data().facturado) siguienteFacturado = true;\r\n            })\r\n            .catch((error) => {\r\n                message.error(\"Ocurrió un error al eliminar la factura\");\r\n                console.log(error);\r\n            });\r\n\r\n        if (siguienteFacturado) {\r\n            message.error(\r\n                \"¡Hay facturas más recientes, debe eliminar esas primero!\"\r\n            );\r\n            return;\r\n        }\r\n\r\n        let me = this;\r\n\r\n        confirm({\r\n            title: \"¿Está seguro que desea eliminar este registro?\",\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: \"Eliminar información de factura\",\r\n            okText: \"Sí\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                me.eliminarFactura(record);\r\n            },\r\n        });\r\n    };\r\n\r\n    eliminarFactura = async (record) => {\r\n        let _codContrato = record.codigo_contrato.split('-');\r\n        let _red = Number.parseInt(_codContrato[0].substr(1));\r\n        let _ip = Number.parseInt(_codContrato[1]);\r\n        let codigoContrato = `${zeroPad(_red, 4)}${zeroPad(_ip, 4)}${record.codigo_contrato.substr(8, 4)}${record.codigo_contrato.substr(13, 4)}`;\r\n\r\n        this.refFacturas\r\n            .doc(record.key)\r\n            .delete()\r\n            .then(async () => {\r\n\r\n                await record.cuotas.forEach(async cuota => {\r\n                    await this.refPagos\r\n                    .doc(`${codigoContrato}${zeroPad(Number.parseInt(cuota.num_cuota), 4)}`)\r\n                    .get()\r\n                    .then((doc) => {\r\n                        if (doc.exists) {\r\n                            doc.ref.update({ facturado: false }) // Cambiar estado a pago\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        message.error(\"Ocurrió un error al eliminar la factura\");\r\n                        console.log(error);\r\n                    });\r\n                })\r\n                message.success(\"¡Se eliminó la factura correctamente!\");\r\n            })\r\n            .catch((error) => {\r\n                message.error(\"¡Ocurrió un error al eliminar la factura!\");\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            facturas,\r\n            redes,\r\n            loading,\r\n            visible,\r\n            registro,\r\n            clientes,\r\n            codigoCliente,\r\n            modalDetalle,\r\n            modalDetalleCliente,\r\n            modalDetalleContrato,\r\n            codigoContrato,\r\n            user\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {visible && (\r\n                    <ModalDatos\r\n                        visible={visible}\r\n                        title={\r\n                            registro ? \"Editar información\" : \"Nueva factura\"\r\n                        }\r\n                        user={user}\r\n                        clientes={clientes}\r\n                        handleCancel={this.handleCancel}\r\n                        record={registro}\r\n                        fireRef={this.refContratos}\r\n                    />\r\n                )}\r\n                {modalDetalle && (\r\n                    <ModalDetalle\r\n                        visible={modalDetalle}\r\n                        codigoFactura={registro.key}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n                {modalDetalleCliente && (\r\n                    <DetalleCliente\r\n                        visible={modalDetalleCliente}\r\n                        codigoCliente={codigoCliente}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n                {modalDetalleContrato && (\r\n                    <DetalleContrato\r\n                        visible={modalDetalleContrato}\r\n                        codigoContrato={codigoContrato}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"Facturas\"\r\n                    subTitle=\"Lista de facturas\"\r\n                    extra={[\r\n                        <Search\r\n                            key=\"buscar\"\r\n                            placeholder=\"Buscar\"\r\n                            onSearch={(value) => this.buscar(value)}\r\n                            style={{ width: 200 }}\r\n                        />,\r\n                        <Button\r\n                            key=\"nuevo\"\r\n                            type=\"primary\"\r\n                            ghost\r\n                            onClick={() => this.modalData()}\r\n                        >\r\n                            Nuevo\r\n                        </Button>,\r\n                    ]}\r\n                />\r\n                {\r\n                    !this.columnas[1].filters.length && // eslint-disable-next-line\r\n                    redes.map(red => {\r\n                        this.columnas[1].filters.push(\r\n                            {\r\n                                text: `Red ${red.numero}`,\r\n                                value: `R${red.numero}`,\r\n                            },\r\n                        );\r\n                    })\r\n                }\r\n                <Tabla\r\n                    columnas={this.columnas}\r\n                    data={facturas}\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        user: state.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Facturas);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Modal, Card, Row, Col, Space } from \"antd\";\r\nimport app from \"../../firebaseConfig\";\r\n\r\nconst opcFecha = { year: \"numeric\", month: \"long\" };\r\nconst opcFecha2 = { year: \"numeric\", month: \"long\", day: \"numeric\" };\r\n\r\nconst capitalize = (s) => {\r\n    if (typeof s !== \"string\") return s;\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst verUsuario = (usr) => capitalize(usr.split('@')[0]);\r\n\r\nconst formatoDinero = (num) =>\r\n    new Intl.NumberFormat(\"es-SV\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    }).format(num);\r\n\r\nconst verFecha = (fecha, todo = false) => {\r\n    let opc = todo ? opcFecha2 : opcFecha;\r\n\r\n    return capitalize(fecha.toDate().toLocaleDateString(\"es-SV\", opc));\r\n};\r\n\r\nconst verCodigoCuota = code => {\r\n    return `${code.substr(0, 4)} ${code.substr(4, 4)} ${code.substr(8, 4)} ${code.substr(12, 4)} ${code.substr(16, 4)}`;\r\n}\r\n\r\nconst obtenerPago = async (ref) => {\r\n    let auxRecord = null;\r\n    await ref.get().then((doc) => {\r\n        if (doc.exists) {\r\n            auxRecord = doc.data();\r\n        }\r\n    });\r\n    return auxRecord;\r\n};\r\n\r\nconst ModalDetalle = (props) => {\r\n    const { codigoPago } = props;\r\n    const [record, setRecord] = useState({});\r\n    const [loadingRecord, setLoadingRecord] = useState(true);\r\n\r\n    useEffect(() => {\r\n        setLoadingRecord(true);\r\n\r\n        let ref = app.firestore().collection(\"pagos\").doc(codigoPago);\r\n\r\n        obtenerPago(ref)\r\n            .then((res) => setRecord(res))\r\n            .finally(() => setLoadingRecord(false));\r\n    }, [codigoPago]);\r\n\r\n    return (\r\n        <Modal\r\n            key=\"detail-modal\"\r\n            visible={props.visible}\r\n            onCancel={props.handleCancel}\r\n            title={<div>Detalle del pago</div>}\r\n            footer={<></>}\r\n        >\r\n            <Row>\r\n                <Col flex={7}>\r\n                    <Card\r\n                        title={\r\n                            <Space>\r\n                                NPE: <strong> {verCodigoCuota(codigoPago)} </strong>\r\n                            </Space>\r\n                        }\r\n                        bodyStyle={{ height: 325 }}\r\n                    >\r\n                        {!loadingRecord && (\r\n                            <div>\r\n                                Contrato:&nbsp;\r\n                                <strong>{record.codigo_contrato}</strong>\r\n                                <br />\r\n                                Cliente:&nbsp;\r\n                                <strong>{record.nombre_cliente}</strong>\r\n                                <br />\r\n                                Cantidad:&nbsp;\r\n                                <strong>\r\n                                    {formatoDinero(record.cantidad)}\r\n                                </strong>\r\n                                <br />\r\n                                Mora:&nbsp;\r\n                                <strong style={record.mora_exonerada ? { textDecoration: 'line-through' } : {textDecoration: 'none'}}>\r\n                                    {formatoDinero(record.mora)}\r\n                                </strong>\r\n                                <br />\r\n                                Cuota:&nbsp;\r\n                                <strong>\r\n                                    {record.numero_cuota} - {verFecha(record.fecha_cuota)}\r\n                                </strong>\r\n                                <br />\r\n                                Fecha de pago:&nbsp;\r\n                                <strong>{record.fecha_pago ? verFecha(record.fecha_pago, true) : ''}</strong>\r\n                                <br />\r\n                                Facturado:&nbsp;\r\n                                {record.facturado\r\n                                    ?\r\n                                    <strong style={{ color: \"#52c41a\" }}>Sí</strong>\r\n                                    :\r\n                                    <strong style={{ color: \"#165473\" }}>No</strong>\r\n                                }\r\n                                <br/>\r\n                                Registrado por:&nbsp;\r\n                                <strong>{verUsuario(record.usuario)}</strong>\r\n                            </div>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ModalDetalle;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Tabla from \"../Tabla\";\r\nimport ModalDetalle from \"./ModalDetalle\";\r\nimport DetalleContrato from \"../contratos/ModalDetalle\";\r\nimport DetalleCliente from \"../clientes/ModalDetalle\";\r\nimport {\r\n    Popover,\r\n    DatePicker,\r\n    message,\r\n    Tooltip,\r\n    Space,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    PageHeader,\r\n    Button,\r\n    Modal\r\n} from \"antd\";\r\nimport {\r\n    ExceptionOutlined,\r\n    StopOutlined,\r\n    BarcodeOutlined,\r\n    CalendarOutlined,\r\n    CheckCircleOutlined,\r\n    ExclamationCircleOutlined,\r\n    InfoCircleOutlined\r\n} from \"@ant-design/icons\";\r\nimport locale from \"antd/es/date-picker/locale/es_ES\";\r\nimport app from \"../../firebaseConfig\";\r\nimport firebase from \"firebase\";\r\nimport moment from 'moment';\r\n\r\nconst { Search } = Input;\r\nconst { confirm } = Modal;\r\n\r\nlet ref = app.firestore();\r\n\r\nconst zeroPad = (num, places) => String(num).padStart(places, \"0\");\r\n\r\nlet opcFecha = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\r\n\r\nconst capitalize = (s) => {\r\n    if (typeof s !== \"string\") return s;\r\n    return s.charAt(0).toUpperCase() + s.slice(1);\r\n};\r\n\r\nconst verUsuario = (usr) => capitalize(usr.split('@')[0]);\r\n\r\nconst formatoDinero = (num) =>\r\n    new Intl.NumberFormat(\"es-SV\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    }).format(num);\r\n\r\n// Se debe evitar editar la fecha si ya se generó factura del pago\r\nconst SelectFecha = (props) => {\r\n    let { record, disabled } = props;\r\n    let fecha = null;\r\n    let mora = 0;\r\n\r\n    let selecFechaPago = async (codigo) => {\r\n\r\n        if (fecha && fechaMayor(fecha, record.fecha_cuota)) mora = 3;\r\n\r\n        ref.collection(\"pagos\")\r\n            .doc(codigo)\r\n            .get()\r\n            .then(async (d_pago) => {\r\n                if (d_pago.exists) {\r\n                    let pago = d_pago.data();\r\n                    d_pago.ref.update({\r\n                        fecha_pago: fecha,\r\n                        mora,\r\n                    });\r\n\r\n                    await ref.collection('contratos')\r\n                    .doc(pago.codigo_contrato)\r\n                    .update({\r\n                        fecha_ultimo_mes_pagado: fecha\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n                message.success(\"¡Fecha establecida correctamente!\")\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Space>\r\n            <DatePicker\r\n                disabled={disabled}\r\n                locale={locale}\r\n                format=\"DD-MMMM-YYYY\"\r\n                size=\"small\"\r\n                onChange={(date) => {\r\n                    fecha = date ? new Date(date.get()) : null;\r\n                }}\r\n            />\r\n            <CheckCircleOutlined\r\n                onClick={() => selecFechaPago(record.key)}\r\n                style={{ color: \"#389e0d\" }}\r\n            />\r\n        </Space>\r\n    );\r\n};\r\n\r\nconst fechaMayor = (fecha, fechaComparacion) => {\r\n    let f1 = fecha;\r\n    let f2 = fechaComparacion.toDate();\r\n\r\n    if (f1.getYear() > f2.getYear()) return true;\r\n    // Verdadero si el año es mayor\r\n    else if (f1.getYear() < f2.getYear()) return false; // Falso si el año es menor\r\n\r\n    // En caso que el año sea el mismo:\r\n    if (f1.getMonth() > f2.getMonth()) return true;\r\n    // Verdadero si el mes es mayor\r\n    else if (f1.getMonth() < f2.getMonth()) return false; // Falso su el mes es menor\r\n\r\n    // En caso que también el mes sea el mismo:\r\n    if (f1.getDate() > f2.getDate()) return true; // Verdadero si el día es mayor\r\n\r\n    return false; // Falso si es el mismo día o si es menor\r\n};\r\n\r\nconst verFecha = (fecha) => {\r\n    return capitalize(fecha.toDate().toLocaleDateString(\"es-SV\", {year: \"numeric\", month: \"short\", }));\r\n};\r\n\r\nconst cFecha = (fecha) => {\r\n    if (fecha) return fecha.toDate();\r\n    else return new Date();\r\n}\r\n\r\nclass Pagos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.refPagos = ref.collection(\"pagos\");\r\n        this.refRedes = app.firestore().collection(\"redes\");\r\n        this.refContratos = ref.collection(\"contratos\");\r\n        this.unsubscribe = null;\r\n\r\n        this.state = {\r\n            user: props.user.user,\r\n            busqueda: \"\",\r\n            loading: true,\r\n            pagos: [],\r\n            redes: [],\r\n            barcode: \"\",\r\n            codigoContrato: \"\",\r\n            codigoCliente: \"\",\r\n            registro: null,\r\n            modalDetalle: false,\r\n            detalleContrato: false,\r\n            detalleCliente: false,\r\n            selectFechaVisible: false,\r\n        };\r\n    }\r\n\r\n    verDetalle = (record) => {\r\n        this.setState({\r\n            registro: record,\r\n            modalDetalle: true\r\n        });\r\n    };\r\n\r\n    hide = () => {\r\n        this.setState({ selectFechaVisible: false });\r\n    };\r\n\r\n    handleVisibleChange = (selectFechaVisible) => {\r\n        this.setState({ selectFechaVisible });\r\n    };\r\n\r\n    obtenerRedes = (qs) => {\r\n        const redes = [];\r\n\r\n        qs.forEach((doc) => {\r\n            let { numero } = doc.data();\r\n\r\n            redes.push({\r\n                key: doc.id,\r\n                numero: numero,\r\n            });\r\n        });\r\n\r\n        this.setState({redes});\r\n    };\r\n\r\n    obtenerPagos = (querySnapshot) => {\r\n        const pagos = [];\r\n        const { busqueda } = this.state;\r\n        this.setState({ loading: true });\r\n\r\n        querySnapshot.forEach((doc) => {\r\n            let {\r\n                cantidad,\r\n                facturado,\r\n                codigo_contrato,\r\n                nombre_cliente,\r\n                numero_cuota,\r\n                fecha_creacion,\r\n                ref_cliente,\r\n                fecha_cuota,\r\n                fecha_pago,\r\n                mora,\r\n                mora_exonerada,\r\n                usuario\r\n            } = doc.data();\r\n\r\n            if (\r\n                busqueda &&\r\n                codigo_contrato.toLowerCase().indexOf(busqueda) === -1 &&\r\n                nombre_cliente.toLowerCase().indexOf(busqueda) === -1 &&\r\n                verFecha(fecha_cuota).toLowerCase().indexOf(busqueda) === -1 &&\r\n                cantidad.toString().indexOf(busqueda) === -1 &&\r\n                usuario.toLowerCase().indexOf(busqueda) === -1\r\n            ) {\r\n                return;\r\n            }\r\n\r\n            pagos.push({\r\n                key: doc.id,\r\n                cantidad,\r\n                codigo_contrato,\r\n                nombre_cliente,\r\n                numero_cuota,\r\n                fecha_creacion,\r\n                fecha_cuota,\r\n                fecha_pago,\r\n                mora,\r\n                mora_exonerada,\r\n                facturado,\r\n                ref_cliente,\r\n                usuario\r\n            });\r\n        });\r\n\r\n        this.setState({\r\n            pagos,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refPagos\r\n            .orderBy(\"fecha_creacion\", \"desc\")\r\n            .onSnapshot(this.obtenerPagos);\r\n\r\n        this.refRedes.orderBy(\"numero\").onSnapshot(this.obtenerRedes);\r\n    }\r\n\r\n    buscar(valor) {\r\n        if (valor.toLowerCase() !== this.state.busqueda) {\r\n            this.setState({ busqueda: valor.toLowerCase() });\r\n            this.refPagos\r\n                .get()\r\n                .then((querySnapshot) => this.obtenerPagos(querySnapshot));\r\n        }\r\n    }\r\n\r\n    columnas = this.asignarColumnas();\r\n\r\n    verDetalleContrato = (codigo) => {\r\n        this.setState({\r\n            codigoContrato: codigo,\r\n            detalleContrato: true\r\n        });\r\n    };\r\n\r\n    verDetalleCliente = (codigo) => {\r\n        this.setState({\r\n            codigoCliente: codigo,\r\n            detalleCliente: true\r\n        });\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalDetalle: false,\r\n            detalleCliente: false,\r\n            detalleContrato: false,\r\n        });\r\n    };\r\n\r\n    asignarColumnas() {\r\n        return [\r\n            {\r\n                title: \"Contrato\",\r\n                key: \"codigo_contrato\",\r\n                sorter: (a, b) => a.codigo_contrato.substr(1).localeCompare(b.codigo_contrato.substr(1)),\r\n                filters: [],\r\n                onFilter: (value, record) => record.codigo_contrato.indexOf(value) === 0,\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() =>\r\n                            this.verDetalleContrato(record.codigo_contrato)\r\n                        }\r\n                    >\r\n                        <strong>{record.codigo_contrato}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Cliente\",\r\n                key: \"nombre_cliente\",\r\n                sorter: (a, b) => a.nombre_cliente.localeCompare(b.nombre_cliente),\r\n                render: (record) => (\r\n                    <Button\r\n                        type=\"link\"\r\n                        onClick={() =>\r\n                            this.verDetalleCliente(record.ref_cliente.id)\r\n                        }\r\n                    >\r\n                        <strong>{record.nombre_cliente}</strong>\r\n                    </Button>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Cantidad\",\r\n                key: \"cantidad\",\r\n                sorter: (a, b) => a.cantidad.toString().localeCompare(b.cantidad.toString()),\r\n                render: (record) => (\r\n                    <strong>{formatoDinero(record.cantidad)}</strong>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Cuota\",\r\n                key: \"numero_cuota\",\r\n                sorter: (a, b) => a.numero_cuota.localeCompare(b.numero_cuota),\r\n                render: (record) => (\r\n                    <Space>\r\n                        {`${record.numero_cuota} - ${verFecha(record.fecha_cuota)}`}\r\n                    </Space>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Fecha de pago\",\r\n                key: \"fecha_pago\",\r\n                sorter: (a, b) => moment(cFecha(a.fecha_pago)).unix() - moment(cFecha(b.fecha_pago)).unix(),\r\n                render: (record) => (\r\n                    <Row justify=\"center\">\r\n                        <Col>\r\n                            {record.fecha_pago\r\n                                ? ` ${cFecha(record.fecha_pago)\r\n                                      .toLocaleDateString(\"es-SV\", opcFecha)} `\r\n                                : \"-\"\r\n                            }\r\n                            {\r\n                                !record.facturado &&\r\n                                <Popover\r\n                                    content={<SelectFecha disabled={record.facturado} record={record} />}\r\n                                    title=\"Seleccione\"\r\n                                    trigger=\"click\"\r\n                                >\r\n                                    <CalendarOutlined\r\n                                        disabled={record.facturado}\r\n                                        style={{ color: \"#1c86c6\" }}\r\n                                    />\r\n                                </Popover>\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Mora\",\r\n                key: \"mora\",\r\n                sorter: (a, b) => a.mora.toString().localeCompare(b.mora.toString()),\r\n                render: (record) => {\r\n                    let style = {\r\n                        textDecoration: \"none\",\r\n                    };\r\n\r\n                    if (record.mora_exonerada)\r\n                        style.textDecoration = \"line-through\";\r\n\r\n                    return (\r\n                        <Space size=\"small\">\r\n                            <strong style={style}>{formatoDinero(record.mora)}</strong>\r\n                            {\r\n                                (record.mora > 0 && !record.facturado) &&\r\n                                <Tooltip title=\"Alternar exoneración\">\r\n                                    <ExceptionOutlined\r\n                                        disabled={record.mora === 0}\r\n                                        key=\"exonerate\"\r\n                                        onClick={() => this.exonerarMora(record)}\r\n                                        style={{ color: '#2124ce' }}\r\n                                    />\r\n                                </Tooltip>\r\n                            }\r\n                        </Space>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                title: \"Facturado\",\r\n                key: \"facturado\",\r\n                sorter: (a, b) => a.facturado.toString().localeCompare(b.facturado.toString()),\r\n                align: \"center\",\r\n                render: (record) => (\r\n                    <Space>\r\n                        {record.facturado ? (\r\n                            <strong style={{ color: \"#52c41a\" }}>Sí</strong>\r\n                        ) : (\r\n                            <strong style={{ color: \"#165473\" }}>No</strong>\r\n                        )}\r\n                    </Space>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Usuario\",\r\n                key: \"usuario\",\r\n                sorter: (a, b) => verUsuario(a.usuario).localeCompare(verUsuario(b.usuario)),\r\n                align: \"center\",\r\n                render: (record) => (\r\n                    <strong>{verUsuario(record.usuario)}</strong>\r\n                ),\r\n            },\r\n            {\r\n                title: \"Opciones\",\r\n                key: \"opciones\",\r\n                render: (record) => (\r\n                    <Space size=\"middle\">\r\n                        <Tooltip title=\"Detalles\">\r\n                            <InfoCircleOutlined\r\n                                key=\"info\"\r\n                                onClick={() => this.verDetalle(record)}\r\n                                style={{ color: \"#0d9e8a\" }}\r\n                            />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Cancelar\">\r\n                            <StopOutlined\r\n                                key=\"cancel\"\r\n                                onClick={() => this.eliminar(record)}\r\n                                style={{ color: \"#f5222d\" }}\r\n                            />\r\n                        </Tooltip>\r\n                    </Space>\r\n                ),\r\n            },\r\n        ];\r\n    }\r\n\r\n    agregarPago = async (codigo) => {\r\n        let code = codigo.replace(/ /g, '');\r\n\r\n        if (/(\\d{20})/.test(code)) {\r\n            let exist = false;\r\n            let anteriorCancelado = false;\r\n            let _red = Number.parseInt(code.substr(0, 4));\r\n            let _ip = code.substr(5, 3);\r\n            let codContrato = `R${_red}-${_ip}-${code.substr(8, 4)}-${code.substr(12, 4)}`;\r\n\r\n            await this.refPagos\r\n                .doc(code)\r\n                .get()\r\n                .then((pago) => {\r\n                    if (pago.exists) {\r\n                        message.error(\"¡Esta cuota ya fue cancelada!\");\r\n                        exist = true;\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n\r\n            if (exist) return;\r\n\r\n            this.refContratos\r\n                .doc(codContrato)\r\n                .get()\r\n                .then(async (d_contrato) => {\r\n                    if (d_contrato.exists) {\r\n                        let contrato = d_contrato.data();\r\n                        let numCuota = Number.parseInt(code.substr(17, 4));\r\n\r\n                        if (contrato.estado !== 'activo') {\r\n                            message.error('No se pueden agregar pagos a este contrato');\r\n                            return;\r\n                        }\r\n\r\n                        if (numCuota > 1) { // Para validar si la anterior ya fue pagada\r\n                            await d_contrato.ref\r\n                                .collection(\"cuotas\")\r\n                                .doc(`${zeroPad(numCuota - 1, 2)}`)\r\n                                .get()\r\n                                .then((doc) => {\r\n                                    let cuota = doc.data();\r\n                                    if (cuota.cancelado) anteriorCancelado = true;\r\n                                });\r\n\r\n                            // Si la cuota anterior a esta no ha sido cancelada, entonces no se puede agregar el pago\r\n                            if (!anteriorCancelado) {\r\n                                message.error(\"La cuota anterior no ha sido cancelada aún\");\r\n                                return;\r\n                            }\r\n\r\n                            if (numCuota === contrato.cant_cuotas) { // Cambiar estado de contrato a finalizado si cancela todas las cuotas\r\n                                await d_contrato.ref.update({ estado: 'finalizado' });\r\n                            }\r\n                        }\r\n\r\n                        d_contrato.ref\r\n                            .collection('cuotas')\r\n                            .doc(`${zeroPad(numCuota, 2)}`)\r\n                            .get()\r\n                            .then((d_cuota) => {\r\n                                if (d_cuota.exists) {\r\n                                    let cuota = d_cuota.data();\r\n\r\n                                    this.refPagos\r\n                                        .doc(cuota.codigo)\r\n                                        .set({\r\n                                            cantidad: cuota.cantidad,\r\n                                            codigo_contrato: d_contrato.id,\r\n                                            ref_cliente: contrato.ref_cliente,\r\n                                            nombre_cliente: contrato.cliente,\r\n                                            numero_cuota: d_cuota.id,\r\n                                            fecha_cuota: cuota.fecha_pago,\r\n                                            fecha_pago: null,\r\n                                            mora: 0,\r\n                                            mora_exonerada: false,\r\n                                            facturado: false,\r\n                                            fecha_creacion: firebase.firestore.FieldValue.serverTimestamp(),\r\n                                            usuario: this.state.user.email\r\n                                        })\r\n                                        .then((doc) => {\r\n                                            d_cuota.ref\r\n                                                .update({ cancelado: true })\r\n                                                .then(() => {\r\n                                                    this.setState({ barcode: \"\" });\r\n                                                    message.success(\"Pago registrado\");\r\n                                                });\r\n\r\n                                            d_contrato.ref\r\n                                            .update({\r\n                                                ultima_cuota_pagada: d_cuota.id,\r\n                                                ultimo_mes_pagado: cuota.fecha_pago,\r\n                                                fecha_ultimo_mes_pagado: null\r\n                                            });\r\n                                        })\r\n                                        .catch((error) => {\r\n                                            message.error(\"Ocurrió un error, contacte con el administrador\");\r\n                                            console.log(error);\r\n                                        });\r\n                                }\r\n                            });\r\n                    } else {\r\n                        message.error(\"La cuota NO existe\");\r\n                    }\r\n                });\r\n        } else {\r\n            message.warn(\"El formato del código no es válido\");\r\n        }\r\n    };\r\n\r\n    exonerarMora = async (record) => {\r\n        await this.refPagos\r\n            .doc(record.key)\r\n            .update({\r\n                mora_exonerada: !record.mora_exonerada\r\n            })\r\n            .then(() => {\r\n                if (record.mora_exonerada)\r\n                    message.success('¡Se quitó la exoneración de la mora!')\r\n                else\r\n                    message.success('¡Se exoneró la mora correctamente!')\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                message.error('Ocurrió un error');\r\n            })\r\n    }\r\n\r\n    eliminar = async (record) => {\r\n        let siguienteCancelada = false;\r\n\r\n        if (record.facturado) {\r\n            message.error('¡Este pago ya fue facturado!')\r\n            return;\r\n        }\r\n\r\n        await this.refContratos\r\n            .doc(record.codigo_contrato)\r\n            .get()\r\n            .then(async (d_contrato) => {\r\n                if (d_contrato.exists) {\r\n                    let numCuota = Number.parseInt(record.numero_cuota);\r\n\r\n                    await d_contrato.ref\r\n                        .collection(\"cuotas\")\r\n                        .doc(zeroPad(numCuota + 1, 2))\r\n                        .get()\r\n                        .then((d_cuota) => {\r\n                            if (d_cuota.exists && d_cuota.data().cancelado) siguienteCancelada = true;\r\n                        });\r\n                }\r\n            });\r\n\r\n        // Si hay un pago más reciente, se debe eliminar ese primero\r\n        if (siguienteCancelada) {\r\n            message.error(\"Primero debe eliminar los pagos más recientes\");\r\n            return;\r\n        }\r\n\r\n        let me = this;\r\n\r\n        confirm({\r\n            title: \"¿Está seguro que desea eliminar este pago?\",\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: \"Eliminar pago\",\r\n            okText: \"Sí\",\r\n            cancelText: \"No\",\r\n            onOk() {\r\n                me.eliminarPago(record);\r\n            },\r\n        });\r\n    };\r\n\r\n    eliminarPago = async (record) => {\r\n        let numeroCuota = Number.parseInt(record.numero_cuota);\r\n        let ultimaCuotaPagada = null;\r\n        let ultimoMesPagado = null;\r\n        let fechaUltimoMesPagado = null;\r\n\r\n        await this.refPagos\r\n            .doc(`${record.key}`)\r\n            .delete()\r\n            .then(() => {\r\n                this.refContratos\r\n                    .doc(record.codigo_contrato)\r\n                    .get()\r\n                    .then(async (d_contrato) => {\r\n                        if (d_contrato.exists) {\r\n                            let contrato = d_contrato.data();\r\n\r\n                            if (contrato.estado !== 'activo') {\r\n                                message.error('No se puede eliminar este pago porque el contrato no está activo');\r\n                                return;\r\n                            }\r\n\r\n                            await d_contrato.ref\r\n                            .collection(\"cuotas\")\r\n                            .doc(record.numero_cuota)\r\n                            .get()\r\n                            .then((cuota) => {\r\n                                if (cuota.exists) {\r\n                                    cuota.ref\r\n                                        .update({ cancelado: false })\r\n                                        .then(() => {\r\n                                            message.success(\"Pago eliminado\");\r\n                                        });\r\n                                }\r\n                            });\r\n\r\n                            if (numeroCuota > 1) {\r\n                                await this.refPagos\r\n                                    .doc(`${record.key.substr(0, 16)}${zeroPad(numeroCuota - 1, 4)}`)\r\n                                    .get()\r\n                                    .then(d_pago => {\r\n                                        let pago = d_pago.data();\r\n                                        ultimoMesPagado = pago.fecha_cuota;\r\n                                        fechaUltimoMesPagado = pago.fecha_pago;\r\n                                        ultimaCuotaPagada = pago.numero_cuota;\r\n                                    })\r\n                                    .catch(error => {\r\n                                        console.log(error);\r\n                                    })\r\n                            }\r\n\r\n                            d_contrato.ref\r\n                            .update({\r\n                                ultima_cuota_pagada: ultimaCuotaPagada,\r\n                                ultimo_mes_pagado: ultimoMesPagado,\r\n                                fecha_ultimo_mes_pagado: fechaUltimoMesPagado,\r\n                            })\r\n                        } else {\r\n                            message.error(\"La cuota NO existe\");\r\n                        }\r\n                    });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            pagos,\r\n            redes,\r\n            loading,\r\n            registro,\r\n            modalDetalle,\r\n            detalleContrato,\r\n            detalleCliente,\r\n            codigoContrato,\r\n            codigoCliente,\r\n        } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {modalDetalle && (\r\n                    <ModalDetalle\r\n                        visible={modalDetalle}\r\n                        codigoPago={registro.key}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n\r\n                <PageHeader\r\n                    className=\"site-page-header\"\r\n                    title=\"Pagos\"\r\n                    subTitle=\"Agregar pago\"\r\n                    onBack={() => null}\r\n                    extra={[\r\n                        <Input\r\n                            key=\"1\"\r\n                            addonBefore={<BarcodeOutlined />}\r\n                            placeholder=\"Codigo de cuota\"\r\n                            style={{ width: 280 }}\r\n                            autoFocus\r\n                            maxLength={24}\r\n                            allowClear\r\n                            value={this.state.barcode}\r\n                            onChange={(ev) =>\r\n                                this.setState({ barcode: ev.target.value })\r\n                            }\r\n                            onKeyUp={(ev) => {\r\n                                if (ev.keyCode === 13) {\r\n                                    this.agregarPago(ev.target.value);\r\n                                }\r\n                            }}\r\n                        />,\r\n                    ]}\r\n                />\r\n                {detalleContrato && (\r\n                    <DetalleContrato\r\n                        visible={detalleContrato}\r\n                        codigoContrato={codigoContrato}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n                {detalleCliente && (\r\n                    <DetalleCliente\r\n                        visible={detalleCliente}\r\n                        codigoCliente={codigoCliente}\r\n                        handleCancel={this.handleCancel}\r\n                    />\r\n                )}\r\n\r\n                {\r\n                    !this.columnas[0].filters.length && // eslint-disable-next-line\r\n                    redes.map((red) => {\r\n                        this.columnas[0].filters.push({\r\n                            text: `Red ${red.numero}`,\r\n                            value: `R${red.numero}`,\r\n                        });\r\n                    })\r\n                }\r\n\r\n                <Tabla\r\n                    titulo={\r\n                        <>\r\n                            <Row justify=\"space-between\">\r\n                                <Col span={4}>\r\n                                    <strong>Lista de pagos</strong>\r\n                                </Col>\r\n                                <Col span={4} offset={5}>\r\n                                    <Space>\r\n                                        <Search\r\n                                            placeholder=\"Buscar\"\r\n                                            onSearch={(value) =>\r\n                                                this.buscar(value)\r\n                                            }\r\n                                            style={{ width: 180 }}\r\n                                        />\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    }\r\n                    columnas={this.columnas}\r\n                    data={pagos}\r\n                    loading={loading}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {\r\n        user: state.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pagos);\r\n","import React, { Component } from 'react';\r\nimport faker from 'faker';\r\nimport app from '../firebaseConfig';\r\nimport firebase from 'firebase';\r\nconst NumerosALetras = require('../NumerosALetras');\r\n\r\nclass Seed extends Component\r\n{\r\n    constructor(props) {\r\n        super(props);\r\n        this.name = faker.fake(\"{{name.firstName}} {{name.lastName}}\");\r\n\r\n        this.firestore = app.firestore();\r\n\r\n        this.refRedes = this.firestore.collection('redes');\r\n        this.refIps = this.firestore.collection('ips');\r\n        this.refClientes = this.firestore.collection('clientes');\r\n        this.refContratos = this.firestore.collection('contratos');\r\n        this.refPagos = this.firestore.collection('pagos');\r\n        this.refMantenimientos = this.firestore.collection('mantenimientos');\r\n        this.refFacturas = this.firestore.collection('facturas');\r\n\r\n        this.state = {\r\n            redes: [],\r\n            ips: [],\r\n            clientes: [],\r\n            contratos: [],\r\n            pagos: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Componente cargado');\r\n    }\r\n\r\n    makeData = () => {\r\n        // this.seedRedes();\r\n        // this.seedIps();\r\n        this.seedCientes();\r\n        // this.seedContratos();\r\n        // this.seedMantenimientos();\r\n        // this.seedFacturas();\r\n    }\r\n\r\n    setAvailableIPs = async () => {\r\n        await this.refIps.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                doc.ref.update({\r\n                    libre: true\r\n                })\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error actualizando las redes: \", error);\r\n        });\r\n    }\r\n\r\n    zeroPad = (num, places) => String(num).padStart(places, '0');\r\n\r\n    seedRedes = () => {\r\n        console.log('Agregando redes');\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 14; i < 22; i++){\r\n                this.refRedes.add({\r\n                    numero: i\r\n                })\r\n                .then(doc => {\r\n                    if (i === 15) {\r\n                        resolve('Redes insertadas');\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    seedIps = async () => {\r\n        let redes = [];\r\n        console.log('Agregando IPs');\r\n\r\n        await this.refRedes.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                redes.push({\r\n                    id: doc.id,\r\n                    numero: data.numero,\r\n                });\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(\"Error obteniendo documentos: \", error);\r\n        });\r\n\r\n        if (!redes.length) return;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 0; i < redes.length; i++) {\r\n                for (let j = 1; j < 254; j++) {\r\n                    this.refIps.doc(`${redes[i].numero}-${j}`).set({\r\n                        red: redes[i].numero,\r\n                        numero: j,\r\n                        libre: true\r\n                    })\r\n                    .then(doc => {\r\n                        if (redes.length === 2) {\r\n                            resolve('Direcciones IP insertadas')\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        reject(error);\r\n                    });\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    seedCientes = ()  => {\r\n        console.log('Agregando clientes');\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 1; i <= 25; i++){\r\n                let dui = faker.phone.phoneNumber('0#######-#');\r\n                let cliente = {\r\n                    dui,\r\n                    eliminado: false,\r\n                    nombre: faker.name.firstName(),\r\n                    apellido: faker.name.lastName(),\r\n                    telefono: faker.phone.phoneNumber('####-####'),\r\n                    direccion: `${faker.address.city()} ${faker.address.direction()}`,\r\n                    fecha_creacion: firebase.firestore.FieldValue.serverTimestamp()\r\n                }\r\n\r\n                this.refClientes.doc(dui).set(cliente)\r\n                .then(doc => {\r\n                    if (i === 25) {\r\n                        resolve('Clientes insertados');\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    seedContratos = async () => {\r\n        let redes = [];\r\n        let ips = [];\r\n        let clientes = [];\r\n\r\n        await this.refRedes.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                redes.push({\r\n                    id: doc.id,\r\n                    numero: data.numero\r\n                });\r\n            });\r\n        });\r\n\r\n        await this.refIps.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                ips.push({\r\n                    id: doc.id,\r\n                    red: data.red,\r\n                    numero: data.numero\r\n                });\r\n            });\r\n        });\r\n\r\n        await this.refClientes.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                clientes.push({\r\n                    id: doc.id,\r\n                    dui: data.dui,\r\n                    nombre: data.nombre,\r\n                    apellido: data.apellido,\r\n                    ref: doc.ref\r\n                });\r\n            });\r\n        });\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 1; i <= 25; i++){\r\n                let red = redes[faker.random.number({min: 0, max: redes.length - 1})];\r\n                let ip = ips[faker.random.number({min: 0, max: ips.length - 1})]\r\n                let cliente = clientes[faker.random.number({min: 0, max: clientes.length - 1})];\r\n                let dui_cliente = cliente.dui;\r\n                let fecha_inicio = faker.date.past(faker.random.number({min: 0, max: 5}), new Date());\r\n                let fecha_fin = new Date(fecha_inicio);\r\n                fecha_fin.setMonth(fecha_fin.getMonth() + 17)\r\n\r\n                let mes_inicio = fecha_inicio.getMonth() + 1;\r\n                let mes_fin = fecha_fin.getMonth() + 1;\r\n\r\n                let f_inicio = `${this.zeroPad(mes_inicio, 2)}${fecha_inicio.getFullYear().toString().substr(-2)}`;\r\n                let f_fin = `${this.zeroPad(mes_fin, 2)}${fecha_fin.getFullYear().toString().substr(-2)}`;\r\n\r\n                let contrato = {\r\n                    estado: 'activo', // Activo, Archivado, Eliminado\r\n                    cliente: `${cliente.nombre} ${cliente.apellido}`,\r\n                    codigo: `R${red.numero}-${this.zeroPad(ip.numero, 3)}-${f_inicio}-${f_fin}`,\r\n                    cant_cuotas: 18,\r\n                    dui_cliente,\r\n                    red: red.numero,\r\n                    ip: ip.numero,\r\n                    fecha_ingreso: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    fecha_inicio,\r\n                    fecha_fin,\r\n                    precio_cuota: faker.random.float({min: 15, max: 60}),\r\n                    velocidad: faker.random.number({min: 1, max: 50}),\r\n                    ref_cliente: cliente.ref,\r\n                }\r\n\r\n                this.refContratos.doc(`${contrato.codigo}`).set(contrato)\r\n                .then(() => {\r\n                    let _codContrato = contrato.codigo.split('-');\r\n                    let _red = Number.parseInt(_codContrato[0].substr(1));\r\n                    let fecha_pago = new Date(fecha_inicio);\r\n\r\n                    fecha_pago.setMonth(fecha_pago.getMonth() - 1)\r\n\r\n                    for (let i = 1; i <= 18; i++) {\r\n                        let cuota = {\r\n                            codigo: `${this.zeroPad(_red, 4)}-0${_codContrato[1]}-${contrato.codigo.substr(8)}-${this.zeroPad(i, 4)}`,\r\n                            cantidad: contrato.precio_cuota,\r\n                            fecha_pago: new Date(fecha_pago.setMonth(fecha_pago.getMonth() + 1)),\r\n                            cancelado: false\r\n                        }\r\n\r\n                        this.refContratos.doc(`${contrato.codigo}`).collection('cuotas').doc(`${this.zeroPad(i, 2)}`).set(cuota);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    seedPagos = () => {\r\n\r\n    }\r\n\r\n    seedMantenimientos = async () => {\r\n        let contratos = [];\r\n\r\n        console.log('Agregando mantenimientos');\r\n\r\n        await this.refContratos.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                contratos.push({\r\n                    id: doc.id,\r\n                    codigo: data.codigo,\r\n                    cliente: data.cliente,\r\n                    ref_cliente: data.ref_cliente,\r\n                    ref: doc.ref\r\n                });\r\n            });\r\n        });\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 1; i <= 10; i++){\r\n                let contrato = contratos[faker.random.number({min: 0, max: contratos.length - 1})];\r\n\r\n                let mantto = {\r\n                    fecha: faker.date.past(0, new Date()),\r\n                    eliminado: false,\r\n                    codigo_contrato: contrato.codigo,\r\n                    nombre_cliente: contrato.cliente,\r\n                    ref_cliente: contrato.ref_cliente,\r\n                    direccion: `${faker.address.city()} ${faker.address.direction()}`, // Cuando se ingrese el valor verdadero se debe obtener del cliente\r\n                    motivo: faker.lorem.words(),\r\n                    descripcion: faker.lorem.paragraph(),\r\n                    fecha_creacion: firebase.firestore.FieldValue.serverTimestamp()\r\n                }\r\n\r\n                this.refMantenimientos.add(mantto)\r\n                .then(doc => {\r\n                    if (i === 10) resolve('Mantenimientos insertados');\r\n                })\r\n                .catch((error) => {\r\n                    reject(error);\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    seedFacturas = async () => {\r\n        let contratos = [];\r\n        let pagos = [];\r\n\r\n        console.log('Agregando facturas');\r\n\r\n        await this.refContratos.get()\r\n        .then(querySnapshot => {\r\n            querySnapshot.forEach(function(doc) {\r\n                let data = doc.data();\r\n\r\n                contratos.push({\r\n                    id: doc.id,\r\n                    codigo: data.codigo,\r\n                    cliente: data.cliente,\r\n                    ref_cliente: data.ref_cliente,\r\n                    ref: doc.ref\r\n                });\r\n            });\r\n        });\r\n\r\n        contratos.forEach(async contrato => {\r\n            await this.refPagos\r\n                    .where('codigo_contrato', '==', contrato.codigo)\r\n                    // .where('facturado', '==', false)\r\n                    .get()\r\n                    .then(qs => {\r\n                        qs.forEach(doc => {\r\n                            let { cantidad, fecha_cuota, fecha_pago, numero_cuota, ref_cliente } = doc.data();\r\n\r\n                            pagos.push({\r\n                                id: doc.id,\r\n                                cantidad,\r\n                                fecha_cuota,\r\n                                fecha_pago,\r\n                                numero_cuota,\r\n                                ref_cliente,\r\n                                ref: doc.ref\r\n                            });\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n\r\n            pagos.forEach(pago => {\r\n                let periodo =  pago.fecha_cuota.toDate().toLocaleString('es-SV', { year: 'numeric', month: 'short' });\r\n                let factura = {\r\n                    fecha: faker.date.past(0, new Date()),\r\n                    cantidad_pagos: 1,\r\n                    periodo,\r\n                    detalle: `Servicio de conexión a internet de banda ancha, correspondiente al periodo de ${periodo}`,\r\n                    precio_pago: pago.cantidad,\r\n                    total: pago.cantidad,\r\n                    total_letras: NumerosALetras.default(pago.cantidad),\r\n                    eliminado: false,\r\n                    codigo_contrato: contrato.codigo,\r\n                    nombre_cliente: contrato.cliente,\r\n                    ref_cliente: contrato.ref_cliente,\r\n                    fecha_creacion: firebase.firestore.FieldValue.serverTimestamp()\r\n                }\r\n\r\n                // console.log(factura);\r\n                this.refFacturas.add(factura)\r\n                .then(doc => {\r\n                    pago.ref.update({ facturado: true });\r\n                })\r\n                .catch((error) => {\r\n                    // reject(error);\r\n                });\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    clearData = () => {\r\n        let pRedes = this.rollback(this.refRedes);\r\n        let pIps = this.rollback(this.refIps);\r\n        let pClientes = this.rollback(this.refClientes);\r\n        let pContratos = this.rollback(this.refContratos, 'cuotas');\r\n        let pPagos = this.rollback(this.refPagos);\r\n\r\n        console.log('Estamos eliminando la info');\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([pRedes, pIps, pClientes, pContratos, pPagos])\r\n            .then(values => {\r\n                console.log('Se terminó de eliminar la info');\r\n                resolve(values);\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            })\r\n        })\r\n    }\r\n\r\n    rollback = (ref, subRef) => {\r\n        console.log(`Eliminando ${ref.path}`);\r\n        return new Promise((resolve, reject) => {\r\n            ref.get()\r\n            .then(querySnapshot => {\r\n                querySnapshot.forEach(function(doc) {\r\n                    if (subRef) {\r\n                        ref.doc(doc.id).collection(subRef)\r\n                        .get()\r\n                        .then(qs => {\r\n                            qs.forEach(dc => {\r\n                                ref.doc(doc.id).collection(subRef).doc(dc.id).delete();\r\n                            })\r\n                        })\r\n                    }\r\n\r\n                    ref.doc(doc.id).delete(); // Eliminar el elemento encontrado\r\n                });\r\n\r\n                resolve('Ok');\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button onClick={this.makeData}>Make data</button>\r\n                <button onClick={this.clearData}>Clear data</button>\r\n                <button onClick={this.setAvailableIPs}>Set Available IPs</button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Seed;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    // BrowserRouter as ReactRouter,\r\n    Route,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\nimport App from './App';\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Clientes from './components/clientes/Clientes';\r\nimport Contratos from './components/contratos/Contratos';\r\nimport Mantenimientos from './components/mantenimientos/Mantenimientos';\r\nimport Facturas from './components/facturas/Facturas';\r\nimport Pagos from './components/pagos/Pagos';\r\n\r\nimport Seed from './seeds/Seed';\r\nimport { connect } from 'react-redux';\r\nimport app from './firebaseConfig';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport * as actions from './actions/userActions';\r\n\r\nclass Router extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        app.auth().onAuthStateChanged(user => {\r\n            this.props.dispatch(actions.login(user));\r\n        });\r\n    }\r\n\r\n    signedIn(){\r\n        return this.props.user.user;\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <ConnectedRouter history={ this.props.history }>\r\n                <Switch>\r\n                    <Route exact path=\"/seed\" component={Seed} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    { this.signedIn() ? null : <Redirect to=\"/login\" />}\r\n                    <App>\r\n                        <Route exact path=\"/\" component={Dashboard} />\r\n                        <Route exact path=\"/clientes\" component={Clientes} />\r\n                        <Route exact path=\"/contratos\" render={() => <Contratos />} />\r\n                        <Route exact path=\"/pagos\" component={Pagos} />\r\n                        <Route exact path=\"/facturas\" component={Facturas} />\r\n                        <Route exact path=\"/mantenimientos\" component={Mantenimientos} />\r\n                    </App>\r\n                </Switch>\r\n            </ConnectedRouter>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownState){\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Router);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import user from './userReducer';\r\n\r\n// eslint-disable-next-line\r\nexport default { user };\r\n","export default function userReducer(state = {}, action)\r\n{\r\n    switch (action.type) {\r\n        case 'LOG_IN':\r\n            return { user: action.user };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    createStore, // Crea el contenedor del estado de la app\r\n    combineReducers, // Para trabajar con reducers separados\r\n    compose,\r\n    applyMiddleware\r\n} from 'redux';\r\nimport reducers from '../reducers';\r\nimport persistState from 'redux-localstorage'; // Permite almacenar información de redux al local storage\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { routerMiddleware } from 'connected-react-router'\r\n\r\nconst rootReducer = (history) => combineReducers({\r\n    ...reducers,\r\n    router: connectRouter(history)\r\n});\r\n\r\nexport default function configureStore(history){\r\n    // console.log(history)\r\n    return createStore(\r\n        rootReducer(history),\r\n        compose(\r\n            applyMiddleware(routerMiddleware(history)),\r\n            persistState('user'),\r\n            // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        ),\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Router from './Router';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from \"./store/configureStore\";\r\nimport { Provider } from 'react-redux';\r\nimport { createHashHistory } from 'history';\r\n\r\nconst history = createHashHistory();\r\n\r\nconst store = configureStore(history);\r\n\r\nReactDOM.render(\r\n    <Provider store={ store }>\r\n        <Router history={history} />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","let capitalizeFirst = (str) => {\r\n    return `${str.charAt(0).toUpperCase()}${str.slice(1)}`;\r\n}\r\n\r\nfunction Unidades(num){\r\n\r\n    switch(num)\r\n    {\r\n        case 1: return \"un\";\r\n        case 2: return \"dos\";\r\n        case 3: return \"tres\";\r\n        case 4: return \"cuatro\";\r\n        case 5: return \"cinco\";\r\n        case 6: return \"seis\";\r\n        case 7: return \"siete\";\r\n        case 8: return \"ocho\";\r\n        case 9: return \"nueve\";\r\n        default: return \"\";\r\n    }\r\n}//Unidades()\r\n\r\nfunction Decenas(num){\r\n\r\n    let decena = Math.floor(num/10);\r\n    let unidad = num - (decena * 10);\r\n\r\n    switch(decena)\r\n    {\r\n        case 1:\r\n            switch(unidad)\r\n            {\r\n                case 0: return \"diez\";\r\n                case 1: return \"once\";\r\n                case 2: return \"doce\";\r\n                case 3: return \"trece\";\r\n                case 4: return \"catorce\";\r\n                case 5: return \"quince\";\r\n                default: return \"dieci\" + Unidades(unidad);\r\n            }\r\n        case 2:\r\n            switch(unidad)\r\n            {\r\n                case 0: return \"veinte\";\r\n                default: return \"veinti\" + Unidades(unidad);\r\n            }\r\n        case 3: return DecenasY(\"treinta\", unidad);\r\n        case 4: return DecenasY(\"cuarenta\", unidad);\r\n        case 5: return DecenasY(\"cincuenta\", unidad);\r\n        case 6: return DecenasY(\"sesenta\", unidad);\r\n        case 7: return DecenasY(\"setenta\", unidad);\r\n        case 8: return DecenasY(\"ochenta\", unidad);\r\n        case 9: return DecenasY(\"noventa\", unidad);\r\n        case 0: return Unidades(unidad);\r\n        default: return \"\";\r\n    }\r\n}//Unidades()\r\n\r\nfunction DecenasY(strSin, numUnidades) {\r\n    if (numUnidades > 0)\r\n    return strSin + \" Y \" + Unidades(numUnidades)\r\n\r\n    return strSin;\r\n}//DecenasY()\r\n\r\nfunction Centenas(num) {\r\n    let centenas = Math.floor(num / 100);\r\n    let decenas = num - (centenas * 100);\r\n\r\n    switch(centenas)\r\n    {\r\n        case 1:\r\n            if (decenas > 0)\r\n                return \"ciento \" + Decenas(decenas);\r\n            return \"cien\";\r\n        case 2: return \"doscientos \" + Decenas(decenas);\r\n        case 3: return \"trescientos \" + Decenas(decenas);\r\n        case 4: return \"cuatrocientos \" + Decenas(decenas);\r\n        case 5: return \"quinientos \" + Decenas(decenas);\r\n        case 6: return \"seiscientos \" + Decenas(decenas);\r\n        case 7: return \"setecientos \" + Decenas(decenas);\r\n        case 8: return \"ochocientos \" + Decenas(decenas);\r\n        case 9: return \"novecientos \" + Decenas(decenas);\r\n        default: return Decenas(decenas);\r\n    }\r\n}//Centenas()\r\n\r\nfunction Seccion(num, divisor, strSingular, strPlural) {\r\n    let cientos = Math.floor(num / divisor)\r\n    let resto = num - (cientos * divisor)\r\n\r\n    let letras = \"\";\r\n\r\n    if (cientos > 0)\r\n        if (cientos > 1)\r\n            letras = Centenas(cientos) + \" \" + strPlural;\r\n        else\r\n            letras = strSingular;\r\n\r\n    if (resto > 0)\r\n        letras += \"\";\r\n\r\n    return letras;\r\n}//Seccion()\r\n\r\nfunction Miles(num) {\r\n    let divisor = 1000;\r\n    let cientos = Math.floor(num / divisor)\r\n    let resto = num - (cientos * divisor)\r\n\r\n    let strMiles = Seccion(num, divisor, \"un mil\", \"mil\");\r\n    let strCentenas = Centenas(resto);\r\n\r\n    if(strMiles === \"\")\r\n        return strCentenas;\r\n\r\n    return strMiles + \" \" + strCentenas;\r\n}//Miles()\r\n\r\nfunction Millones(num) {\r\n    let divisor = 1000000;\r\n    let cientos = Math.floor(num / divisor)\r\n    let resto = num - (cientos * divisor)\r\n\r\n    let strMillones = Seccion(num, divisor, \"un millón de\", \"millones de\");\r\n    let strMiles = Miles(resto);\r\n\r\n    if(strMillones === \"\")\r\n        return strMiles;\r\n\r\n    return strMillones + \" \" + strMiles;\r\n}//Millones()\r\n\r\n\r\n\r\nexport default function NumeroALetras(num, dinero = true) {\r\n    var data = {\r\n        numero: num,\r\n        enteros: Math.floor(num),\r\n        centavos: (((Math.round(num * 100)) - (Math.floor(num) * 100))),\r\n        letrasCentavos: \"\",\r\n        letrasMonedaPlural: \"dólares\",\r\n        letrasMonedaSingular: \"dólar\",\r\n    };\r\n\r\n    data.letrasCentavos = `${data.centavos}/100`;\r\n\r\n    if (!dinero) return capitalizeFirst(Millones(data.enteros));\r\n\r\n    if(data.enteros === 0)\r\n        return `Cero ${data.letrasCentavos} ${data.letrasMonedaPlural}`;\r\n    if (data.enteros === 1)\r\n        return `${capitalizeFirst(Millones(data.enteros))} ${data.letrasCentavos} ${data.letrasMonedaSingular}`;\r\n    else\r\n        return `${capitalizeFirst(Millones(data.enteros))} ${data.letrasCentavos} ${data.letrasMonedaPlural}`;\r\n}\r\n"],"sourceRoot":""}